<?xml version="1.0" encoding="UTF-8"?>
<wsdl:definitions name="VidyoPortalUserService" targetNamespace="http://portal.vidyo.com/user/v1_1" xmlns="http://portal.vidyo.com/user/v1_1" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:tns="http://portal.vidyo.com/user/v1_1" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/">
  <wsdl:types>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://portal.vidyo.com/user/v1_1" xmlns="http://portal.vidyo.com/user/v1_1">

			<xs:annotation>
				<xs:documentation xml:lang="en"/>
			</xs:annotation>

			<xs:element name="ClientType">
				<xs:annotation>
					<xs:documentation>
						Type is 'W' for Windows platform.
						Type is 'M' for
						MacOS platform.
						Type is 'V' for VidyoRoom HD200 (Windows platform).
						Type is 'R' for VidyoRoom HD100/HD50 (Windows platform).
						Type is
						'L' for Linux platform.
						Type is 'S' for SL5 platform.
						Type is 'U'
						for Ubuntu platform.
						Type is 'T' for SL5 64bit platform.
						Type is 'X'
						for Ubuntu 64bit platform.
						Type is 'I' for iOS
						Type is 'A' for
						Android
						Type is 'P' for VidyoPanorama VP600.
						Type is 'N' for
						VidyoPanorama 600 running Windows 64-bit.
						Type is 'E'
						for
						VidyoPanorama 600 running Linux 32-bit.
						Type is 'O' for
						VidyoPanorama 600 running Linux 64-bit.
						Type is 'Q' for VidyoRoom
						running Windows 32-bit.
						Type is 'Y' for VidyoRoom running Windows
						64-bit.
						Type is 'F' for
						VidyoRoom running Linux 32-bit.
						Type is 'Z'
						for VidyoRoom running Linux 64-bit.
						Type is 'B' for VidyoRoom SE
						Windows.
						Type is 'C' for VidyoRoom SE Linux.
						Type is 'D' for
						VidyoRoom SE OS X.
					</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:enumeration value="W"/>
						<xs:enumeration value="M"/>
						<xs:enumeration value="V"/>
						<xs:enumeration value="R"/>
						<xs:enumeration value="L"/>
						<xs:enumeration value="S"/>
						<xs:enumeration value="U"/>
						<xs:enumeration value="T"/>
						<xs:enumeration value="X"/>
						<xs:enumeration value="I"/>
						<xs:enumeration value="A"/>
						<xs:enumeration value="P"/>
						<xs:enumeration value="N"/>
						<xs:enumeration value="E"/>
						<xs:enumeration value="O"/>
						<xs:enumeration value="Q"/>
						<xs:enumeration value="Y"/>
						<xs:enumeration value="F"/>
						<xs:enumeration value="Z"/>
						<xs:enumeration value="B"/>
						<xs:enumeration value="C"/>
						<xs:enumeration value="D"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>

			<xs:element name="OK">
				<xs:annotation>
					<xs:documentation>
						string representation of successful operation -
						'ok'
					</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:enumeration value="OK"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>

			<xs:element name="ErrorMessage" type="xs:string">
				<xs:annotation>
					<xs:documentation>String presentation of fault</xs:documentation>
				</xs:annotation>
			</xs:element>

			<xs:element name="GeneralFault">
				<xs:annotation>
					<xs:documentation>
						This means that the exceptions happens in system.
					</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element ref="tns:ErrorMessage"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>

			<xs:element name="InvalidArgumentFault">
				<xs:annotation>
					<xs:documentation>
						This means that the arguments which are passed
						into services are wrong.
					</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element ref="tns:ErrorMessage"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>

			<xs:element name="SeatLicenseExpiredFault">
				<xs:annotation>
					<xs:documentation>
						This means that the seat license has expired and
						needs to be renewed.
					</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element ref="tns:ErrorMessage"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>

			<xs:element name="WrongPINFault">
				<xs:annotation>
					<xs:documentation>
						This means that the PIN provided to
						joinConference is wrong.
					</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element ref="tns:ErrorMessage"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>

			<xs:element name="ConferenceLockedFault">
				<xs:annotation>
					<xs:documentation>
						This means that the conference provided by
						EntityID is unable to be join, due to the fact that it is locked.
					</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element ref="tns:ErrorMessage"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>

			<xs:element name="NotLicensedFault">
				<xs:annotation>
					<xs:documentation>
						This means that usage of API is not licensed.
					</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element ref="tns:ErrorMessage"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>

			<xs:element name="ResourceNotAvailableFault">
				<xs:annotation>
					<xs:documentation>
						Resources are not available for the requested
						operation.
					</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element ref="tns:ErrorMessage"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>

			<xs:element name="AccessRestrictedFault">
				<xs:annotation>
					<xs:documentation>
						Access Restriction to Login through Mobile device
					</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element ref="tns:ErrorMessage"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>

			<xs:element name="InvalidModeratorPINFormatFault">
				<xs:complexType>
					<xs:sequence>
						<xs:element ref="tns:ErrorMessage"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>

			<xs:element name="ControlMeetingFault">
				<xs:complexType>
					<xs:sequence>
						<xs:element ref="tns:ErrorMessage"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>

			<xs:element name="ScheduledRoomCreationFault">
				<xs:complexType>
					<xs:sequence>
						<xs:element ref="tns:ErrorMessage"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>

			<xs:element name="TestcallRoomCreationFault">
				<xs:complexType>
					<xs:sequence>
						<xs:element ref="tns:ErrorMessage"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>

			<xs:element name="EndpointNotBoundFault">
				<xs:annotation>
					<xs:documentation>
						Endpoint not bound to the user requesting the
						operation.
					</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element ref="tns:ErrorMessage"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>

			<xs:element name="InPointToPointCallFault">
				<xs:annotation>
					<xs:documentation>
						This means that the user is in point to point
						call and the conferenceID cannot be returned.
					</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element ref="tns:ErrorMessage"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>

			<xs:element name="PrefixNotConfiguredException">
				<xs:annotation>
					<xs:documentation>
						Error when Portal Prefix not configured.
					</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element ref="tns:ErrorMessage"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>

			<xs:element name="FeatureNotAvailableFault">
				<xs:annotation>
					<xs:documentation>
						Returns when the method is being called when both
						features are disabled on the VidyoPortal.
					</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element ref="tns:ErrorMessage"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>

			<xs:element name="VidyoReplayNotAvailableFault">
				<xs:annotation>
					<xs:documentation>
						Returned when VidyoReplay is not set up on the
						specified tenant.
					</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element ref="tns:ErrorMessage"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>

			<xs:element name="RoomNotFoundFault">
				<xs:complexType>
					<xs:sequence>
						<xs:element ref="tns:ErrorMessage"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="PublicRoomCreationFault">
				<xs:complexType>
					<xs:sequence>
						<xs:element ref="tns:ErrorMessage"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="PublicRoomDescUpdationFault">
				<xs:complexType>
					<xs:sequence>
						<xs:element ref="tns:ErrorMessage"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="NotAllowedToCreateFault">
				<xs:complexType>
					<xs:sequence>
						<xs:element ref="tns:ErrorMessage"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>

			<xs:element name="FileTooLargeFault">
				<xs:annotation>
					<xs:documentation>
						This means user is trying to upload display image
						which is larger than allowed size.
					</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element ref="tns:ErrorMessage"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>

			<xs:element name="NotAllowedThumbnailPhotoFault">
				<xs:annotation>
					<xs:documentation>
						This means admin hasn't given user access for the
						display image upload.
					</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element ref="tns:ErrorMessage"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>

			<xs:element name="InvalidFault">
				<xs:complexType>
					<xs:sequence>
						<xs:element ref="tns:ErrorMessage"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>

			<xs:element name="InvalidConferenceFault">
				<xs:complexType>
					<xs:sequence>
						<xs:element ref="tns:ErrorMessage"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>

			<xs:element name="InvalidParticipantFault">
				<xs:complexType>
					<xs:sequence>
						<xs:element ref="tns:ErrorMessage"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>

			<xs:element name="LogAggregationDisabledFault">
				<xs:complexType>
					<xs:sequence>
						<xs:element ref="tns:ErrorMessage"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>

			<xs:element name="Language">
				<xs:annotation>
					<xs:documentation>Languages supported by VidyoPortal
					</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:enumeration value="en"/>
						<xs:enumeration value="de"/>
						<xs:enumeration value="es"/>
						<xs:enumeration value="fr"/>
						<xs:enumeration value="it"/>
						<xs:enumeration value="ja"/>
						<xs:enumeration value="ko"/>
						<xs:enumeration value="pt"/>
						<xs:enumeration value="zh_CN"/>
						<xs:enumeration value="fi"/>
						<xs:enumeration value="pl"/>
						<xs:enumeration value="zh_TW"/>
						<xs:enumeration value="th"/>
						<xs:enumeration value="ru"/>
						<xs:enumeration value="tr"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>

			<xs:element name="EntityType">
				<xs:annotation>
					<xs:documentation>
						There are three types of entities in VidyoPortal:
						1. Member - A member is an authorized user of VidyoPortal with a
						user account.
						- A member may have at the most one personal room.
						- A
						member has a display name
						- A member has an extension that can also
						be used for search purposes.

						2. Room - It is a meeting place. Rooms
						are of two kinds:
						- Personal, as explained above
						- Public. Each room
						has a owner assigned who can control the room.

						3. Legacy - This
						entity represents external endpoints. Think of it as a label to
						identify and search external devices.
						Legacy entity does not have
						an account on the VidyoPortal. There is no owner assigned to
						legacy devices.
					</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:enumeration value="Member"/>
						<xs:enumeration value="Room"/>
						<xs:enumeration value="Legacy"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>

			<xs:element name="MemberMode">
				<xs:annotation>
					<xs:documentation>
						The Member can override the current status with
						these possible values. Changing a mode will impact VidyoPortal
						operations.
						For e.g. if the mode is set to DoNotDisturb for a
						member, this member will not get any incoming requests to join a
						meeting or a direct call.
					</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:enumeration value="Available"/>
						<xs:enumeration value="Away"/>
						<xs:enumeration value="DoNotDisturb"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>

			<xs:element name="MemberStatus">
				<xs:annotation>
					<xs:documentation>
						Describes the member status based on the
						operation state of the endpoint in use by the member:
						- Status is
						'Offline' and hence can't be reached for a conference.
						- Status is
						'Online' and can be reached for a conference or a direct call.
						-
						Status is 'Busy' in conference and can't can be reached for
						another conference or a direct call.
						- Status is 'BusyInOwnRoom' in
						conference in own personal room and can't can be reached for
						another conference.
						- Status is 'Ringing' endpoint associated with
						member start to ring on receive direct call or invite event from
						other part.
						- Status is 'RingAccepted' endpoint associated with
						member accept the call from other part.
						- Status is 'RingRejected'
						endpoint associated with member reject the call from other part.
						-
						Status is 'RingNoAnswer' endpoint associated with member is not
						answered in some period of time.
						- Status is 'Alerting' endpoint
						associated with member is alerting about outcome call.
						- Status is
						'AlertCancelled' endpoint associated with member is stop to be
						alerting about outcome call.
					</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:enumeration value="Offline"/>
						<xs:enumeration value="Online"/>
						<xs:enumeration value="Busy"/>
						<xs:enumeration value="BusyInOwnRoom"/>
						<xs:enumeration value="Ringing"/>
						<xs:enumeration value="RingAccepted"/>
						<xs:enumeration value="RingRejected"/>
						<xs:enumeration value="RingNoAnswer"/>
						<xs:enumeration value="Alerting"/>
						<xs:enumeration value="AlertCancelled"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>

			<xs:element name="RoomStatus">
				<xs:annotation>
					<xs:documentation>
						Status is 'Empty' and hence can be used for
						meeting.
						Status is 'Full' and is not accepting any more
						participants to the meeting.
						Status is 'Occupied' some participants
						use the room for meeting.
					</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:enumeration value="Empty"/>
						<xs:enumeration value="Full"/>
						<xs:enumeration value="Occupied"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>

			<xs:element name="RoomMode">
				<xs:annotation>
					<xs:documentation>
						- 'roomURL' (optional) means that room has an URL
						to be used to join the meeting. Typically used for sending
						invitations to users via mail, etc.
						- 'roomLocked' means the owner
						is not allowing any more participants to join the room.
						- 'hasPIN'
						means that the participant is required to enter a PIN in order to
						join this room.
						- 'roomPIN' (optional) is the actual PIN that
						participant uses to enter the room.
						- 'hasModeratorPIN' (optional)
						means that the participant is
						required to enter a Moderator PIN in
						order to control this room.
						- 'moderatorPIN' (optional) is the
						actual Moderator PIN that
						participant uses to control the room.
					</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element minOccurs="0" name="roomURL" nillable="true" type="xs:string"/>
						<xs:element name="isLocked" type="xs:boolean"/>
						<xs:element name="hasPIN" type="xs:boolean"/>
						<xs:element minOccurs="0" name="roomPIN" nillable="true" type="xs:string"/>
						<xs:element minOccurs="0" name="hasModeratorPIN" nillable="true" type="xs:boolean"/>
						<xs:element minOccurs="0" name="moderatorPIN" nillable="true" type="xs:string"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>

			<xs:simpleType name="sortDir">
				<xs:restriction base="xs:string">
					<xs:enumeration value="ASC"/>
					<xs:enumeration value="DESC"/>
				</xs:restriction>
			</xs:simpleType>

			<xs:element name="Filter">
				<xs:annotation>
					<xs:documentation>
						Filter for search queries.
						A SOAP fault will be
						thrown if limit exceeds 200. Default value for limit is 40.
						Anything higher than 40 may result in poor system performance.
					</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element minOccurs="0" name="start" nillable="true" type="xs:int"/>
						<xs:element minOccurs="0" name="limit" nillable="true" type="xs:int"/>
						<xs:element minOccurs="0" name="sortBy" nillable="true" type="xs:string"/>
						<xs:element minOccurs="0" name="dir" nillable="true" type="tns:sortDir"/>
						<xs:element minOccurs="0" ref="tns:EntityType"/>
						<xs:element minOccurs="0" name="query" nillable="true" type="xs:string"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>

			<xs:simpleType name="EntityID">
				<xs:annotation>
					<xs:documentation>
						This is an ID of addressing object in VidyoPortal
						(Member, Room, or Legacy device).
					</xs:documentation>
				</xs:annotation>
				<xs:restriction base="xs:string">
					<xs:pattern value="[0-9]+"/>
				</xs:restriction>
			</xs:simpleType>

			<xs:element name="Entity">
				<xs:annotation>
					<xs:documentation>
						This object is returned as a result of search for
						member, public room, or legacy device.
					</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="entityID" type="tns:EntityID"/>
						<xs:element minOccurs="0" name="participantID" nillable="true" type="tns:EntityID"/>
						<xs:element ref="tns:EntityType"/>
						<xs:element minOccurs="0" name="ownerID" nillable="true" type="tns:EntityID"/>
						<xs:element name="displayName" type="xs:string"/>
						<xs:element name="extension" type="xs:string"/>
						<xs:element minOccurs="0" name="emailAddress" nillable="true" type="xs:string"/>
						<xs:element minOccurs="0" name="tenant" nillable="true" type="xs:string"/>
						<xs:element minOccurs="0" name="description" type="xs:string"/>
						<xs:element minOccurs="0" ref="tns:Language"/>
						<xs:element minOccurs="0" ref="tns:MemberStatus"/>
						<xs:element minOccurs="0" ref="tns:MemberMode"/>
						<xs:element minOccurs="0" name="canCallDirect" type="xs:boolean"/>
						<xs:element minOccurs="0" name="canJoinMeeting" type="xs:boolean"/>
						<xs:element minOccurs="0" name="canRecordMeeting" type="xs:boolean"/>
						<xs:element minOccurs="0" name="isInMyContacts" type="xs:boolean"/>
						<xs:element minOccurs="0" ref="tns:RoomStatus"/>
						<xs:element minOccurs="0" ref="tns:RoomMode"/>
						<xs:element minOccurs="0" name="canControl" type="xs:boolean"/>
						<xs:element minOccurs="0" name="audio" nillable="true" type="xs:boolean"/>
						<xs:element minOccurs="0" name="video" nillable="true" type="xs:boolean"/>
						<xs:element minOccurs="0" name="appshare" nillable="true" type="xs:boolean"/>
						<xs:element minOccurs="0" name="phone1" nillable="true" type="xs:string"/>
						<xs:element minOccurs="0" name="phone2" nillable="true" type="xs:string"/>
						<xs:element minOccurs="0" name="phone3" nillable="true" type="xs:string"/>
						<xs:element minOccurs="0" name="department" nillable="true" type="xs:string"/>
						<xs:element minOccurs="0" name="title" nillable="true" type="xs:string"/>
						<xs:element minOccurs="0" name="instantMessagerID" nillable="true" type="xs:string"/>
						<xs:element minOccurs="0" name="location" nillable="true" type="xs:string"/>
						<xs:element minOccurs="0" name="thumbnailUpdateTime" nillable="true" type="xs:dateTime"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>

			<xs:element name="EntityDetails">
				<xs:annotation>
					<xs:documentation>
						This object is returned as a result of search for
						member, public room, or legacy device.
					</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="entityID" type="tns:EntityID"/>
						<xs:element minOccurs="0" name="participantID" nillable="true" type="tns:EntityID"/>
						<xs:element ref="tns:EntityType"/>
						<xs:element minOccurs="0" name="ownerID" nillable="true" type="tns:EntityID"/>
						<xs:element name="displayName" type="xs:string"/>
						<xs:element name="extension" type="xs:string"/>
						<xs:element minOccurs="0" name="emailAddress" nillable="true" type="xs:string"/>
						<xs:element minOccurs="0" name="tenant" nillable="true" type="xs:string"/>
						<xs:element minOccurs="0" name="description" type="xs:string"/>
						<xs:element minOccurs="0" ref="tns:Language"/>
						<xs:element minOccurs="0" ref="tns:MemberStatus"/>
						<xs:element minOccurs="0" ref="tns:MemberMode"/>
						<xs:element minOccurs="0" name="canCallDirect" type="xs:boolean"/>
						<xs:element minOccurs="0" name="canJoinMeeting" type="xs:boolean"/>
						<xs:element minOccurs="0" name="canRecordMeeting" type="xs:boolean"/>
						<xs:element minOccurs="0" name="isInMyContacts" type="xs:boolean"/>
						<xs:element minOccurs="0" ref="tns:RoomStatus"/>
						<xs:element minOccurs="0" ref="tns:RoomMode"/>
						<xs:element minOccurs="0" name="canControl" type="xs:boolean"/>
						<xs:element minOccurs="0" name="audio" nillable="true" type="xs:boolean"/>
						<xs:element minOccurs="0" name="video" nillable="true" type="xs:boolean"/>
						<xs:element minOccurs="0" name="appshare" nillable="true" type="xs:boolean"/>
						<xs:element minOccurs="0" name="phone1" nillable="true" type="xs:string"/>
						<xs:element minOccurs="0" name="phone2" nillable="true" type="xs:string"/>
						<xs:element minOccurs="0" name="phone3" nillable="true" type="xs:string"/>
						<xs:element minOccurs="0" name="department" nillable="true" type="xs:string"/>
						<xs:element minOccurs="0" name="title" nillable="true" type="xs:string"/>
						<xs:element minOccurs="0" name="instantMessagerID" nillable="true" type="xs:string"/>
						<xs:element minOccurs="0" name="location" nillable="true" type="xs:string"/>
						<xs:element minOccurs="0" name="thumbnailUpdateTime" nillable="true" type="xs:dateTime"/>
						<xs:element maxOccurs="1" minOccurs="0" name="thumbnailPhoto" type="xs:base64Binary"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>

			<xs:element name="Member">
				<xs:annotation>
					<xs:documentation>
						This object is returned as a result of search for
						members.
					</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element maxOccurs="1" minOccurs="1" name="entityID" type="tns:EntityID"/>
						<xs:element maxOccurs="1" minOccurs="1" name="name" type="xs:string"/>
						<xs:element maxOccurs="1" minOccurs="1" name="description" type="xs:string"/>
						<xs:element maxOccurs="1" minOccurs="1" name="email" type="xs:string"/>
						<xs:element maxOccurs="1" minOccurs="1" name="enabled" type="xs:boolean"/>
						<xs:element maxOccurs="1" minOccurs="1" name="type" type="xs:string"/>
						<xs:element maxOccurs="1" minOccurs="1" name="isInMyContacts" type="xs:boolean"/>
						<xs:element maxOccurs="1" minOccurs="1" ref="tns:MemberStatus"/>
						<xs:element minOccurs="0" name="phone1" nillable="true" type="xs:string"/>
						<xs:element minOccurs="0" name="phone2" nillable="true" type="xs:string"/>
						<xs:element minOccurs="0" name="phone3" nillable="true" type="xs:string"/>
						<xs:element minOccurs="0" name="department" nillable="true" type="xs:string"/>
						<xs:element minOccurs="0" name="title" nillable="true" type="xs:string"/>
						<xs:element minOccurs="0" name="instantMessagerID" nillable="true" type="xs:string"/>
						<xs:element minOccurs="0" name="location" nillable="true" type="xs:string"/>
						<xs:element minOccurs="0" name="thumbnailUpdateTime" nillable="true" type="xs:dateTime"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>

			<xs:element name="Room">
				<xs:annotation>
					<xs:documentation>
						This object is returned as a result of search for
						rooms.
					</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element maxOccurs="1" minOccurs="1" name="entityID" type="tns:EntityID"/>
						<xs:element maxOccurs="1" minOccurs="1" name="name" type="xs:string"/>
						<xs:element maxOccurs="1" minOccurs="1" name="displayName" type="xs:string"/>
						<xs:element maxOccurs="1" minOccurs="1" name="extension" type="xs:string"/>
						<xs:element maxOccurs="1" minOccurs="1" name="description" type="xs:string"/>
						<xs:element maxOccurs="1" minOccurs="1" name="ownerEntityID" type="tns:EntityID"/>
						<xs:element maxOccurs="1" minOccurs="1" name="ownerName" type="xs:string"/>
						<xs:element maxOccurs="1" minOccurs="1" name="type" type="xs:string"/>
						<xs:element maxOccurs="1" minOccurs="1" name="pinned" type="xs:boolean"/>
						<xs:element maxOccurs="1" minOccurs="1" name="locked" type="xs:boolean"/>
						<xs:element maxOccurs="1" minOccurs="1" name="enabled" type="xs:boolean"/>
						<xs:element maxOccurs="1" minOccurs="1" name="isInMyContacts" type="xs:boolean"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>


			<xs:element name="LectureModeParticipant">
				<xs:annotation>
					<xs:documentation>
						This object is returned as a result of
						getLectureModeParticipants
					</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="entityID" type="tns:EntityID"/>
						<xs:element name="participantID" type="tns:EntityID"/>
						<xs:element ref="tns:EntityType"/>
						<xs:element name="displayName" type="xs:string"/>
						<xs:element name="extension" type="xs:string"/>
						<xs:element minOccurs="0" name="audio" nillable="true" type="xs:boolean"/>
						<xs:element minOccurs="0" name="video" nillable="true" type="xs:boolean"/>
						<xs:element minOccurs="0" name="appshare" nillable="true" type="xs:boolean"/>
						<xs:element minOccurs="0" name="handRaised" nillable="true" type="xs:boolean"/>
						<xs:element minOccurs="0" name="presenter" nillable="true" type="xs:boolean"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>

			<xs:element name="LoginAttempt">
				<xs:annotation>
					<xs:documentation>
						Login attempt information.
					</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="result" type="xs:string"/>
						<xs:element name="sourceIPAddress" nillable="true" type="xs:string"/>
						<xs:element name="attemptTime" type="xs:dateTime"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>

			<xs:element name="WelcomeBannerContent">
				<xs:annotation>
					<xs:documentation>
						WelcomeBannerContent for a text based message to
						be used on the endpoints upon successful login with the last 5
						login attempts (successful and unsuccessful) for that particular
						user.
					</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element minOccurs="0" name="welcomeBannerText" nillable="true" type="xs:string"/>
						<xs:element maxOccurs="unbounded" minOccurs="0" ref="tns:LoginAttempt"/>
						<xs:element minOccurs="0" name="welcomeBannerPasswordExpiryDate" type="xs:dateTime"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>

			<xs:complexType name="EndpointBehaviorDataType">
		   		<xs:annotation>
		          <xs:documentation>
		            The EndpointBehaviorDataType will hold the parameters for EndpointBehavior configurations.
		          </xs:documentation>
		       	</xs:annotation>
                 <xs:sequence>
                     <xs:element minOccurs="0" name="windowSizeHeight" type="xs:int"/>
                        <xs:element minOccurs="0" name="windowSizeWidth" type="xs:int"/>
                        <xs:element minOccurs="0" name="windowPositionTop" type="xs:int"/>
                        <xs:element minOccurs="0" name="windowPositionBottom" type="xs:int"/>
                        <xs:element minOccurs="0" name="windowPositionLeft" type="xs:int"/>
                        <xs:element minOccurs="0" name="windowPositionRight" type="xs:int"/>
                        <xs:element name="welcomePage" type="xs:int" default="1"/>
                        <xs:element name="beautyScreen" type="xs:int" default="1"/>
                        <xs:element name="loginModule" type="xs:int" default="1"/>
                        <xs:element name="publicChat" type="xs:int" default="1"/>
                        <xs:element name="leftPanel" type="xs:int" default="1"/>
                        <xs:element name="inCallSearch" type="xs:int" default="1"/>
                        <xs:element name="inviteParticipants" type="xs:int" default="1"/>
                        <xs:element name="contentSharing" type="xs:int" default="1"/>
                        <xs:element name="shareDialogOnJoin" type="xs:int" default="0"/>
                        <xs:element name="displayLabels" type="xs:int" default="1"/>
                        <xs:element name="remoteContentAccess" type="xs:int" default="1"/>
                        <xs:element name="cameraMuteControl" type="xs:int" default="1"/>
                        <xs:element name="muteCameraOnEntry" type="xs:int" default="1"/>
                        <xs:element name="audioMuteControl" type="xs:int" default="1"/>
                        <xs:element name="muteAudioOnEntry" type="xs:int" default="1"/>
                        <xs:element name="deviceSettings" type="xs:int" default="1"/>
                        <xs:element name="pinnedParticipant" type="xs:int" default="0"/>
                        <xs:element name="recordConference" type="xs:int" default="0"/>
                        <xs:element minOccurs="0" name="recordingRole" type="xs:string"/>
                        <xs:element name="exitOnUserHangup" type="xs:int" default="0"/>
                        <xs:element name="automaticallyUpdate" type="xs:int" default="1"/>
                        <xs:element name="lockUserName" type="xs:int" default="0"/>
                        <xs:element name="enableAutoAnswer" type="xs:int" default="0"/>
                        <xs:element name="participantNotification" type="xs:int" default="1"/>
                        <xs:element name="fullScreenVideo" type="xs:int" default="0"/>
                        <xs:element minOccurs="0" name="preIframeUrl" type="xs:string"/>
                        <xs:element minOccurs="0" name="preIframeSize" type="xs:int"/>
                        <xs:element minOccurs="0" name="topIframeUrl" type="xs:string"/>
                        <xs:element minOccurs="0" name="topIframeSize" type="xs:int"/>
                        <xs:element minOccurs="0" name="leftIframeUrl" type="xs:string"/>
                        <xs:element minOccurs="0" name="leftIframeSize" type="xs:int"/>
                        <xs:element minOccurs="0" name="rightIframeUrl" type="xs:string"/>
                        <xs:element minOccurs="0" name="rightIframeSize" type="xs:int"/>
                        <xs:element minOccurs="0" name="bottomIframeUrl" type="xs:string"/>
                        <xs:element minOccurs="0" name="bottomIframeSize" type="xs:int"/>
                        <xs:element minOccurs="0" name="postIframeUrl" type="xs:string"/>
                        <xs:element minOccurs="0" name="postIframeSize" type="xs:int"/>
                 	<xs:element minOccurs="0" name="endpointBehaviorKey" type="xs:string"/>
                 </xs:sequence>
            </xs:complexType>
			<xs:element name="LogInRequest">
				<xs:annotation>
					<xs:documentation>
						Login request to the VidyoPortal. User identified
						in Http Authentication header
					</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element minOccurs="0" ref="tns:ClientType"/>
						<xs:element minOccurs="0" name="returnEndpointBehavior" type="xs:boolean" default="false"/>
						<xs:element minOccurs="0" name="returnAuthToken" type="xs:boolean" default="false"/>
						<xs:element minOccurs="0" name="returnPortalVersion" type="xs:boolean" default="false"/>
						<xs:element minOccurs="0" name="returnServiceAddress" type="xs:boolean" default="false"/>
						<xs:element minOccurs="0" name="returnNeoRoomPermanentPairingDeviceUserAttribute" type="xs:boolean" default="false"/>
						<xs:element minOccurs="0" name="returnUserRole" type="xs:boolean" default="false"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="LogInResponse">
				<xs:annotation>
					<xs:documentation>
						If the users authentication is successfull, the
						Portal Access Key is returned.
					</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="pak" type="xs:string"/>
						<xs:element minOccurs="0" name="vmaddress" nillable="true" type="xs:string"/>
						<xs:element minOccurs="0" name="proxyaddress" nillable="true" type="xs:string"/>
						<xs:element minOccurs="0" name="loctag" nillable="true" type="xs:string"/>
						<xs:element minOccurs="0" name="pak2" nillable="true" type="xs:string"/>
						<xs:element minOccurs="0" name="endpointExternalIPAddress" type="xs:string"/>
						<xs:element minOccurs="0" name="minimumPINLength" type="xs:int"/>
						<xs:element minOccurs="0" name="maximumPINLength" type="xs:int"/>
						<xs:element minOccurs="0" name="minMediaPort" type="xs:int"/>
						<xs:element minOccurs="0" name="maxMediaPort" type="xs:int"/>
						<xs:element minOccurs="0" name="vrProxyConfig" type="xs:string"/>
						<xs:element minOccurs="0" name="endpointBehavior" type="tns:EndpointBehaviorDataType"/>
						<xs:element minOccurs="0" name="authToken" type="xs:string"/>
						<xs:element minOccurs="0" name="portalVersion" type="xs:string"/>
						<xs:element minOccurs="0" name="pairingService" type="xs:anyURI"/>
						<xs:element minOccurs="0" name="registrationService" type="xs:anyURI"/>
						<xs:element minOccurs="0" name="neoRoomPermanentPairingDeviceUser" type="xs:boolean"/>
						<xs:element minOccurs="0" name="userRole" type="xs:string"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>

			<xs:element name="LinkEndpointRequest">
				<xs:annotation>
					<xs:documentation>
						LinkEndpoint request to the VidyoPortal. User
						identified in Http Authentication header is associated with the
						vidyo endpoint identifier.
					</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="EID" type="xs:string"/>
						<xs:element minOccurs="0" name="vrIP" type="xs:string"/>
						<xs:element minOccurs="0" name="clientType" type="xs:string"/>
						<xs:element minOccurs="0" name="applicationName" type="xs:string"/>
						<xs:element minOccurs="0" name="applicationVersion" type="xs:string"/>
						<xs:element minOccurs="0" name="applicationOs" type="xs:string"/>
						<xs:element minOccurs="0" name="deviceModel" type="xs:string"/>
						<xs:element minOccurs="0" name="pak2" type="xs:boolean"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="LinkEndpointResponse">
				<xs:annotation>
					<xs:documentation>
						If the users authentication is successful, the
						Member entity is returned.
					</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element ref="tns:Entity"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>

			<xs:element name="LogOutRequest">
				<xs:annotation>
					<xs:documentation>
						Signout request to the VidyoPortal.
					</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence/>
				</xs:complexType>
			</xs:element>
			<xs:element name="LogOutResponse">
				<xs:complexType>
					<xs:sequence>
						<xs:element ref="tns:OK"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>

			<xs:element name="MyEndpointStatusRequest">
				<xs:annotation>
					<xs:documentation>
						Query the status of user as identified in the
						http authentication header.
					</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence/>
				</xs:complexType>
			</xs:element>
			<xs:element name="MyEndpointStatusResponse">
				<xs:complexType>
					<xs:sequence>
						<xs:element ref="tns:MemberStatus"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>

			<xs:element name="SearchMyContactsRequest">
				<xs:annotation>
					<xs:documentation>
						Each member of the VidyoPortal is allowed to keep
						a list of Members, Rooms, Legacy devices as the their favourites
						for easy access. This API returns that list.
					</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element minOccurs="0" ref="tns:Filter"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="SearchMyContactsResponse">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="total" type="xs:int"/>
						<xs:element maxOccurs="unbounded" minOccurs="0" ref="tns:Entity"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>

			<xs:element name="AddToMyContactsRequest">
				<xs:annotation>
					<xs:documentation>
						Adds an entity (Member, Room, or Legacy devices)
						to the Member's favourites for easy access.
					</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="entityID" type="tns:EntityID"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="AddToMyContactsResponse">
				<xs:complexType>
					<xs:sequence>
						<xs:element ref="tns:OK"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>

			<xs:element name="RemoveFromMyContactsRequest">
				<xs:annotation>
					<xs:documentation>
						Removes an entity (Member, Room, or Legacy
						devices) from the Member's favourites.
					</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="entityID" type="tns:EntityID"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="RemoveFromMyContactsResponse">
				<xs:complexType>
					<xs:sequence>
						<xs:element ref="tns:OK"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>

			<xs:element name="SearchRequest">
				<xs:annotation>
					<xs:documentation>
						Search for entities (Member, Room, or Legacy
						devices) that matches the criterion as specified in the filter.
					</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element ref="tns:Filter"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="SearchResponse">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="total" type="xs:int"/>
						<xs:element maxOccurs="unbounded" minOccurs="0" ref="tns:Entity"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>

			<xs:element name="SearchByEntityIDRequest">
				<xs:annotation>
					<xs:documentation>
						Search for all entities (mainly Rooms) by
						Member's EntityID
					</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="entityID" type="tns:EntityID"/>
						<xs:element minOccurs="0" ref="tns:Filter"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="SearchByEntityIDResponse">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="total" type="xs:int"/>
						<xs:element maxOccurs="unbounded" minOccurs="0" ref="tns:Entity"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>

			<xs:element name="SearchByEmailRequest">
				<xs:annotation>
					<xs:documentation>
						Search for all entities (mainly Members) by Email
						Address
					</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="emailAddress" type="xs:string"/>
						<xs:element minOccurs="0" ref="tns:Filter"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="SearchByEmailResponse">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="total" type="xs:int"/>
						<xs:element maxOccurs="unbounded" minOccurs="0" ref="tns:Entity"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>

			<xs:element name="SearchMembersRequest">
				<xs:annotation>
					<xs:documentation>
						Search for all members. queryField is either
						&quot;name&quot; (default) or &quot;email&quot; and memberType is
						one or more of
						&quot;member&quot; or &quot;legacy&quot;, separated by a pipe(|), so a search for
						member or legacy
						would be &quot;member|legacy&quot;. The default memberType
						is &quot;member&quot;
					</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element maxOccurs="1" minOccurs="1" name="query" nillable="false" type="xs:string"/>
						<xs:element maxOccurs="1" minOccurs="0" name="queryField" nillable="true" type="xs:string"/>
						<xs:element maxOccurs="1" minOccurs="0" name="memberType" nillable="true" type="xs:string"/>
						<xs:element maxOccurs="1" minOccurs="0" name="start" nillable="true" type="xs:integer"/>
						<xs:element maxOccurs="1" minOccurs="0" name="limit" nillable="true" type="xs:integer"/>
						<xs:element maxOccurs="1" minOccurs="0" name="sortBy" nillable="true" type="xs:string"/>
						<xs:element maxOccurs="1" minOccurs="0" name="sortDir" nillable="true" type="tns:sortDir"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="SearchMembersResponse">
				<xs:complexType>
					<xs:sequence>
						<xs:element maxOccurs="1" minOccurs="1" name="query" nillable="false" type="xs:string"/>
						<xs:element maxOccurs="1" minOccurs="1" name="queryField" nillable="false" type="xs:string"/>
						<xs:element maxOccurs="1" minOccurs="1" name="memberType" nillable="false" type="xs:string"/>
						<xs:element maxOccurs="1" minOccurs="1" name="start" nillable="false" type="xs:integer"/>
						<xs:element maxOccurs="1" minOccurs="1" name="limit" nillable="false" type="xs:integer"/>
						<xs:element maxOccurs="1" minOccurs="1" name="sortBy" nillable="false" type="xs:string"/>
						<xs:element maxOccurs="1" minOccurs="1" name="sortDir" nillable="false" type="tns:sortDir"/>
						<xs:element maxOccurs="1" minOccurs="1" name="total" type="xs:int"/>
						<xs:element maxOccurs="unbounded" minOccurs="0" ref="tns:Member"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>

			<xs:element name="SearchRoomsRequest">
				<xs:annotation>
					<xs:documentation>
						Search for all rooms. queryField is either
						&quot;roomNameOrExtension&quot; (default) or &quot;ownerName&quot; or &quot;ownerEntityID&quot;
						and roomType is one or more of &quot;public&quot; or &quot;personal&quot; or &quot;legacy&quot;
						separated by a pipe (|), so a search for
						public or legacy rooms
						would be &quot;public|legacy&quot;. The default roomType is &quot;public&quot;
					</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element maxOccurs="1" minOccurs="1" name="query" nillable="false" type="xs:string"/>
						<xs:element maxOccurs="1" minOccurs="0" name="queryField" nillable="true" type="xs:string"/>
						<xs:element maxOccurs="1" minOccurs="0" name="roomType" nillable="true" type="xs:string"/>
						<xs:element maxOccurs="1" minOccurs="0" name="start" nillable="true" type="xs:integer"/>
						<xs:element maxOccurs="1" minOccurs="0" name="limit" nillable="true" type="xs:integer"/>
						<xs:element maxOccurs="1" minOccurs="0" name="sortBy" nillable="true" type="xs:string"/>
						<xs:element maxOccurs="1" minOccurs="0" name="sortDir" nillable="true" type="tns:sortDir"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="SearchRoomsResponse">
				<xs:complexType>
					<xs:sequence>
						<xs:element maxOccurs="1" minOccurs="1" name="query" nillable="false" type="xs:string"/>
						<xs:element maxOccurs="1" minOccurs="1" name="queryField" nillable="false" type="xs:string"/>
						<xs:element maxOccurs="1" minOccurs="1" name="roomType" nillable="false" type="xs:string"/>
						<xs:element maxOccurs="1" minOccurs="1" name="start" nillable="false" type="xs:integer"/>
						<xs:element maxOccurs="1" minOccurs="1" name="limit" nillable="false" type="xs:integer"/>
						<xs:element maxOccurs="1" minOccurs="1" name="sortBy" nillable="false" type="xs:string"/>
						<xs:element maxOccurs="1" minOccurs="1" name="sortDir" nillable="false" type="tns:sortDir"/>
						<xs:element maxOccurs="1" minOccurs="1" name="total" type="xs:int"/>
						<xs:element maxOccurs="unbounded" minOccurs="0" ref="tns:Room"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>

			<xs:element name="GetEntityByEntityIDRequest">
				<xs:annotation>
					<xs:documentation>
						Get entities by Member's EntityID
					</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element maxOccurs="200" minOccurs="1" name="entityID" type="tns:EntityID"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="GetEntityByEntityIDResponse">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="total" type="xs:int"/>
						<xs:element maxOccurs="unbounded" minOccurs="0" ref="tns:Entity"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>

			<xs:element name="GetEntityDetailsByEntityIDRequest">
				<xs:annotation>
					<xs:documentation>
						Get entities by Member's EntityID
					</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element maxOccurs="200" minOccurs="1" name="entityID" type="tns:EntityID"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="GetEntityDetailsByEntityIDResponse">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="total" type="xs:int"/>
						<xs:element maxOccurs="unbounded" minOccurs="0" ref="tns:EntityDetails"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>

			<xs:element name="SetThumbnailPhotoRequest">
				<xs:annotation>
					<xs:documentation>
						Set Thumb nail photo for User
					</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element maxOccurs="1" minOccurs="1" name="thumbNailPhoto" type="xs:base64Binary"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="SetThumbnailPhotoResponse">
				<xs:complexType>
					<xs:sequence>
						<xs:element ref="tns:OK"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>

			<xs:element name="InviteToConferenceRequest">
				<xs:annotation>
					<xs:documentation>
						Invites a Member to a room. This request can only
						be issued by the Member who can control this room.
					</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="conferenceID" type="tns:EntityID"/>
						<xs:choice>
							<xs:element name="entityID" type="tns:EntityID"/>
							<xs:element name="invite" type="xs:string"/>
						</xs:choice>
						<xs:element minOccurs="0" name="moderatorPIN" nillable="true" type="xs:string"/>
						<!-- Optional callFromIdentifier used to override the from extension number, should only be used for customization with legacy-->
						<xs:element minOccurs="0" name="callFromIdentifier" type="xs:string"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="InviteToConferenceResponse">
				<xs:complexType>
					<xs:sequence>
						<xs:element ref="tns:OK"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>

			<xs:element name="CancelOutboundCallRequest">
				<xs:annotation>
					<xs:documentation>
						A moderator has invited a user to join the
						conference but immediately after making the call, the moderator
						decides to cancel the invitation.
					</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="conferenceID" type="tns:EntityID"/>
						<xs:element name="entityID" type="tns:EntityID"/>
						<xs:element minOccurs="0" name="moderatorPIN" nillable="true" type="xs:string"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="CancelOutboundCallResponse">
				<xs:complexType>
					<xs:sequence>
						<xs:element ref="tns:OK"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>

			<xs:element name="JoinConferenceRequest">
				<xs:annotation>
					<xs:documentation>
						Request by a member to join a meeting room
						identified by EntityId.
						To join the personal room belonging to a
						member, the EntityID must the set to the Member's EntityID.
					</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:choice>
							<xs:element name="conferenceID" type="tns:EntityID"/>
							<xs:element name="extension" type="xs:string"/>
						</xs:choice>
						<xs:element minOccurs="0" name="PIN" nillable="true" type="xs:string"/>
						<xs:element minOccurs="0" name="referenceNumber" nillable="true" type="xs:string"/>
						<xs:element minOccurs="0" name="extData" type="xs:string"/>
						<xs:element minOccurs="0" name="extDataType" type="xs:int"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="JoinConferenceResponse">
				<xs:complexType>
					<xs:sequence>
						<xs:element ref="tns:OK"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>

			<xs:element name="JoinIPCConferenceRequest">
				<xs:annotation>
					<xs:documentation>
						Request by a member to join a meeting room on
						different portal - IPC (Inter-Portal Communication).
						Three
						parameters required for IPC:
						- 'local-part' - adress of room
						(username for private room, roomname for public room or
						extension);
						- 'domain' - FQDN or IP address of remote VidyoPortal;
						- 'PIN' - (optional) required if remote room is pinned;
					</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="local-part" type="xs:string"/>
						<xs:element name="domain" type="xs:string"/>
						<xs:element minOccurs="0" name="PIN" nillable="true" type="xs:string"/>
						<xs:element minOccurs="0" name="referenceNumber" nillable="true" type="xs:string"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="JoinIPCConferenceResponse">
				<xs:complexType>
					<xs:sequence>
						<xs:element ref="tns:OK"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>

			<xs:element name="DirectCallRequest">
				<xs:annotation>
					<xs:documentation>
						Request by a member to place a direct call to
						another member as idenfied by EntityId.
					</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:choice>
							<xs:element name="entityID" type="tns:EntityID"/>
							<xs:element name="invite" type="xs:string"/>
						</xs:choice>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="DirectCallResponse">
				<xs:complexType>
					<xs:sequence>
						<xs:element ref="tns:OK"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>

			<xs:element name="GetParticipantsRequest">
				<xs:annotation>
					<xs:documentation>
						Request to list the participants in a meeting as
						idenfied by EntityId.
						To list the participants in a personal room
						belonging to a Member, the EntityID must be set to the Member.
					</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="conferenceID" type="tns:EntityID"/>
						<xs:element minOccurs="0" ref="tns:Filter"/>
						<xs:element minOccurs="0" name="moderatorPIN" nillable="true" type="xs:string"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="GetParticipantsResponse">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="total" type="xs:int"/>
						<xs:element minOccurs="0" name="recorderID" nillable="true" type="xs:int"/>
						<xs:element minOccurs="0" name="recorderName" nillable="true" type="xs:string"/>
						<xs:element minOccurs="0" name="paused" nillable="true" type="xs:boolean"/>
						<xs:element minOccurs="0" name="webcast" nillable="true" type="xs:boolean"/>
						<xs:element maxOccurs="unbounded" minOccurs="0" ref="tns:Entity"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>

			<xs:element name="GetLectureModeParticipantsRequest">
				<xs:annotation>
					<xs:documentation>
						Request to list the participants in a meeting as
						identified by EntityId.
						To list the participants in a personal room
						belonging to a Member,
						the EntityID must be set to the Member.
						Similar to GetParticipants but supports Lecture Mode.
					</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="conferenceID" type="tns:EntityID"/>
						<xs:element minOccurs="0" ref="tns:Filter"/>
						<xs:element minOccurs="0" name="moderatorPIN" nillable="true" type="xs:string"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="GetLectureModeParticipantsResponse">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="total" type="xs:int"/>
						<xs:element minOccurs="0" name="recorderID" nillable="true" type="xs:int"/>
						<xs:element minOccurs="0" name="recorderName" nillable="true" type="xs:string"/>
						<xs:element minOccurs="0" name="paused" nillable="true" type="xs:boolean"/>
						<xs:element minOccurs="0" name="webcast" nillable="true" type="xs:boolean"/>
						<xs:element minOccurs="0" name="lectureMode" nillable="true" type="xs:boolean"/>
						<xs:element maxOccurs="unbounded" minOccurs="0" ref="tns:LectureModeParticipant"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>

			<xs:element name="LeaveConferenceRequest">
				<xs:annotation>
					<xs:documentation>
						Request to remove the participantID (Endpoint)
						from the conference.
					</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="conferenceID" type="tns:EntityID"/>
						<xs:element name="participantID" type="tns:EntityID"/>
						<xs:element minOccurs="0" name="moderatorPIN" nillable="true" type="xs:string"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="LeaveConferenceResponse">
				<xs:complexType>
					<xs:sequence>
						<xs:element ref="tns:OK"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>

			<xs:element name="MuteAudioRequest">
				<xs:annotation>
					<xs:documentation>
						Request to mute the audio for a given
						participantID (Endpoint) in the conference.
					</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="conferenceID" type="tns:EntityID"/>
						<xs:element name="participantID" type="tns:EntityID"/>
						<xs:element minOccurs="0" name="moderatorPIN" nillable="true" type="xs:string"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			
			<xs:element name="MuteVideoRequest">
				<xs:annotation>
					<xs:documentation>
						Request to mute the video for a given
						participantID (Endpoint) in the conference.
					</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="conferenceID" type="tns:EntityID"/>
						<xs:element name="participantID" type="tns:EntityID"/>
						<xs:element minOccurs="0" name="moderatorPIN" nillable="true" type="xs:string"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			
			<xs:element name="MuteAudioResponse">
				<xs:complexType>
					<xs:sequence>
						<xs:element ref="tns:OK"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>

			<xs:element name="UnmuteAudioRequest">
				<xs:annotation>
					<xs:documentation>
						Request to unmute the audio for a given
						participantID (Endpoint) in the conference.
					</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="conferenceID" type="tns:EntityID"/>
						<xs:element name="participantID" type="tns:EntityID"/>
						<xs:element minOccurs="0" name="moderatorPIN" nillable="true" type="xs:string"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="UnmuteAudioResponse">
				<xs:complexType>
					<xs:sequence>
						<xs:element ref="tns:OK"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>

			<xs:element name="StartVideoRequest">
				<xs:annotation>
					<xs:documentation>
						Request to start the video for a given
						participantID (Endpoint) in the conference.
					</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="conferenceID" type="tns:EntityID"/>
						<xs:element name="participantID" type="tns:EntityID"/>
						<xs:element minOccurs="0" name="moderatorPIN" nillable="true" type="xs:string"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="StartVideoResponse">
				<xs:complexType>
					<xs:sequence>
						<xs:element ref="tns:OK"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>

			<xs:element name="StopVideoRequest">
				<xs:annotation>
					<xs:documentation>
						Request to stop the video for a given EntityID
						(Endpoint) in the conference.
					</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="conferenceID" type="tns:EntityID"/>
						<xs:element name="participantID" type="tns:EntityID"/>
						<xs:element minOccurs="0" name="moderatorPIN" nillable="true" type="xs:string"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="StopVideoResponse">
				<xs:complexType>
					<xs:sequence>
						<xs:element ref="tns:OK"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>

			<xs:element name="MyAccountRequest">
				<xs:annotation>
					<xs:documentation>
						Request to retrieve Member entity.
					</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence/>
				</xs:complexType>
			</xs:element>
			<xs:element name="MyAccountResponse">
				<xs:complexType>
					<xs:sequence>
						<xs:element ref="tns:Entity"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>

			<xs:element name="CreateRoomRequest">
				<xs:annotation>
					<xs:documentation>
						Request to create a Public Room belongs to
						Member.
					</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="name" type="xs:string"/>
						<xs:element name="extension" type="xs:string"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="CreateRoomResponse">
				<xs:complexType>
					<xs:sequence>
						<xs:element ref="tns:Entity"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>

			<xs:element name="DeleteRoomRequest">
				<xs:annotation>
					<xs:documentation>
						Request to delete a Public Room belongs to
						Member.
					</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="roomID" type="tns:EntityID"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="DeleteRoomResponse">
				<xs:complexType>
					<xs:sequence>
						<xs:element ref="tns:OK"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>

			<xs:element name="CreateRoomURLRequest">
				<xs:annotation>
					<xs:documentation>
						Request to create a URL for a Room or a Member's
						personal room.
					</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="roomID" type="tns:EntityID"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="CreateRoomURLResponse">
				<xs:complexType>
					<xs:sequence>
						<xs:element ref="tns:OK"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>

			<xs:element name="RemoveRoomURLRequest">
				<xs:annotation>
					<xs:documentation>
						Request to delete a URL for a Room or a Member's
						personal room.
					</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="roomID" type="tns:EntityID"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="RemoveRoomURLResponse">
				<xs:complexType>
					<xs:sequence>
						<xs:element ref="tns:OK"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>

			<xs:element name="CreateRoomPINRequest">
				<xs:annotation>
					<xs:documentation>
						Create a PIN for a Room or a Member's personal
						room.
					</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="roomID" type="tns:EntityID"/>
						<xs:element name="PIN" type="xs:string"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="CreateRoomPINResponse">
				<xs:complexType>
					<xs:sequence>
						<xs:element ref="tns:OK"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>

			<xs:element name="RemoveRoomPINRequest">
				<xs:annotation>
					<xs:documentation>
						Removes a PIN for a Room or a Member's personal
						room.
					</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="roomID" type="tns:EntityID"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="RemoveRoomPINResponse">
				<xs:complexType>
					<xs:sequence>
						<xs:element ref="tns:OK"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>

			<xs:element name="UpdatePasswordRequest">
				<xs:annotation>
					<xs:documentation>
						Updates a Member's password.
					</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="password" nillable="false" type="xs:string"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="UpdatePasswordResponse">
				<xs:complexType>
					<xs:sequence>
						<xs:element ref="tns:OK"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>

			<xs:element name="UpdateLanguageRequest">
				<xs:annotation>
					<xs:documentation>
						Updates a Member's language settings.
					</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element ref="tns:Language"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="UpdateLanguageResponse">
				<xs:complexType>
					<xs:sequence>
						<xs:element ref="tns:OK"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>

			<xs:element name="LockRoomRequest">
				<xs:annotation>
					<xs:documentation>
						Lock a public or personal room.
					</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="roomID" type="tns:EntityID"/>
						<xs:element minOccurs="0" name="moderatorPIN" nillable="true" type="xs:string"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="LockRoomResponse">
				<xs:complexType>
					<xs:sequence>
						<xs:element ref="tns:OK"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>

			<xs:element name="UnlockRoomRequest">
				<xs:annotation>
					<xs:documentation>
						Lock a public or personal room.
					</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="roomID" type="tns:EntityID"/>
						<xs:element minOccurs="0" name="moderatorPIN" nillable="true" type="xs:string"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="UnlockRoomResponse">
				<xs:complexType>
					<xs:sequence>
						<xs:element ref="tns:OK"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>

			<xs:element name="SetMemberModeRequest">
				<xs:annotation>
					<xs:documentation>
						Mode of member:
						- Available
						- Away
						- DoNotDisturb
						etc.
					</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element ref="tns:MemberMode"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="SetMemberModeResponse">
				<xs:complexType>
					<xs:sequence>
						<xs:element ref="tns:OK"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>

			<xs:complexType name="Recorder">
				<xs:annotation>
					<xs:documentation>
						Available Recording Profile
					</xs:documentation>
				</xs:annotation>
				<xs:sequence>
					<xs:element name="recorderPrefix" type="xs:string"/>
					<xs:element name="description" type="xs:string"/>
				</xs:sequence>
			</xs:complexType>

			<xs:element name="GetRecordingProfilesRequest">
				<xs:annotation>
					<xs:documentation>
						Recording Profiles Request
					</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence/>
				</xs:complexType>
			</xs:element>

			<xs:element name="GetRecordingProfilesResponse">
				<xs:annotation>
					<xs:documentation>
						Recording Profiles Response
					</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="total" type="xs:int"/>
						<xs:element maxOccurs="unbounded" minOccurs="0" name="recorder" nillable="true" type="tns:Recorder"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>

			<xs:element name="StartRecordingRequest">
				<xs:annotation>
					<xs:documentation>
						Request to record the video for a given roomId
						and profileId.
					</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="conferenceID" type="tns:EntityID"/>
						<xs:element name="recorderPrefix" type="xs:string"/>
						<xs:element name="webcast" type="xs:boolean"/>
						<xs:element minOccurs="0" name="moderatorPIN" nillable="true" type="xs:string"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="StartRecordingResponse">
				<xs:complexType>
					<xs:sequence>
						<xs:element ref="tns:OK"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>

			<xs:element name="GetPortalVersionRequest">
				<xs:annotation>
					<xs:documentation>
						Portal Version Request
					</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence/>
				</xs:complexType>
			</xs:element>
			<xs:element name="GetPortalVersionResponse">
				<xs:annotation>
					<xs:documentation>
						Portal Version Response
					</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="portalVersion" type="xs:string"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>

			<xs:element name="PauseRecordingRequest">
				<xs:annotation>
					<xs:documentation>
						Request to pause the recording for a given
						participantID (Endpoint) in the conference.
					</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="conferenceID" type="tns:EntityID"/>
						<xs:element name="recorderID" type="xs:int"/>
						<xs:element minOccurs="0" name="moderatorPIN" nillable="true" type="xs:string"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="PauseRecordingResponse">
				<xs:complexType>
					<xs:sequence>
						<xs:element ref="tns:OK"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>

			<xs:element name="ResumeRecordingRequest">
				<xs:annotation>
					<xs:documentation>
						Request to resume the recording for a given
						participantID (Endpoint) in the conference.
					</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="conferenceID" type="tns:EntityID"/>
						<xs:element name="recorderID" type="xs:int"/>
						<xs:element minOccurs="0" name="moderatorPIN" nillable="true" type="xs:string"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="ResumeRecordingResponse">
				<xs:complexType>
					<xs:sequence>
						<xs:element ref="tns:OK"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>

			<xs:element name="StopRecordingRequest">
				<xs:annotation>
					<xs:documentation>
						Request to stop the recording for a given
						participantID (Endpoint) in the conference.
					</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="conferenceID" type="tns:EntityID"/>
						<xs:element name="recorderID" type="xs:int"/>
						<xs:element minOccurs="0" name="moderatorPIN" nillable="true" type="xs:string"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="StopRecordingResponse">
				<xs:complexType>
					<xs:sequence>
						<xs:element ref="tns:OK"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>

			<xs:element name="CreateWebcastURLRequest">
				<xs:annotation>
					<xs:documentation>
						Request to create a URL for a Webcast
					</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="roomID" type="tns:EntityID"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="CreateWebcastURLResponse">
				<xs:complexType>
					<xs:sequence>
						<xs:element ref="tns:OK"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>

			<xs:element name="CreateWebcastPINRequest">
				<xs:annotation>
					<xs:documentation>
						Request to create a PIN for a Webcast
					</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="roomID" type="tns:EntityID"/>
						<xs:element name="PIN" type="xs:string"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="CreateWebcastPINResponse">
				<xs:complexType>
					<xs:sequence>
						<xs:element ref="tns:OK"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>

			<xs:element name="RemoveWebcastURLRequest">
				<xs:annotation>
					<xs:documentation>
						Request to remove Webcast URL for a Room
					</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="roomID" type="tns:EntityID"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="RemoveWebcastURLResponse">
				<xs:complexType>
					<xs:sequence>
						<xs:element ref="tns:OK"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>

			<xs:element name="RemoveWebcastPINRequest">
				<xs:annotation>
					<xs:documentation>
						Request to remove PIN for a Webcast
					</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="roomID" type="tns:EntityID"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="RemoveWebcastPINResponse">
				<xs:complexType>
					<xs:sequence>
						<xs:element ref="tns:OK"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>

			<xs:element name="GetWebcastURLRequest">
				<xs:annotation>
					<xs:documentation>
						Request to get the Webcast URL and PIN Indicator
						for a Room
					</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="roomID" type="tns:EntityID"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="GetWebcastURLResponse">
				<xs:annotation>
					<xs:documentation>
						Response containing the Webcast URL and PIN
						Indicator for a Room
					</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element minOccurs="0" name="webCastURL" nillable="true" type="xs:string"/>
						<xs:element minOccurs="0" name="hasWebCastPIN" type="xs:boolean"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>

			<xs:element name="GetUserNameRequest">
				<xs:annotation>
					<xs:documentation>
						Get a real username as was created by admin and
						saved in DB. User identified in Http Authentication header
					</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence/>
				</xs:complexType>
			</xs:element>
			<xs:element name="GetUserNameResponse">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="realUserName" type="xs:string"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>

			<xs:element name="GetEntityByRoomKeyRequest">
				<xs:annotation>
					<xs:documentation>
						Get an entity by roomKey provided in guest URL
					</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="roomKey" type="xs:string"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="GetEntityByRoomKeyResponse">
				<xs:complexType>
					<xs:sequence>
						<xs:element ref="tns:Entity"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>

			<xs:element name="GetInviteContentRequest">
				<xs:annotation>
					<xs:documentation>
						Get an invite content for email message for
						specific room.
						- roomID is optional parameter.
						In case of roomID not
						provided - invitation content will be
						generated for personal room
						of user.
						User identified in Http Authentication header
					</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element minOccurs="0" name="roomID" type="tns:EntityID"/>
						<xs:element minOccurs="0" name="returnHtmlContent" type="xs:boolean" default="false"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="GetInviteContentResponse">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="content" type="xs:string"/>
						<xs:element minOccurs="0" name="subject" type="xs:string"/>
						<xs:element minOccurs="0" name="htmlContent" type="xs:string"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>

			<xs:complexType name="RoomProfile">
				<xs:annotation>
					<xs:documentation>
						Available Room Profile
					</xs:documentation>
				</xs:annotation>
				<xs:sequence>
					<xs:element name="roomProfileName" type="xs:string"/>
					<xs:element name="description" type="xs:string"/>
				</xs:sequence>
			</xs:complexType>

			<xs:element name="GetRoomProfilesRequest">
				<xs:annotation>
					<xs:documentation>
						Room Profiles Request
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GetRoomProfilesResponse">
				<xs:annotation>
					<xs:documentation>
						Room Profiles Response
					</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="total" type="xs:int"/>
						<xs:element maxOccurs="unbounded" minOccurs="0" name="roomProfile" nillable="true" type="tns:RoomProfile"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>

			<xs:element name="GetRoomProfileRequest">
				<xs:annotation>
					<xs:documentation>
						Request to get a Profile for a room
					</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="roomID" type="tns:EntityID"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="GetRoomProfileResponse">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="roomProfile" nillable="true" type="tns:RoomProfile"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>

			<xs:element name="SetRoomProfileRequest">
				<xs:annotation>
					<xs:documentation>
						Request to set a Profile for a room
					</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="roomID" type="tns:EntityID"/>
						<xs:element name="roomProfileName" type="xs:string"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="SetRoomProfileResponse">
				<xs:complexType>
					<xs:sequence>
						<xs:element ref="tns:OK"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>

			<xs:element name="RemoveRoomProfileRequest">
				<xs:annotation>
					<xs:documentation>
						Request to remove RoomProfile for a room
					</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="roomID" type="tns:EntityID"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="RemoveRoomProfileResponse">
				<xs:complexType>
					<xs:sequence>
						<xs:element ref="tns:OK"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>

			<xs:element name="CreateModeratorURLRequest">
				<xs:annotation>
					<xs:documentation>
						Request to create a URL for a Moderator (Control
						Meeting)
					</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="roomID" type="tns:EntityID"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="CreateModeratorURLResponse">
				<xs:complexType>
					<xs:sequence>
						<xs:element ref="tns:OK"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>

			<xs:element name="RemoveModeratorURLRequest">
				<xs:annotation>
					<xs:documentation>
						Request to remove Moderator (Control Meeting) URL
						for a Room
					</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="roomID" type="tns:EntityID"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="RemoveModeratorURLResponse">
				<xs:complexType>
					<xs:sequence>
						<xs:element ref="tns:OK"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>

			<xs:element name="GetModeratorURLRequest">
				<xs:annotation>
					<xs:documentation>
						Request to get the Moderator (Control Meeting)
						URL and PIN Indicator for
						a Room
					</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="roomID" type="tns:EntityID"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="GetModeratorURLResponse">
				<xs:annotation>
					<xs:documentation>
						Response containing the Moderator (Control
						Meeting) URL and PIN Indicator
						for a Room
					</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element minOccurs="0" name="moderatorURL" nillable="true" type="xs:string"/>
						<xs:element minOccurs="0" name="hasModeratorPIN" type="xs:boolean"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>

			<xs:element name="GetModeratorURLWithTokenRequest">
				<xs:annotation>
					<xs:documentation>
						Request to get the Moderator (Control Meeting)
						URL with an onetime
						authentication token for a Room
					</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="roomID" type="tns:EntityID"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="GetModeratorURLWithTokenResponse">
				<xs:annotation>
					<xs:documentation>
						Response containing the Moderator (Control
						Meeting) URL with an onetime
						authentication token for a Room
					</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element minOccurs="1" name="moderatorURL" nillable="true" type="xs:string"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>

			<xs:element name="CreateModeratorPINRequest">
				<xs:annotation>
					<xs:documentation>
						Create a Moderator PIN for a Room or a Member's
						personal room.
					</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="roomID" type="tns:EntityID"/>
						<xs:element name="PIN" type="xs:string"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="CreateModeratorPINResponse">
				<xs:complexType>
					<xs:sequence>
						<xs:element ref="tns:OK"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>

			<xs:element name="RemoveModeratorPINRequest">
				<xs:annotation>
					<xs:documentation>
						Removes a Moderator PIN for a Room or a Member's
						personal room.
					</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="roomID" type="tns:EntityID"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="RemoveModeratorPINResponse">
				<xs:complexType>
					<xs:sequence>
						<xs:element ref="tns:OK"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>

			<xs:element name="GetConferenceIDRequest">
				<xs:annotation>
					<xs:documentation>
						Provides the user the Conference ID to which the
						user is associated.
					</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="GetConferenceIDResponse">
				<xs:complexType>
					<xs:sequence>
						<xs:element minOccurs="0" name="conferenceID" nillable="true" type="tns:EntityID"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>

			<xs:element name="GenerateAuthTokenRequest">
				<xs:annotation>
					<xs:documentation>
						Request to generate authentication token valid
						for the specified time.
					</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="validityTime">
							<xs:simpleType>
								<xs:restriction base="xs:int">
									<xs:minInclusive value="0"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
						<xs:element name="endpointId" type="xs:string"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="GenerateAuthTokenResponse">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="authToken" type="xs:string"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>

			<xs:element name="CreateScheduledRoomRequest">
				<xs:annotation>
					<xs:documentation>
						Request to create a Scheduled Room for the
						Member.
					</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element minOccurs="0" name="recurring" nillable="false">
							<xs:simpleType>
								<xs:restriction base="xs:int">
									<xs:minInclusive value="0"/>
									<xs:maxInclusive value="400"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
						<xs:element minOccurs="0" name="setPIN" type="xs:boolean"/>
						<xs:element minOccurs="0" name="returnHtmlContent" type="xs:boolean" default="false"/>
						<xs:element minOccurs="0" name="returnRoomDetails" type="xs:boolean" default="false"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="CreateScheduledRoomResponse">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="extension">
							<xs:simpleType>
								<xs:restriction base="xs:string">
									<xs:minLength value="1"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
						<xs:element minOccurs="0" name="pin">
							<xs:simpleType>
								<xs:restriction base="xs:string">
									<xs:minLength value="1"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
						<xs:element name="inviteContent" type="xs:string"/>
						<xs:element name="roomURL" type="xs:anyURI"/>
						<xs:element minOccurs="0" name="inviteSubject" type="xs:string"/>
						<xs:element minOccurs="0" name="htmlContent" type="xs:string"/>
						<xs:element minOccurs="0" ref="tns:Room"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>

			<xs:element name="CreateTestcallRoomRequest">
				<xs:annotation>
					<xs:documentation>
						Request to create a test call Room
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="CreateTestcallRoomResponse">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="extension">
							<xs:simpleType>
								<xs:restriction base="xs:string">
									<xs:minLength value="1"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
						<xs:element name="roomKey" type="xs:string"/>
						<xs:element name="roomURL" type="xs:anyURI"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>

			<xs:element name="DeleteScheduledRoomRequest">
				<xs:annotation>
					<xs:documentation>
						Request to delete a Scheduled Room.
					</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="extension">
							<xs:simpleType>
								<xs:restriction base="xs:string">
									<xs:minLength value="1"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
						<xs:element minOccurs="0" name="pin">
							<xs:simpleType>
								<xs:restriction base="xs:string">
									<xs:minLength value="1"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="DeleteScheduledRoomResponse">
				<xs:complexType>
					<xs:sequence>
						<xs:element ref="tns:OK"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>

			<xs:element name="CreatePublicRoomRequest">
				<xs:annotation>
					<xs:documentation>
						Request to create a Public Room for the Member.
					</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element minOccurs="1" name="displayName" nillable="false" type="xs:string"/>
						<xs:element minOccurs="0" name="inMyContacts" type="xs:boolean"/>
						<xs:element minOccurs="0" name="locked" type="xs:boolean"/>
						<xs:element minOccurs="0" name="setPIN" type="xs:string"/>
						<xs:element minOccurs="0" name="description" type="xs:string"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="CreatePublicRoomResponse">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="roomID" type="tns:EntityID"/>
						<xs:element name="extension">
							<xs:simpleType>
								<xs:restriction base="xs:string">
									<xs:minLength value="1"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
						<xs:element name="roomURL" type="xs:anyURI"/>
						<xs:element minOccurs="0" name="inMyContacts" type="xs:boolean"/>
						<xs:element minOccurs="0" name="locked" type="xs:boolean"/>
						<xs:element minOccurs="0" name="hasPIN" type="xs:boolean"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>

			<xs:element name="UpdatePublicRoomDescriptionRequest">
				<xs:annotation>
					<xs:documentation>
						Request to create a Public Room for the owner.
					</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="roomID" type="tns:EntityID"/>
						<xs:element name="description" type="xs:string"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="UpdatePublicRoomDescriptionResponse">
				<xs:complexType>
					<xs:sequence>
						<xs:element ref="tns:OK"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>

			<xs:simpleType name="PortalFeatureName">
				<xs:annotation>
					<xs:documentation>
						List of Portal features.
					</xs:documentation>
				</xs:annotation>
				<xs:restriction base="xs:string">
				</xs:restriction>
			</xs:simpleType>

			<xs:element name="PortalFeature">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="feature" type="tns:PortalFeatureName"/>
						<xs:element name="enable" type="xs:boolean"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>

			<xs:element name="GetPortalFeaturesRequest">
				<xs:annotation>
					<xs:documentation>
						Request to retrive a list of Portal's features
						with flag -
						enable/disable.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GetPortalFeaturesResponse">
				<xs:annotation>
					<xs:documentation>
						Portal Feature Names are:
						ScheduledRoom
						Guest
						IPCoutbound
						IPCinbound
						ModeratorURL
						TlsTunneling
						LoginBanner
						WelcomeBanner
						EndpointPrivateChat
						EndpointPublicChat
						CDR2_1
						EndpointDetails
						16TILES
						HTMLChangePswd
						RouterParticipantInformation
					</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element maxOccurs="unbounded" ref="tns:PortalFeature"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>

			<xs:simpleType name="EndpointFeatureName">
				<xs:annotation>
					<xs:documentation>
						Name of endpoint feature.
					</xs:documentation>
				</xs:annotation>
				<xs:restriction base="xs:string">
				</xs:restriction>
			</xs:simpleType>

			<xs:element name="EndpointFeature">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="feature" type="tns:EndpointFeatureName"/>
						<xs:element name="enable" type="xs:boolean"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>

			<xs:element name="SetEndpointDetailsRequest">
				<xs:annotation>
					<xs:documentation>
						Request to send a list of endpoint's supported
						features with flag -
						enable/disable.
						Endpoint Feature Names are:
						LectureMode
					</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="EID" type="xs:string"/>
						<xs:element maxOccurs="unbounded" ref="tns:EndpointFeature"/>
						<xs:element minOccurs="0" name="applicationName" type="xs:string"/>
						<xs:element minOccurs="0" name="applicationVersion" type="xs:string"/>
						<xs:element minOccurs="0" name="applicationOs" type="xs:string"/>
						<xs:element minOccurs="0" name="deviceModel" type="xs:string"/>
						<xs:element minOccurs="0" name="extData" type="xs:string"/>
						<xs:element minOccurs="0" name="extDataType" type="xs:int"/>						
						<xs:any maxOccurs="unbounded" minOccurs="0"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>

			<xs:element name="SetEndpointDetailsResponse">
				<xs:complexType>
					<xs:sequence>
						<xs:element ref="tns:OK"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>

			<xs:element name="GetActiveSessionsRequest">
				<xs:annotation>
					<xs:documentation>
						Request to get the number of active
						authentication tokens for the user.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GetActiveSessionsResponse">
				<xs:complexType>
					<xs:sequence>
						<xs:element maxOccurs="1" minOccurs="1" name="count" nillable="false" type="xs:int"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>

			<xs:element name="LogoutAllOtherSessionsRequest">
				<xs:annotation>
					<xs:documentation>
						Request to get logout all the active
						tokens/sessions associated with the
						user.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="LogoutAllOtherSessionsResponse">
				<xs:complexType>
					<xs:sequence>
						<xs:element ref="tns:OK"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>

			<xs:element name="disconnectConferenceAllRequest">
				<xs:annotation>
					<xs:documentation>
						Request to disconnect all participant from a
						specified conference room, including the conference moderator /
						the person controlling the room..
					</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="conferenceID" type="tns:EntityID"/>
						<xs:element minOccurs="0" name="moderatorPIN" nillable="true" type="xs:string"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="disconnectConferenceAllResponse">
				<xs:complexType>
					<xs:sequence>
						<xs:element ref="tns:OK"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>

			<xs:element name="muteAudioServerAllRequest">
				<xs:annotation>
					<xs:documentation>
						Mute all participants in the specified
						conference, including the conference moderator / the person
						controlling the room. Unmute the participants will have to be
						performed by the conference moderator in order to revert the audio
						state. The participants will not be able to unmute themselves.
					</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="conferenceID" type="tns:EntityID"/>
						<xs:element name="muteState" type="xs:boolean"/>
						<xs:element minOccurs="0" name="moderatorPIN" nillable="true" type="xs:string"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="muteAudioServerAllResponse">
				<xs:complexType>
					<xs:sequence>
						<xs:element ref="tns:OK"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>

			<xs:element name="muteAudioClientAllRequest">
				<xs:annotation>
					<xs:documentation>
						Silence all participants in the specified
						conference, including the conference moderator / the person
						controlling the room. The participants will be able to unmute
						themselves from their client user interface.
					</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="conferenceID" type="tns:EntityID"/>
						<xs:element minOccurs="0" name="moderatorPIN" nillable="true" type="xs:string"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="muteAudioClientAllResponse">
				<xs:complexType>
					<xs:sequence>
						<xs:element ref="tns:OK"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>

			<xs:element name="muteVideoServerAllRequest">
				<xs:annotation>
					<xs:documentation>
						Put in privacy mode all participants in the
						specified conference, including the conference moderator / the
						person controlling the room. The participants will not be able to
						un-mute their video by themselves. The participants will not be
						able to unmute themselves.
					</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="conferenceID" type="tns:EntityID"/>
						<xs:element name="muteState" type="xs:boolean"/>
						<xs:element minOccurs="0" name="moderatorPIN" nillable="true" type="xs:string"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="muteVideoServerAllResponse">
				<xs:complexType>
					<xs:sequence>
						<xs:element ref="tns:OK"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>

			<xs:element name="muteVideoClientAllRequest">
				<xs:annotation>
					<xs:documentation>
						Put in privacy mode all participants in the
						specified conference, including the conference moderator / the
						person controlling the room. The participants will be able to
						un-mute their video by themselves from their client user
						interface.
					</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="conferenceID" type="tns:EntityID"/>
						<xs:element minOccurs="0" name="moderatorPIN" nillable="true" type="xs:string"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="muteVideoClientAllResponse">
				<xs:complexType>
					<xs:sequence>
						<xs:element ref="tns:OK"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>

			<xs:element name="OnetimeAccessRequest">
				<xs:annotation>
					<xs:documentation>
						Request to generate one time access URL for the
						logged in user.
					</xs:documentation>
				</xs:annotation>
			</xs:element>

			<xs:element name="OnetimeAccessResponse">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="url" type="xs:anyURI"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>

			<xs:element name="RoomAccessOption">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="accessOption" type="tns:AccessOptionName"/>
						<xs:element name="value" type="xs:string"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>

			<xs:simpleType name="AccessOptionName">
				<xs:annotation>
					<xs:documentation>
						List of Allowed Access Option Names.
					</xs:documentation>
				</xs:annotation>
				<xs:restriction base="xs:string">
					<xs:enumeration value="roomURL"/>
					<xs:enumeration value="extension"/>
					<xs:enumeration value="PIN"/>
					<xs:enumeration value="dial-in-Number"/>
				</xs:restriction>
			</xs:simpleType>

			<xs:element name="RoomAccessOptionsRequest">
				<xs:annotation>
					<xs:documentation>
						Request to get Room Access Options
					</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="roomID" type="tns:EntityID"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>

			<xs:element name="RoomAccessOptionsResponse">
				<xs:complexType>
					<xs:sequence>
						<xs:element maxOccurs="unbounded" ref="tns:RoomAccessOption"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>

			<xs:element name="PortalPrefixRequest">
				<xs:annotation>
					<xs:documentation>
						Request to get Portal Prefix
					</xs:documentation>
				</xs:annotation>
			</xs:element>

			<xs:element name="PortalPrefixResponse">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="portalPrefix" nillable="false" type="xs:string">
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>

			<xs:element name="PrefixNotConfiguredFault">
				<xs:annotation>
					<xs:documentation>
						Error returned when the portal prefix is not
						configured.
					</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element ref="tns:ErrorMessage"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>

			<xs:element name="getLoginAndWelcomeBannerRequest">
				<xs:annotation>
					<xs:documentation>
						This API returns login and welcome banners.
					</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="getLoginAndWelcomeBannerResponse">
				<xs:complexType>
					<xs:sequence>
						<xs:element minOccurs="0" name="loginBannerText" nillable="true" type="xs:string"/>
						<xs:element minOccurs="0" ref="tns:WelcomeBannerContent"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>

			<xs:element name="getUserAccountTypeRequest">
				<xs:annotation>
					<xs:documentation>
						This API returns logged in user acount type.
					</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="getUserAccountTypeResponse">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="userAccountType" type="xs:string"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>

			<xs:element name="StartLectureModeRequest">
				<xs:annotation>
					<xs:documentation>
						Request to start lecture mode for the conference.
					</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="conferenceID" type="tns:EntityID"/>
						<xs:element minOccurs="0" name="moderatorPIN" nillable="true" type="xs:string"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="StartLectureModeResponse">
				<xs:complexType>
					<xs:sequence>
						<xs:element ref="tns:OK"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>

			<xs:element name="StopLectureModeRequest">
				<xs:annotation>
					<xs:documentation>
						Request to stop lecture mode for the conference.
					</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="conferenceID" type="tns:EntityID"/>
						<xs:element minOccurs="0" name="moderatorPIN" nillable="true" type="xs:string"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="StopLectureModeResponse">
				<xs:complexType>
					<xs:sequence>
						<xs:element ref="tns:OK"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>

			<xs:element name="RaiseHandRequest">
				<xs:annotation>
					<xs:documentation>
						Request to raise hand by endpoint.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RaiseHandResponse">
				<xs:complexType>
					<xs:sequence>
						<xs:element ref="tns:OK"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>

			<xs:element name="UnraiseHandRequest">
				<xs:annotation>
					<xs:documentation>
						Request to unraise hand by endpoint.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="UnraiseHandResponse">
				<xs:complexType>
					<xs:sequence>
						<xs:element ref="tns:OK"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>

			<xs:element name="DismissRaisedHandRequest">
				<xs:annotation>
					<xs:documentation>
						Request to dismiss hand of given participantID
						(Endpoint) in the
						conference in lecture mode.
					</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="conferenceID" type="tns:EntityID"/>
						<xs:element name="participantID" type="tns:EntityID"/>
						<xs:element minOccurs="0" name="moderatorPIN" nillable="true" type="xs:string"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="DismissRaisedHandResponse">
				<xs:complexType>
					<xs:sequence>
						<xs:element ref="tns:OK"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>

			<xs:element name="DismissAllRaisedHandRequest">
				<xs:annotation>
					<xs:documentation>
						Request to dismiss all hands of given
						participantID (Endpoint) in the
						conference in lecture mode.
					</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="conferenceID" type="tns:EntityID"/>
						<xs:element minOccurs="0" name="moderatorPIN" nillable="true" type="xs:string"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="DismissAllRaisedHandResponse">
				<xs:complexType>
					<xs:sequence>
						<xs:element ref="tns:OK"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>

			<xs:element name="SetPresenterRequest">
				<xs:annotation>
					<xs:documentation>
						Request to make a given participantID (Endpoint)
						presenter for the
						conference in lecture mode.
					</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="conferenceID" type="tns:EntityID"/>
						<xs:element name="participantID" type="tns:EntityID"/>
						<xs:element minOccurs="0" name="moderatorPIN" nillable="true" type="xs:string"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="SetPresenterResponse">
				<xs:complexType>
					<xs:sequence>
						<xs:element ref="tns:OK"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>

			<xs:element name="RemovePresenterRequest">
				<xs:annotation>
					<xs:documentation>
						Request to remove a given participantID
						(Endpoint) as presenter for the
						conference in lecture mode.
					</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="conferenceID" type="tns:EntityID"/>
						<xs:element name="participantID" type="tns:EntityID"/>
						<xs:element minOccurs="0" name="moderatorPIN" nillable="true" type="xs:string"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="RemovePresenterResponse">
				<xs:complexType>
					<xs:sequence>
						<xs:element ref="tns:OK"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>

			<xs:element name="GetVidyoReplayLibraryRequest">
				<xs:annotation>
					<xs:documentation>
						This API provides registered users with the link
						to the VidyoReplay library which hosts all the recordings on a
						particular tenant on the VidyoPortal.
					</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="GetVidyoReplayLibraryResponse">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="authToken" type="xs:string"/>
						<xs:element name="vidyoReplayLibraryUrl" type="xs:string"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>

			<xs:element name="WhatIsMyIPAddressRequest">
				<xs:annotation>
					<xs:documentation>
						This API provides the IP address of the endpoint
						as seen by VidyoPortal.
					</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="WhatIsMyIPAddressResponse">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="endpointExternalIPAddress" type="xs:string"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>

			<xs:element name="GetChangePasswordHtmlUrlWithTokenRequest">
				<xs:annotation>
					<xs:documentation>
						This API provides the client with the URL of the
						HTML page for password changing.
					</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="GetChangePasswordHtmlUrlWithTokenResponse">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="changePasswordHtmlUrlWithToken" type="xs:string"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>

			<xs:element name="GetPINLengthRangeRequest">
				<xs:annotation>
					<xs:documentation>
						This API provides the client with the minimum and
						maximum PIN lengths.
					</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="GetPINLengthRangeResponse">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="minimumPINLength" type="xs:int"/>
						<xs:element name="maximumPINLength" type="xs:int"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>

			<xs:complexType name="SilenceSpeakerServerType">
				<xs:sequence>
					<xs:element name="conferenceID" type="tns:EntityID"/>
					<xs:element minOccurs="0" name="participantID" type="xs:positiveInteger"/>
					<!-- Silence '1', Unsilence '0' -->
					<xs:element name="silenceState" type="tns:SilenceState"/>
					<xs:element minOccurs="0" name="moderatorPIN" type="xs:string"/>
				</xs:sequence>
			</xs:complexType>

			<xs:simpleType name="SilenceState">
				<xs:restriction base="xs:int">
					<xs:minInclusive value="0"/>
					<xs:maxInclusive value="1"/>
				</xs:restriction>
			</xs:simpleType>

			<xs:element name="SilenceSpeakerServerRequest" type="tns:SilenceSpeakerServerType">
				<xs:annotation>
					<xs:documentation>
						Request to silence a specific participant's
						speaker
					</xs:documentation>
				</xs:annotation>
			</xs:element>

			<xs:element name="SilenceSpeakerServerResponse" type="tns:SilenceSpeakerServerType">
				<xs:annotation>
					<xs:documentation>
						Response containing state of participant's
						speaker in a conference
					</xs:documentation>
				</xs:annotation>
			</xs:element>

			<xs:element name="SilenceSpeakerServerAllRequest" type="tns:SilenceSpeakerServerType">
				<xs:annotation>
					<xs:documentation>
						Request to silence all participant's
						speaker. Particpant Id element in the request will be ignored.
					</xs:documentation>
				</xs:annotation>
			</xs:element>

			<xs:element name="SilenceSpeakerServerAllResponse" type="tns:SilenceSpeakerServerType">
				<xs:annotation>
					<xs:documentation>
						Response containing state speaker state of the conference
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="getLogAggregationServerRequest">
        <xs:annotation>

        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
         <xs:element name="getLogAggregationServerResponse">
        <xs:annotation>
          <xs:documentation>
            Response for getting log aggregation server name.
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element name="logServer" type="xs:string"/>

          </xs:sequence>
        </xs:complexType>
      </xs:element>
		<xs:complexType name="ParticipantStatus">
			<xs:sequence>
				<xs:element name="conferenceID" type="tns:EntityID"/>
				<xs:element name="participantID" type="xs:positiveInteger"/>
				<xs:element minOccurs="0" name="audio" nillable="true" type="xs:boolean"/>
				<xs:element minOccurs="0" name="video" nillable="true" type="xs:boolean"/>
				<xs:element minOccurs="0" name="appshare" nillable="true" type="xs:boolean"/>
			</xs:sequence>
		</xs:complexType>      
	    <xs:element name="ParticipantStatusResponse">
			<xs:complexType>
				<xs:sequence>
					<xs:element name="ParticipantStatus" type="tns:ParticipantStatus"/>
				</xs:sequence>
			</xs:complexType>
		</xs:element>      
	 </xs:schema>
  </wsdl:types>
  <wsdl:message name="startRecordingInput">
    <wsdl:part name="parameter" element="StartRecordingRequest">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="removePresenterInput">
    <wsdl:part name="parameter" element="RemovePresenterRequest">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="searchByEntityIDOutput">
    <wsdl:part name="parameter" element="SearchByEntityIDResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="unlockRoomInput">
    <wsdl:part name="parameter" element="UnlockRoomRequest">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="removeRoomProfileInput">
    <wsdl:part name="parameter" element="RemoveRoomProfileRequest">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="createModeratorPINOutput">
    <wsdl:part name="parameter" element="CreateModeratorPINResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getLectureModeParticipantsOutput">
    <wsdl:part name="parameter" element="GetLectureModeParticipantsResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="muteAudioClientAllOutput">
    <wsdl:part name="parameter" element="muteAudioClientAllResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="setMemberModeInput">
    <wsdl:part name="parameter" element="SetMemberModeRequest">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="generateAuthTokenOutput">
    <wsdl:part name="parameter" element="GenerateAuthTokenResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="leaveConferenceInput">
    <wsdl:part name="parameter" element="LeaveConferenceRequest">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getEntityByRoomKeyInput">
    <wsdl:part name="parameter" element="GetEntityByRoomKeyRequest">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getUserNameInput">
    <wsdl:part name="parameter" element="GetUserNameRequest">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="moderatorURLWithTokenOutput">
    <wsdl:part name="parameter" element="GetModeratorURLWithTokenResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="createRoomURLInput">
    <wsdl:part name="parameter" element="CreateRoomURLRequest">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="joinIPCConferenceInput">
    <wsdl:part name="parameter" element="JoinIPCConferenceRequest">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="removeRoomProfileOutput">
    <wsdl:part name="parameter" element="RemoveRoomProfileResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="startVideoOutput">
    <wsdl:part name="parameter" element="StartVideoResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="createRoomPINOutput">
    <wsdl:part name="parameter" element="CreateRoomPINResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="roomAccessOptionsResponseMessage">
    <wsdl:part name="roomAccessOptionsResponse" element="RoomAccessOptionsResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="resumeRecordingInput">
    <wsdl:part name="parameter" element="ResumeRecordingRequest">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="removeWebcastURLInput">
    <wsdl:part name="parameter" element="RemoveWebcastURLRequest">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getLoginAndWelcomeBannerOutput">
    <wsdl:part name="parameter" element="getLoginAndWelcomeBannerResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="logoutAllOtherSessionsOutput">
    <wsdl:part name="parameter" element="LogoutAllOtherSessionsResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="portalPrefixRequestMessage">
    <wsdl:part name="portalPrefixRequest" element="PortalPrefixRequest">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="raiseHandInput">
    <wsdl:part name="parameter" element="RaiseHandRequest">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="updateLanguageInput">
    <wsdl:part name="parameter" element="UpdateLanguageRequest">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="setThumbnailPhotoInput">
    <wsdl:part name="parameter" element="SetThumbnailPhotoRequest">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="silenceSpeakerServerOutput">
    <wsdl:part name="parameters" element="SilenceSpeakerServerResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="cancelOutboundCallOutput">
    <wsdl:part name="parameter" element="CancelOutboundCallResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getEntityByRoomKeyOutput">
    <wsdl:part name="parameter" element="GetEntityByRoomKeyResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="VidyoReplayNotAvailableFault">
    <wsdl:part name="fault" element="VidyoReplayNotAvailableFault">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="FileTooLargeFault">
    <wsdl:part name="fault" element="FileTooLargeFault">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="lockRoomInput">
    <wsdl:part name="parameter" element="LockRoomRequest">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="startRecordingOutput">
    <wsdl:part name="parameter" element="StartRecordingResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getActiveSessionsOutput">
    <wsdl:part name="parameter" element="GetActiveSessionsResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="createWebcastPINOutput">
    <wsdl:part name="parameter" element="CreateWebcastPINResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="removeFromMyContactsInput">
    <wsdl:part name="parameter" element="RemoveFromMyContactsRequest">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="myAccountOutput">
    <wsdl:part name="parameter" element="MyAccountResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="raiseHandOutput">
    <wsdl:part name="parameter" element="RaiseHandResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="inviteToConferenceOutput">
    <wsdl:part name="parameter" element="InviteToConferenceResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getInviteContentInput">
    <wsdl:part name="parameter" element="GetInviteContentRequest">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="setEndpointDetailsInput">
    <wsdl:part name="parameter" element="SetEndpointDetailsRequest">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="myEndpointStatusInput">
    <wsdl:part name="parameter" element="MyEndpointStatusRequest">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getPINLengthRangeInput">
    <wsdl:part name="parameter" element="GetPINLengthRangeRequest">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteRoomOutput">
    <wsdl:part name="parameter" element="DeleteRoomResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="searchByEmailInput">
    <wsdl:part name="parameter" element="SearchByEmailRequest">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="generateAuthTokenInput">
    <wsdl:part name="parameter" element="GenerateAuthTokenRequest">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="ScheduledRoomCreationFault">
    <wsdl:part name="fault" element="ScheduledRoomCreationFault">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="TestcallRoomCreationFault">
    <wsdl:part name="fault" element="TestcallRoomCreationFault">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="joinConferenceOutput">
    <wsdl:part name="parameter" element="JoinConferenceResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getEntityDetailsByEntityIDInput">
    <wsdl:part name="parameter" element="GetEntityDetailsByEntityIDRequest">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="removeRoomURLInput">
    <wsdl:part name="parameter" element="RemoveRoomURLRequest">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="cancelOutboundCallInput">
    <wsdl:part name="parameter" element="CancelOutboundCallRequest">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getVidyoReplayLibraryOutput">
    <wsdl:part name="parameter" element="GetVidyoReplayLibraryResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="createPublicRoomInput">
    <wsdl:part name="parameter" element="CreatePublicRoomRequest">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getActiveSessionsInput">
    <wsdl:part name="parameter" element="GetActiveSessionsRequest">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="removeRoomPINOutput">
    <wsdl:part name="parameter" element="RemoveRoomPINResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="disconnectConferenceAllOutput">
    <wsdl:part name="parameter" element="disconnectConferenceAllResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="createModeratorURLOutput">
    <wsdl:part name="parameter" element="CreateModeratorURLResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getConferenceIDInput">
    <wsdl:part name="parameter" element="GetConferenceIDRequest">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="portalVersionOutput">
    <wsdl:part name="parameter" element="GetPortalVersionResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="searchMembersInput">
    <wsdl:part name="parameter" element="SearchMembersRequest">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="portalVersionInput">
    <wsdl:part name="parameter" element="GetPortalVersionRequest">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getRoomProfileOutput">
    <wsdl:part name="parameter" element="GetRoomProfileResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="joinConferenceInput">
    <wsdl:part name="parameter" element="JoinConferenceRequest">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="InvalidArgumentFault">
    <wsdl:part name="fault" element="InvalidArgumentFault">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="muteAudioServerAllInput">
    <wsdl:part name="parameter" element="muteAudioServerAllRequest">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="startLectureModeInput">
    <wsdl:part name="parameter" element="StartLectureModeRequest">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="stopLectureModeInput">
    <wsdl:part name="parameter" element="StopLectureModeRequest">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="addToMyContactsOutput">
    <wsdl:part name="parameter" element="AddToMyContactsResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="updateLanguageOutput">
    <wsdl:part name="parameter" element="UpdateLanguageResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="updatePublicRoomDescriptionInput">
    <wsdl:part name="parameter" element="UpdatePublicRoomDescriptionRequest">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="EndpointNotBoundFault">
    <wsdl:part name="fault" element="EndpointNotBoundFault">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="stopRecordingInput">
    <wsdl:part name="parameter" element="StopRecordingRequest">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getUserAccountTypeOutput">
    <wsdl:part name="parameter" element="getUserAccountTypeResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="logInOutput">
    <wsdl:part name="parameter" element="LogInResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="InvalidModeratorPINFormatFault">
    <wsdl:part name="fault" element="InvalidModeratorPINFormatFault">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="silenceSpeakerServerAllInput">
    <wsdl:part name="parameters" element="SilenceSpeakerServerAllRequest">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="unraiseHandOutput">
    <wsdl:part name="parameter" element="UnraiseHandResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="setThumbnailPhotoOutput">
    <wsdl:part name="parameter" element="SetThumbnailPhotoResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getUserNameOutput">
    <wsdl:part name="parameter" element="GetUserNameResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="directCallOutput">
    <wsdl:part name="parameter" element="DirectCallResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="logOutOutput">
    <wsdl:part name="parameter" element="LogOutResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getParticipantsOutput">
    <wsdl:part name="parameter" element="GetParticipantsResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="dismissAllRaisedHandInput">
    <wsdl:part name="parameter" element="DismissAllRaisedHandRequest">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="FeatureNotAvailableFault">
    <wsdl:part name="fault" element="FeatureNotAvailableFault">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="ControlMeetingFault">
    <wsdl:part name="fault" element="ControlMeetingFault">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="removeFromMyContactsOutput">
    <wsdl:part name="parameter" element="RemoveFromMyContactsResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getRoomProfileInput">
    <wsdl:part name="parameter" element="GetRoomProfileRequest">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="dismissRaisedHandInput">
    <wsdl:part name="parameter" element="DismissRaisedHandRequest">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="removePresenterOutput">
    <wsdl:part name="parameter" element="RemovePresenterResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getPINLengthRangeOutput">
    <wsdl:part name="parameter" element="GetPINLengthRangeResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteRoomInput">
    <wsdl:part name="parameter" element="DeleteRoomRequest">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="recordProfilesInput">
    <wsdl:part name="parameter" element="GetRecordingProfilesRequest">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="removeWebcastPINInput">
    <wsdl:part name="parameter" element="RemoveWebcastPINRequest">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="createModeratorURLInput">
    <wsdl:part name="parameter" element="CreateModeratorURLRequest">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getParticipantsInput">
    <wsdl:part name="parameter" element="GetParticipantsRequest">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="InPointToPointCallFault">
    <wsdl:part name="fault" element="InPointToPointCallFault">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="PublicRoomCreationFault">
    <wsdl:part name="fault" element="PublicRoomCreationFault">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getChangePasswordHtmlUrlWithTokenOutput">
    <wsdl:part name="parameter" element="GetChangePasswordHtmlUrlWithTokenResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="removeRoomPINInput">
    <wsdl:part name="parameter" element="RemoveRoomPINRequest">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="createPublicRoomOutput">
    <wsdl:part name="parameter" element="CreatePublicRoomResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="setPresenterInput">
    <wsdl:part name="parameter" element="SetPresenterRequest">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="myAccountInput">
    <wsdl:part name="parameter" element="MyAccountRequest">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="startLectureModeOutput">
    <wsdl:part name="parameter" element="StartLectureModeResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getConferenceIDOutput">
    <wsdl:part name="parameter" element="GetConferenceIDResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="setRoomProfileInput">
    <wsdl:part name="parameter" element="SetRoomProfileRequest">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="webcastURLOutput">
    <wsdl:part name="parameter" element="GetWebcastURLResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getRoomProfilesOutput">
    <wsdl:part name="parameter" element="GetRoomProfilesResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getLoginAndWelcomeBannerInput">
    <wsdl:part name="parameter" element="getLoginAndWelcomeBannerRequest">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="inviteToConferenceInput">
    <wsdl:part name="parameter" element="InviteToConferenceRequest">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="dismissRaisedHandOutput">
    <wsdl:part name="parameter" element="DismissRaisedHandResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="onetimeAccessUrlResponseMessage">
    <wsdl:part name="onetimeAccessResponse" element="OnetimeAccessResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="myEndpointStatusOutput">
    <wsdl:part name="parameter" element="MyEndpointStatusResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="createRoomInput">
    <wsdl:part name="parameter" element="CreateRoomRequest">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="createWebcastURLInput">
    <wsdl:part name="parameter" element="CreateWebcastURLRequest">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="createScheduledRoomOutput">
    <wsdl:part name="parameter" element="CreateScheduledRoomResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="createRoomURLOutput">
    <wsdl:part name="parameter" element="CreateRoomURLResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="stopLectureModeOutput">
    <wsdl:part name="parameter" element="StopLectureModeResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteScheduledRoomInput">
    <wsdl:part name="parameter" element="DeleteScheduledRoomRequest">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="roomAccessOptionsRequestMessage">
    <wsdl:part name="roomAccessOptionsRequest" element="RoomAccessOptionsRequest">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="removeModeratorURLInput">
    <wsdl:part name="parameter" element="RemoveModeratorURLRequest">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="ResourceNotAvailableFault">
    <wsdl:part name="fault" element="ResourceNotAvailableFault">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="silenceSpeakerServerAllOutput">
    <wsdl:part name="parameters" element="SilenceSpeakerServerAllResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="searchInput">
    <wsdl:part name="parameter" element="SearchRequest">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="muteVideoServerAllOutput">
    <wsdl:part name="parameter" element="muteVideoServerAllResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="directCallInput">
    <wsdl:part name="parameter" element="DirectCallRequest">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="logoutAllOtherSessionsInput">
    <wsdl:part name="parameter" element="LogoutAllOtherSessionsRequest">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="recordProfilesOutput">
    <wsdl:part name="parameter" element="GetRecordingProfilesResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="createWebcastPINInput">
    <wsdl:part name="parameter" element="CreateWebcastPINRequest">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="createRoomPINInput">
    <wsdl:part name="parameter" element="CreateRoomPINRequest">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="RoomNotFoundFault">
    <wsdl:part name="fault" element="RoomNotFoundFault">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="linkEndpointInput">
    <wsdl:part name="parameter" element="LinkEndpointRequest">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="unlockRoomOutput">
    <wsdl:part name="parameter" element="UnlockRoomResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="leaveConferenceOutput">
    <wsdl:part name="parameter" element="LeaveConferenceResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="unmuteAudioInput">
    <wsdl:part name="parameter" element="UnmuteAudioRequest">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="createWebcastURLOutput">
    <wsdl:part name="parameter" element="CreateWebcastURLResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="stopVideoInput">
    <wsdl:part name="parameter" element="StopVideoRequest">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="InvalidParticipantFault">
    <wsdl:part name="fault" element="InvalidParticipantFault">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="LogAggregationDisabledFault">
    <wsdl:part name="fault" element="LogAggregationDisabledFault">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getEntityByEntityIDInput">
    <wsdl:part name="parameter" element="GetEntityByEntityIDRequest">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="removeRoomURLOutput">
    <wsdl:part name="parameter" element="RemoveRoomURLResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="GeneralFault">
    <wsdl:part name="fault" element="GeneralFault">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="silenceSpeakerServerInput">
    <wsdl:part name="parameters" element="SilenceSpeakerServerRequest">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="linkEndpointOutput">
    <wsdl:part name="parameter" element="LinkEndpointResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="muteAudioServerAllOutput">
    <wsdl:part name="parameter" element="muteAudioServerAllResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="stopVideoOutput">
    <wsdl:part name="parameter" element="StopVideoResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="setRoomProfileOutput">
    <wsdl:part name="parameter" element="SetRoomProfileResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="searchOutput">
    <wsdl:part name="parameter" element="SearchResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="logInInput">
    <wsdl:part name="parameter" element="LogInRequest">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="lockRoomOutput">
    <wsdl:part name="parameter" element="LockRoomResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="pauseRecordingInput">
    <wsdl:part name="parameter" element="PauseRecordingRequest">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="unraiseHandInput">
    <wsdl:part name="parameter" element="UnraiseHandRequest">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getRoomProfilesInput">
    <wsdl:part name="parameter" element="GetRoomProfilesRequest">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="pauseRecordingOutput">
    <wsdl:part name="parameter" element="PauseRecordingResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="muteVideoClientAllOutput">
    <wsdl:part name="parameter" element="muteVideoClientAllResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="portalPrefixResponseMessage">
    <wsdl:part name="portalPrefixResponse" element="PortalPrefixResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getChangePasswordHtmlUrlWithTokenInput">
    <wsdl:part name="parameter" element="GetChangePasswordHtmlUrlWithTokenRequest">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getInviteContentOutput">
    <wsdl:part name="parameter" element="GetInviteContentResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="NotLicensedFault">
    <wsdl:part name="fault" element="NotLicensedFault">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getUserAccountTypeInput">
    <wsdl:part name="parameter" element="getUserAccountTypeRequest">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="SeatLicenseExpiredFault">
    <wsdl:part name="fault" element="SeatLicenseExpiredFault">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="WrongPINFault">
    <wsdl:part name="fault" element="WrongPINFault">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="moderatorURLWithTokenInput">
    <wsdl:part name="parameter" element="GetModeratorURLWithTokenRequest">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="ConferenceLockedFault">
    <wsdl:part name="fault" element="ConferenceLockedFault">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="disconnectConferenceAllInput">
    <wsdl:part name="parameter" element="disconnectConferenceAllRequest">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="addToMyContactsInput">
    <wsdl:part name="parameter" element="AddToMyContactsRequest">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="muteVideoClientAllInput">
    <wsdl:part name="parameter" element="muteVideoClientAllRequest">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="joinIPCConferenceOutput">
    <wsdl:part name="parameter" element="JoinIPCConferenceResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="searchMyContactsInput">
    <wsdl:part name="parameter" element="SearchMyContactsRequest">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="whatIsMyIPAddressInput">
    <wsdl:part name="parameter" element="WhatIsMyIPAddressRequest">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="searchMyContactsOutput">
    <wsdl:part name="parameter" element="SearchMyContactsResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="whatIsMyIPAddressOutput">
    <wsdl:part name="parameter" element="WhatIsMyIPAddressResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getEntityDetailsByEntityIDOutput">
    <wsdl:part name="parameter" element="GetEntityDetailsByEntityIDResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="createScheduledRoomInput">
    <wsdl:part name="parameter" element="CreateScheduledRoomRequest">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getPortalFeaturesOutput">
    <wsdl:part name="parameter" element="GetPortalFeaturesResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteScheduledRoomOutput">
    <wsdl:part name="parameter" element="DeleteScheduledRoomResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="startVideoInput">
    <wsdl:part name="parameter" element="StartVideoRequest">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="webcastURLInput">
    <wsdl:part name="parameter" element="GetWebcastURLRequest">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="searchRoomsInput">
    <wsdl:part name="parameter" element="SearchRoomsRequest">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="logOutInput">
    <wsdl:part name="parameter" element="LogOutRequest">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getEntityByEntityIDOutput">
    <wsdl:part name="parameter" element="GetEntityByEntityIDResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="muteAudioOutput">
    <wsdl:part name="parameter" element="MuteAudioResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="AccessRestrictedFault">
    <wsdl:part name="fault" element="AccessRestrictedFault">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="searchByEntityIDInput">
    <wsdl:part name="parameter" element="SearchByEntityIDRequest">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="setMemberModeOutput">
    <wsdl:part name="parameter" element="SetMemberModeResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="updatePasswordOutput">
    <wsdl:part name="parameter" element="UpdatePasswordResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="moderatorURLInput">
    <wsdl:part name="parameter" element="GetModeratorURLRequest">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="muteAudioInput">
    <wsdl:part name="parameter" element="MuteAudioRequest">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="muteVideoInput">
    <wsdl:part name="parameter" element="MuteVideoRequest">
    </wsdl:part>
  </wsdl:message>  
  <wsdl:message name="searchRoomsOutput">
    <wsdl:part name="parameter" element="SearchRoomsResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="NotAllowedThumbnailPhotoFault">
    <wsdl:part name="fault" element="NotAllowedThumbnailPhotoFault">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="moderatorURLOutput">
    <wsdl:part name="parameter" element="GetModeratorURLResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="InvalidConferenceFault">
    <wsdl:part name="fault" element="InvalidConferenceFault">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="searchMembersOutput">
    <wsdl:part name="parameter" element="SearchMembersResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="unmuteAudioOutput">
    <wsdl:part name="parameter" element="UnmuteAudioResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="setPresenterOutput">
    <wsdl:part name="parameter" element="SetPresenterResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="createRoomOutput">
    <wsdl:part name="parameter" element="CreateRoomResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="removeModeratorPINInput">
    <wsdl:part name="parameter" element="RemoveModeratorPINRequest">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="updatePublicRoomDescriptionOutput">
    <wsdl:part name="parameter" element="UpdatePublicRoomDescriptionResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="searchByEmailOutput">
    <wsdl:part name="parameter" element="SearchByEmailResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="setEndpointDetailsOutput">
    <wsdl:part name="parameter" element="SetEndpointDetailsResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="PrefixNotConfiguredFault">
    <wsdl:part name="prefixNotConfiguredFault" element="PrefixNotConfiguredFault">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="stopRecordingOutput">
    <wsdl:part name="parameter" element="StopRecordingResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="PublicRoomDescUpdationFault">
    <wsdl:part name="fault" element="PublicRoomDescUpdationFault">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="muteVideoServerAllInput">
    <wsdl:part name="parameter" element="muteVideoServerAllRequest">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="onetimeAccessUrlRequestMessage">
    <wsdl:part name="onetimeAccessRequest" element="OnetimeAccessRequest">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="NotAllowedToCreateFault">
    <wsdl:part name="fault" element="NotAllowedToCreateFault">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="removeModeratorPINOutput">
    <wsdl:part name="parameter" element="RemoveModeratorPINResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getVidyoReplayLibraryInput">
    <wsdl:part name="parameter" element="GetVidyoReplayLibraryRequest">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="updatePasswordInput">
    <wsdl:part name="parameter" element="UpdatePasswordRequest">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="removeModeratorURLOutput">
    <wsdl:part name="parameter" element="RemoveModeratorURLResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="createModeratorPINInput">
    <wsdl:part name="parameter" element="CreateModeratorPINRequest">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="resumeRecordingOutput">
    <wsdl:part name="parameter" element="ResumeRecordingResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="muteAudioClientAllInput">
    <wsdl:part name="parameter" element="muteAudioClientAllRequest">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getPortalFeaturesInput">
    <wsdl:part name="parameter" element="GetPortalFeaturesRequest">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="dismissAllRaisedHandOutput">
    <wsdl:part name="parameter" element="DismissAllRaisedHandResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="removeWebcastPINOutput">
    <wsdl:part name="parameter" element="RemoveWebcastPINResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getLectureModeParticipantsInput">
    <wsdl:part name="parameter" element="GetLectureModeParticipantsRequest">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="removeWebcastURLOutput">
    <wsdl:part name="parameter" element="RemoveWebcastURLResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getLogAggregationServerInput">
    <wsdl:part name="parameters" element="tns:getLogAggregationServerRequest" />
  </wsdl:message>
    <wsdl:message name="getLogAggregationServerOutput">
    <wsdl:part name="parameters" element="tns:getLogAggregationServerResponse" />
  </wsdl:message>
  <wsdl:message name="createTestcallRoomInput">
    <wsdl:part name="parameter" element="CreateTestcallRoomRequest">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="createTestcallRoomOutput">
    <wsdl:part name="parameter" element="CreateTestcallRoomResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="participantStatusOutput">
    <wsdl:part name="parameter" element="ParticipantStatusResponse">
    </wsdl:part>
  </wsdl:message>  
  <wsdl:portType name="VidyoPortalUserServicePortType">
    <wsdl:operation name="logIn">
      <wsdl:input message="logInInput">
    </wsdl:input>
      <wsdl:output message="logInOutput">
    </wsdl:output>
      <wsdl:fault name="NotLicensedFault" message="NotLicensedFault">
    </wsdl:fault>
      <wsdl:fault name="InvalidArgumentFault" message="InvalidArgumentFault">
    </wsdl:fault>
      <wsdl:fault name="GeneralFault" message="GeneralFault">
    </wsdl:fault>
      <wsdl:fault name="SeatLicenseExpiredFault" message="SeatLicenseExpiredFault">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="linkEndpoint">
      <wsdl:input message="linkEndpointInput">
    </wsdl:input>
      <wsdl:output message="linkEndpointOutput">
    </wsdl:output>
      <wsdl:fault name="NotLicensedFault" message="NotLicensedFault">
    </wsdl:fault>
      <wsdl:fault name="AccessRestrictedFault" message="AccessRestrictedFault">
    </wsdl:fault>
      <wsdl:fault name="InvalidArgumentFault" message="InvalidArgumentFault">
    </wsdl:fault>
      <wsdl:fault name="GeneralFault" message="GeneralFault">
    </wsdl:fault>
      <wsdl:fault name="SeatLicenseExpiredFault" message="SeatLicenseExpiredFault">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="logOut">
      <wsdl:input message="logOutInput">
    </wsdl:input>
      <wsdl:output message="logOutOutput">
    </wsdl:output>
      <wsdl:fault name="NotLicensedFault" message="NotLicensedFault">
    </wsdl:fault>
      <wsdl:fault name="InvalidArgumentFault" message="InvalidArgumentFault">
    </wsdl:fault>
      <wsdl:fault name="GeneralFault" message="GeneralFault">
    </wsdl:fault>
      <wsdl:fault name="SeatLicenseExpiredFault" message="SeatLicenseExpiredFault">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="myEndpointStatus">
      <wsdl:input message="myEndpointStatusInput">
    </wsdl:input>
      <wsdl:output message="myEndpointStatusOutput">
    </wsdl:output>
      <wsdl:fault name="NotLicensedFault" message="NotLicensedFault">
    </wsdl:fault>
      <wsdl:fault name="InvalidArgumentFault" message="InvalidArgumentFault">
    </wsdl:fault>
      <wsdl:fault name="GeneralFault" message="GeneralFault">
    </wsdl:fault>
      <wsdl:fault name="SeatLicenseExpiredFault" message="SeatLicenseExpiredFault">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="searchMyContacts">
      <wsdl:input message="searchMyContactsInput">
    </wsdl:input>
      <wsdl:output message="searchMyContactsOutput">
    </wsdl:output>
      <wsdl:fault name="NotLicensedFault" message="NotLicensedFault">
    </wsdl:fault>
      <wsdl:fault name="InvalidArgumentFault" message="InvalidArgumentFault">
    </wsdl:fault>
      <wsdl:fault name="GeneralFault" message="GeneralFault">
    </wsdl:fault>
      <wsdl:fault name="SeatLicenseExpiredFault" message="SeatLicenseExpiredFault">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addToMyContacts">
      <wsdl:input message="addToMyContactsInput">
    </wsdl:input>
      <wsdl:output message="addToMyContactsOutput">
    </wsdl:output>
      <wsdl:fault name="NotLicensedFault" message="NotLicensedFault">
    </wsdl:fault>
      <wsdl:fault name="InvalidArgumentFault" message="InvalidArgumentFault">
    </wsdl:fault>
      <wsdl:fault name="GeneralFault" message="GeneralFault">
    </wsdl:fault>
      <wsdl:fault name="SeatLicenseExpiredFault" message="SeatLicenseExpiredFault">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="removeFromMyContacts">
      <wsdl:input message="removeFromMyContactsInput">
    </wsdl:input>
      <wsdl:output message="removeFromMyContactsOutput">
    </wsdl:output>
      <wsdl:fault name="NotLicensedFault" message="NotLicensedFault">
    </wsdl:fault>
      <wsdl:fault name="InvalidArgumentFault" message="InvalidArgumentFault">
    </wsdl:fault>
      <wsdl:fault name="GeneralFault" message="GeneralFault">
    </wsdl:fault>
      <wsdl:fault name="SeatLicenseExpiredFault" message="SeatLicenseExpiredFault">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="search">
      <wsdl:input message="searchInput">
    </wsdl:input>
      <wsdl:output message="searchOutput">
    </wsdl:output>
      <wsdl:fault name="NotLicensedFault" message="NotLicensedFault">
    </wsdl:fault>
      <wsdl:fault name="InvalidArgumentFault" message="InvalidArgumentFault">
    </wsdl:fault>
      <wsdl:fault name="GeneralFault" message="GeneralFault">
    </wsdl:fault>
      <wsdl:fault name="SeatLicenseExpiredFault" message="SeatLicenseExpiredFault">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="searchByEntityID">
      <wsdl:input message="searchByEntityIDInput">
    </wsdl:input>
      <wsdl:output message="searchByEntityIDOutput">
    </wsdl:output>
      <wsdl:fault name="NotLicensedFault" message="NotLicensedFault">
    </wsdl:fault>
      <wsdl:fault name="InvalidArgumentFault" message="InvalidArgumentFault">
    </wsdl:fault>
      <wsdl:fault name="GeneralFault" message="GeneralFault">
    </wsdl:fault>
      <wsdl:fault name="SeatLicenseExpiredFault" message="SeatLicenseExpiredFault">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="searchByEmail">
      <wsdl:input message="searchByEmailInput">
    </wsdl:input>
      <wsdl:output message="searchByEmailOutput">
    </wsdl:output>
      <wsdl:fault name="NotLicensedFault" message="NotLicensedFault">
    </wsdl:fault>
      <wsdl:fault name="InvalidArgumentFault" message="InvalidArgumentFault">
    </wsdl:fault>
      <wsdl:fault name="GeneralFault" message="GeneralFault">
    </wsdl:fault>
      <wsdl:fault name="SeatLicenseExpiredFault" message="SeatLicenseExpiredFault">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="searchMembers">
      <wsdl:input message="searchMembersInput">
    </wsdl:input>
      <wsdl:output message="searchMembersOutput">
    </wsdl:output>
      <wsdl:fault name="NotLicensedFault" message="NotLicensedFault">
    </wsdl:fault>
      <wsdl:fault name="InvalidArgumentFault" message="InvalidArgumentFault">
    </wsdl:fault>
      <wsdl:fault name="GeneralFault" message="GeneralFault">
    </wsdl:fault>
      <wsdl:fault name="SeatLicenseExpiredFault" message="SeatLicenseExpiredFault">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="searchRooms">
      <wsdl:input message="searchRoomsInput">
    </wsdl:input>
      <wsdl:output message="searchRoomsOutput">
    </wsdl:output>
      <wsdl:fault name="NotLicensedFault" message="NotLicensedFault">
    </wsdl:fault>
      <wsdl:fault name="InvalidArgumentFault" message="InvalidArgumentFault">
    </wsdl:fault>
      <wsdl:fault name="GeneralFault" message="GeneralFault">
    </wsdl:fault>
      <wsdl:fault name="SeatLicenseExpiredFault" message="SeatLicenseExpiredFault">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getEntityByEntityID">
      <wsdl:input message="getEntityByEntityIDInput">
    </wsdl:input>
      <wsdl:output message="getEntityByEntityIDOutput">
    </wsdl:output>
      <wsdl:fault name="NotLicensedFault" message="NotLicensedFault">
    </wsdl:fault>
      <wsdl:fault name="InvalidArgumentFault" message="InvalidArgumentFault">
    </wsdl:fault>
      <wsdl:fault name="GeneralFault" message="GeneralFault">
    </wsdl:fault>
      <wsdl:fault name="SeatLicenseExpiredFault" message="SeatLicenseExpiredFault">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getEntityDetailsByEntityID">
      <wsdl:input message="getEntityDetailsByEntityIDInput">
    </wsdl:input>
      <wsdl:output message="getEntityDetailsByEntityIDOutput">
    </wsdl:output>
      <wsdl:fault name="NotLicensedFault" message="NotLicensedFault">
    </wsdl:fault>
      <wsdl:fault name="InvalidArgumentFault" message="InvalidArgumentFault">
    </wsdl:fault>
      <wsdl:fault name="GeneralFault" message="GeneralFault">
    </wsdl:fault>
      <wsdl:fault name="SeatLicenseExpiredFault" message="SeatLicenseExpiredFault">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="setThumbnailPhoto">
      <wsdl:input message="setThumbnailPhotoInput">
    </wsdl:input>
      <wsdl:output message="setThumbnailPhotoOutput">
    </wsdl:output>
      <wsdl:fault name="NotLicensedFault" message="NotLicensedFault">
    </wsdl:fault>
      <wsdl:fault name="NotAllowedThumbnailPhotoFault" message="NotAllowedThumbnailPhotoFault">
    </wsdl:fault>
      <wsdl:fault name="InvalidArgumentFault" message="InvalidArgumentFault">
    </wsdl:fault>
      <wsdl:fault name="GeneralFault" message="GeneralFault">
    </wsdl:fault>
      <wsdl:fault name="FileTooLargeFault" message="FileTooLargeFault">
    </wsdl:fault>
      <wsdl:fault name="SeatLicenseExpiredFault" message="SeatLicenseExpiredFault">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="inviteToConference">
      <wsdl:input message="inviteToConferenceInput">
    </wsdl:input>
      <wsdl:output message="inviteToConferenceOutput">
    </wsdl:output>
      <wsdl:fault name="NotLicensedFault" message="NotLicensedFault">
    </wsdl:fault>
      <wsdl:fault name="InvalidArgumentFault" message="InvalidArgumentFault">
    </wsdl:fault>
      <wsdl:fault name="GeneralFault" message="GeneralFault">
    </wsdl:fault>
      <wsdl:fault name="ControlMeetingFault" message="ControlMeetingFault">
    </wsdl:fault>
      <wsdl:fault name="SeatLicenseExpiredFault" message="SeatLicenseExpiredFault">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="cancelOutboundCall">
      <wsdl:input message="cancelOutboundCallInput">
    </wsdl:input>
      <wsdl:output message="cancelOutboundCallOutput">
    </wsdl:output>
      <wsdl:fault name="NotLicensedFault" message="NotLicensedFault">
    </wsdl:fault>
      <wsdl:fault name="InvalidArgumentFault" message="InvalidArgumentFault">
    </wsdl:fault>
      <wsdl:fault name="GeneralFault" message="GeneralFault">
    </wsdl:fault>
      <wsdl:fault name="ControlMeetingFault" message="ControlMeetingFault">
    </wsdl:fault>
      <wsdl:fault name="SeatLicenseExpiredFault" message="SeatLicenseExpiredFault">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="joinConference">
      <wsdl:input message="joinConferenceInput">
    </wsdl:input>
      <wsdl:output message="joinConferenceOutput">
    </wsdl:output>
      <wsdl:fault name="NotLicensedFault" message="NotLicensedFault">
    </wsdl:fault>
      <wsdl:fault name="InvalidArgumentFault" message="InvalidArgumentFault">
    </wsdl:fault>
      <wsdl:fault name="GeneralFault" message="GeneralFault">
    </wsdl:fault>
      <wsdl:fault name="ConferenceLockedFault" message="ConferenceLockedFault">
    </wsdl:fault>
      <wsdl:fault name="SeatLicenseExpiredFault" message="SeatLicenseExpiredFault">
    </wsdl:fault>
      <wsdl:fault name="WrongPINFault" message="WrongPINFault">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="joinIPCConference">
      <wsdl:input message="joinIPCConferenceInput">
    </wsdl:input>
      <wsdl:output message="joinIPCConferenceOutput">
    </wsdl:output>
      <wsdl:fault name="NotLicensedFault" message="NotLicensedFault">
    </wsdl:fault>
      <wsdl:fault name="InvalidArgumentFault" message="InvalidArgumentFault">
    </wsdl:fault>
      <wsdl:fault name="GeneralFault" message="GeneralFault">
    </wsdl:fault>
      <wsdl:fault name="ConferenceLockedFault" message="ConferenceLockedFault">
    </wsdl:fault>
      <wsdl:fault name="SeatLicenseExpiredFault" message="SeatLicenseExpiredFault">
    </wsdl:fault>
      <wsdl:fault name="WrongPINFault" message="WrongPINFault">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="directCall">
      <wsdl:input message="directCallInput">
    </wsdl:input>
      <wsdl:output message="directCallOutput">
    </wsdl:output>
      <wsdl:fault name="NotLicensedFault" message="NotLicensedFault">
    </wsdl:fault>
      <wsdl:fault name="InvalidArgumentFault" message="InvalidArgumentFault">
    </wsdl:fault>
      <wsdl:fault name="GeneralFault" message="GeneralFault">
    </wsdl:fault>
      <wsdl:fault name="SeatLicenseExpiredFault" message="SeatLicenseExpiredFault">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getParticipants">
      <wsdl:input message="getParticipantsInput">
    </wsdl:input>
      <wsdl:output message="getParticipantsOutput">
    </wsdl:output>
      <wsdl:fault name="NotLicensedFault" message="NotLicensedFault">
    </wsdl:fault>
      <wsdl:fault name="InvalidArgumentFault" message="InvalidArgumentFault">
    </wsdl:fault>
      <wsdl:fault name="GeneralFault" message="GeneralFault">
    </wsdl:fault>
      <wsdl:fault name="ControlMeetingFault" message="ControlMeetingFault">
    </wsdl:fault>
      <wsdl:fault name="SeatLicenseExpiredFault" message="SeatLicenseExpiredFault">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getLectureModeParticipants">
      <wsdl:input message="getLectureModeParticipantsInput">
    </wsdl:input>
      <wsdl:output message="getLectureModeParticipantsOutput">
    </wsdl:output>
      <wsdl:fault name="NotLicensedFault" message="NotLicensedFault">
    </wsdl:fault>
      <wsdl:fault name="InvalidArgumentFault" message="InvalidArgumentFault">
    </wsdl:fault>
      <wsdl:fault name="GeneralFault" message="GeneralFault">
    </wsdl:fault>
      <wsdl:fault name="ControlMeetingFault" message="ControlMeetingFault">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="leaveConference">
      <wsdl:input message="leaveConferenceInput">
    </wsdl:input>
      <wsdl:output message="leaveConferenceOutput">
    </wsdl:output>
      <wsdl:fault name="NotLicensedFault" message="NotLicensedFault">
    </wsdl:fault>
      <wsdl:fault name="InvalidArgumentFault" message="InvalidArgumentFault">
    </wsdl:fault>
      <wsdl:fault name="GeneralFault" message="GeneralFault">
    </wsdl:fault>
      <wsdl:fault name="ControlMeetingFault" message="ControlMeetingFault">
    </wsdl:fault>
      <wsdl:fault name="SeatLicenseExpiredFault" message="SeatLicenseExpiredFault">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="muteAudio">
      <wsdl:input message="muteAudioInput">
    </wsdl:input>
      <wsdl:output message="muteAudioOutput">
    </wsdl:output>
      <wsdl:fault name="NotLicensedFault" message="NotLicensedFault">
    </wsdl:fault>
      <wsdl:fault name="InvalidArgumentFault" message="InvalidArgumentFault">
    </wsdl:fault>
      <wsdl:fault name="GeneralFault" message="GeneralFault">
    </wsdl:fault>
      <wsdl:fault name="ControlMeetingFault" message="ControlMeetingFault">
    </wsdl:fault>
      <wsdl:fault name="SeatLicenseExpiredFault" message="SeatLicenseExpiredFault">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="unmuteAudio">
      <wsdl:input message="unmuteAudioInput">
    </wsdl:input>
      <wsdl:output message="unmuteAudioOutput">
    </wsdl:output>
      <wsdl:fault name="NotLicensedFault" message="NotLicensedFault">
    </wsdl:fault>
      <wsdl:fault name="InvalidArgumentFault" message="InvalidArgumentFault">
    </wsdl:fault>
      <wsdl:fault name="GeneralFault" message="GeneralFault">
    </wsdl:fault>
      <wsdl:fault name="ControlMeetingFault" message="ControlMeetingFault">
    </wsdl:fault>
      <wsdl:fault name="SeatLicenseExpiredFault" message="SeatLicenseExpiredFault">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="startVideo">
      <wsdl:input message="startVideoInput">
    </wsdl:input>
      <wsdl:output message="startVideoOutput">
    </wsdl:output>
      <wsdl:fault name="NotLicensedFault" message="NotLicensedFault">
    </wsdl:fault>
      <wsdl:fault name="InvalidArgumentFault" message="InvalidArgumentFault">
    </wsdl:fault>
      <wsdl:fault name="GeneralFault" message="GeneralFault">
    </wsdl:fault>
      <wsdl:fault name="ControlMeetingFault" message="ControlMeetingFault">
    </wsdl:fault>
      <wsdl:fault name="SeatLicenseExpiredFault" message="SeatLicenseExpiredFault">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="stopVideo">
      <wsdl:input message="stopVideoInput">
    </wsdl:input>
      <wsdl:output message="stopVideoOutput">
    </wsdl:output>
      <wsdl:fault name="NotLicensedFault" message="NotLicensedFault">
    </wsdl:fault>
      <wsdl:fault name="InvalidArgumentFault" message="InvalidArgumentFault">
    </wsdl:fault>
      <wsdl:fault name="GeneralFault" message="GeneralFault">
    </wsdl:fault>
      <wsdl:fault name="ControlMeetingFault" message="ControlMeetingFault">
    </wsdl:fault>
      <wsdl:fault name="SeatLicenseExpiredFault" message="SeatLicenseExpiredFault">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="myAccount">
      <wsdl:input message="myAccountInput">
    </wsdl:input>
      <wsdl:output message="myAccountOutput">
    </wsdl:output>
      <wsdl:fault name="NotLicensedFault" message="NotLicensedFault">
    </wsdl:fault>
      <wsdl:fault name="InvalidArgumentFault" message="InvalidArgumentFault">
    </wsdl:fault>
      <wsdl:fault name="GeneralFault" message="GeneralFault">
    </wsdl:fault>
      <wsdl:fault name="SeatLicenseExpiredFault" message="SeatLicenseExpiredFault">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createRoomURL">
      <wsdl:input message="createRoomURLInput">
    </wsdl:input>
      <wsdl:output message="createRoomURLOutput">
    </wsdl:output>
      <wsdl:fault name="NotLicensedFault" message="NotLicensedFault">
    </wsdl:fault>
      <wsdl:fault name="InvalidArgumentFault" message="InvalidArgumentFault">
    </wsdl:fault>
      <wsdl:fault name="GeneralFault" message="GeneralFault">
    </wsdl:fault>
      <wsdl:fault name="SeatLicenseExpiredFault" message="SeatLicenseExpiredFault">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="removeRoomURL">
      <wsdl:input message="removeRoomURLInput">
    </wsdl:input>
      <wsdl:output message="removeRoomURLOutput">
    </wsdl:output>
      <wsdl:fault name="NotLicensedFault" message="NotLicensedFault">
    </wsdl:fault>
      <wsdl:fault name="InvalidArgumentFault" message="InvalidArgumentFault">
    </wsdl:fault>
      <wsdl:fault name="GeneralFault" message="GeneralFault">
    </wsdl:fault>
      <wsdl:fault name="SeatLicenseExpiredFault" message="SeatLicenseExpiredFault">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createRoomPIN">
      <wsdl:input message="createRoomPINInput">
    </wsdl:input>
      <wsdl:output message="createRoomPINOutput">
    </wsdl:output>
      <wsdl:fault name="NotLicensedFault" message="NotLicensedFault">
    </wsdl:fault>
      <wsdl:fault name="InvalidArgumentFault" message="InvalidArgumentFault">
    </wsdl:fault>
      <wsdl:fault name="GeneralFault" message="GeneralFault">
    </wsdl:fault>
      <wsdl:fault name="SeatLicenseExpiredFault" message="SeatLicenseExpiredFault">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="removeRoomPIN">
      <wsdl:input message="removeRoomPINInput">
    </wsdl:input>
      <wsdl:output message="removeRoomPINOutput">
    </wsdl:output>
      <wsdl:fault name="NotLicensedFault" message="NotLicensedFault">
    </wsdl:fault>
      <wsdl:fault name="InvalidArgumentFault" message="InvalidArgumentFault">
    </wsdl:fault>
      <wsdl:fault name="GeneralFault" message="GeneralFault">
    </wsdl:fault>
      <wsdl:fault name="SeatLicenseExpiredFault" message="SeatLicenseExpiredFault">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createRoom">
      <wsdl:input message="createRoomInput">
    </wsdl:input>
      <wsdl:output message="createRoomOutput">
    </wsdl:output>
      <wsdl:fault name="NotLicensedFault" message="NotLicensedFault">
    </wsdl:fault>
      <wsdl:fault name="InvalidArgumentFault" message="InvalidArgumentFault">
    </wsdl:fault>
      <wsdl:fault name="GeneralFault" message="GeneralFault">
    </wsdl:fault>
      <wsdl:fault name="SeatLicenseExpiredFault" message="SeatLicenseExpiredFault">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteRoom">
      <wsdl:input message="deleteRoomInput">
    </wsdl:input>
      <wsdl:output message="deleteRoomOutput">
    </wsdl:output>
      <wsdl:fault name="NotLicensedFault" message="NotLicensedFault">
    </wsdl:fault>
      <wsdl:fault name="InvalidArgumentFault" message="InvalidArgumentFault">
    </wsdl:fault>
      <wsdl:fault name="GeneralFault" message="GeneralFault">
    </wsdl:fault>
      <wsdl:fault name="SeatLicenseExpiredFault" message="SeatLicenseExpiredFault">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updatePassword">
      <wsdl:input message="updatePasswordInput">
    </wsdl:input>
      <wsdl:output message="updatePasswordOutput">
    </wsdl:output>
      <wsdl:fault name="NotLicensedFault" message="NotLicensedFault">
    </wsdl:fault>
      <wsdl:fault name="InvalidArgumentFault" message="InvalidArgumentFault">
    </wsdl:fault>
      <wsdl:fault name="GeneralFault" message="GeneralFault">
    </wsdl:fault>
      <wsdl:fault name="SeatLicenseExpiredFault" message="SeatLicenseExpiredFault">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updateLanguage">
      <wsdl:input message="updateLanguageInput">
    </wsdl:input>
      <wsdl:output message="updateLanguageOutput">
    </wsdl:output>
      <wsdl:fault name="NotLicensedFault" message="NotLicensedFault">
    </wsdl:fault>
      <wsdl:fault name="InvalidArgumentFault" message="InvalidArgumentFault">
    </wsdl:fault>
      <wsdl:fault name="GeneralFault" message="GeneralFault">
    </wsdl:fault>
      <wsdl:fault name="SeatLicenseExpiredFault" message="SeatLicenseExpiredFault">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="lockRoom">
      <wsdl:input message="lockRoomInput">
    </wsdl:input>
      <wsdl:output message="lockRoomOutput">
    </wsdl:output>
      <wsdl:fault name="NotLicensedFault" message="NotLicensedFault">
    </wsdl:fault>
      <wsdl:fault name="InvalidArgumentFault" message="InvalidArgumentFault">
    </wsdl:fault>
      <wsdl:fault name="GeneralFault" message="GeneralFault">
    </wsdl:fault>
      <wsdl:fault name="ControlMeetingFault" message="ControlMeetingFault">
    </wsdl:fault>
      <wsdl:fault name="SeatLicenseExpiredFault" message="SeatLicenseExpiredFault">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="unlockRoom">
      <wsdl:input message="unlockRoomInput">
    </wsdl:input>
      <wsdl:output message="unlockRoomOutput">
    </wsdl:output>
      <wsdl:fault name="NotLicensedFault" message="NotLicensedFault">
    </wsdl:fault>
      <wsdl:fault name="InvalidArgumentFault" message="InvalidArgumentFault">
    </wsdl:fault>
      <wsdl:fault name="GeneralFault" message="GeneralFault">
    </wsdl:fault>
      <wsdl:fault name="ControlMeetingFault" message="ControlMeetingFault">
    </wsdl:fault>
      <wsdl:fault name="SeatLicenseExpiredFault" message="SeatLicenseExpiredFault">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="setMemberMode">
      <wsdl:input message="setMemberModeInput">
    </wsdl:input>
      <wsdl:output message="setMemberModeOutput">
    </wsdl:output>
      <wsdl:fault name="NotLicensedFault" message="NotLicensedFault">
    </wsdl:fault>
      <wsdl:fault name="InvalidArgumentFault" message="InvalidArgumentFault">
    </wsdl:fault>
      <wsdl:fault name="GeneralFault" message="GeneralFault">
    </wsdl:fault>
      <wsdl:fault name="SeatLicenseExpiredFault" message="SeatLicenseExpiredFault">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getRecordingProfiles">
      <wsdl:input message="recordProfilesInput">
    </wsdl:input>
      <wsdl:output message="recordProfilesOutput">
    </wsdl:output>
      <wsdl:fault name="NotLicensedFault" message="NotLicensedFault">
    </wsdl:fault>
      <wsdl:fault name="InvalidArgumentFault" message="InvalidArgumentFault">
    </wsdl:fault>
      <wsdl:fault name="GeneralFault" message="GeneralFault">
    </wsdl:fault>
      <wsdl:fault name="SeatLicenseExpiredFault" message="SeatLicenseExpiredFault">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="startRecording">
      <wsdl:input message="startRecordingInput">
    </wsdl:input>
      <wsdl:output message="startRecordingOutput">
    </wsdl:output>
      <wsdl:fault name="NotLicensedFault" message="NotLicensedFault">
    </wsdl:fault>
      <wsdl:fault name="InvalidArgumentFault" message="InvalidArgumentFault">
    </wsdl:fault>
      <wsdl:fault name="ResourceNotAvailableFault" message="ResourceNotAvailableFault">
    </wsdl:fault>
      <wsdl:fault name="GeneralFault" message="GeneralFault">
    </wsdl:fault>
      <wsdl:fault name="ControlMeetingFault" message="ControlMeetingFault">
    </wsdl:fault>
      <wsdl:fault name="SeatLicenseExpiredFault" message="SeatLicenseExpiredFault">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getPortalVersion">
      <wsdl:input message="portalVersionInput">
    </wsdl:input>
      <wsdl:output message="portalVersionOutput">
    </wsdl:output>
      <wsdl:fault name="NotLicensedFault" message="NotLicensedFault">
    </wsdl:fault>
      <wsdl:fault name="InvalidArgumentFault" message="InvalidArgumentFault">
    </wsdl:fault>
      <wsdl:fault name="GeneralFault" message="GeneralFault">
    </wsdl:fault>
      <wsdl:fault name="SeatLicenseExpiredFault" message="SeatLicenseExpiredFault">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="pauseRecording">
      <wsdl:input message="pauseRecordingInput">
    </wsdl:input>
      <wsdl:output message="pauseRecordingOutput">
    </wsdl:output>
      <wsdl:fault name="NotLicensedFault" message="NotLicensedFault">
    </wsdl:fault>
      <wsdl:fault name="InvalidArgumentFault" message="InvalidArgumentFault">
    </wsdl:fault>
      <wsdl:fault name="GeneralFault" message="GeneralFault">
    </wsdl:fault>
      <wsdl:fault name="ControlMeetingFault" message="ControlMeetingFault">
    </wsdl:fault>
      <wsdl:fault name="SeatLicenseExpiredFault" message="SeatLicenseExpiredFault">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="resumeRecording">
      <wsdl:input message="resumeRecordingInput">
    </wsdl:input>
      <wsdl:output message="resumeRecordingOutput">
    </wsdl:output>
      <wsdl:fault name="NotLicensedFault" message="NotLicensedFault">
    </wsdl:fault>
      <wsdl:fault name="InvalidArgumentFault" message="InvalidArgumentFault">
    </wsdl:fault>
      <wsdl:fault name="GeneralFault" message="GeneralFault">
    </wsdl:fault>
      <wsdl:fault name="ControlMeetingFault" message="ControlMeetingFault">
    </wsdl:fault>
      <wsdl:fault name="SeatLicenseExpiredFault" message="SeatLicenseExpiredFault">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="stopRecording">
      <wsdl:input message="stopRecordingInput">
    </wsdl:input>
      <wsdl:output message="stopRecordingOutput">
    </wsdl:output>
      <wsdl:fault name="NotLicensedFault" message="NotLicensedFault">
    </wsdl:fault>
      <wsdl:fault name="InvalidArgumentFault" message="InvalidArgumentFault">
    </wsdl:fault>
      <wsdl:fault name="GeneralFault" message="GeneralFault">
    </wsdl:fault>
      <wsdl:fault name="ControlMeetingFault" message="ControlMeetingFault">
    </wsdl:fault>
      <wsdl:fault name="SeatLicenseExpiredFault" message="SeatLicenseExpiredFault">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createWebcastURL">
      <wsdl:input message="createWebcastURLInput">
    </wsdl:input>
      <wsdl:output message="createWebcastURLOutput">
    </wsdl:output>
      <wsdl:fault name="NotLicensedFault" message="NotLicensedFault">
    </wsdl:fault>
      <wsdl:fault name="InvalidArgumentFault" message="InvalidArgumentFault">
    </wsdl:fault>
      <wsdl:fault name="GeneralFault" message="GeneralFault">
    </wsdl:fault>
      <wsdl:fault name="SeatLicenseExpiredFault" message="SeatLicenseExpiredFault">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createWebcastPIN">
      <wsdl:input message="createWebcastPINInput">
    </wsdl:input>
      <wsdl:output message="createWebcastPINOutput">
    </wsdl:output>
      <wsdl:fault name="NotLicensedFault" message="NotLicensedFault">
    </wsdl:fault>
      <wsdl:fault name="InvalidArgumentFault" message="InvalidArgumentFault">
    </wsdl:fault>
      <wsdl:fault name="GeneralFault" message="GeneralFault">
    </wsdl:fault>
      <wsdl:fault name="SeatLicenseExpiredFault" message="SeatLicenseExpiredFault">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="removeWebcastURL">
      <wsdl:input message="removeWebcastURLInput">
    </wsdl:input>
      <wsdl:output message="removeWebcastURLOutput">
    </wsdl:output>
      <wsdl:fault name="NotLicensedFault" message="NotLicensedFault">
    </wsdl:fault>
      <wsdl:fault name="InvalidArgumentFault" message="InvalidArgumentFault">
    </wsdl:fault>
      <wsdl:fault name="GeneralFault" message="GeneralFault">
    </wsdl:fault>
      <wsdl:fault name="SeatLicenseExpiredFault" message="SeatLicenseExpiredFault">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="removeWebcastPIN">
      <wsdl:input message="removeWebcastPINInput">
    </wsdl:input>
      <wsdl:output message="removeWebcastPINOutput">
    </wsdl:output>
      <wsdl:fault name="NotLicensedFault" message="NotLicensedFault">
    </wsdl:fault>
      <wsdl:fault name="InvalidArgumentFault" message="InvalidArgumentFault">
    </wsdl:fault>
      <wsdl:fault name="GeneralFault" message="GeneralFault">
    </wsdl:fault>
      <wsdl:fault name="SeatLicenseExpiredFault" message="SeatLicenseExpiredFault">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getWebcastURL">
      <wsdl:input message="webcastURLInput">
    </wsdl:input>
      <wsdl:output message="webcastURLOutput">
    </wsdl:output>
      <wsdl:fault name="NotLicensedFault" message="NotLicensedFault">
    </wsdl:fault>
      <wsdl:fault name="InvalidArgumentFault" message="InvalidArgumentFault">
    </wsdl:fault>
      <wsdl:fault name="GeneralFault" message="GeneralFault">
    </wsdl:fault>
      <wsdl:fault name="SeatLicenseExpiredFault" message="SeatLicenseExpiredFault">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getUserName">
      <wsdl:input message="getUserNameInput">
    </wsdl:input>
      <wsdl:output message="getUserNameOutput">
    </wsdl:output>
      <wsdl:fault name="NotLicensedFault" message="NotLicensedFault">
    </wsdl:fault>
      <wsdl:fault name="InvalidArgumentFault" message="InvalidArgumentFault">
    </wsdl:fault>
      <wsdl:fault name="GeneralFault" message="GeneralFault">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getEntityByRoomKey">
      <wsdl:input message="getEntityByRoomKeyInput">
    </wsdl:input>
      <wsdl:output message="getEntityByRoomKeyOutput">
    </wsdl:output>
      <wsdl:fault name="NotLicensedFault" message="NotLicensedFault">
    </wsdl:fault>
      <wsdl:fault name="InvalidArgumentFault" message="InvalidArgumentFault">
    </wsdl:fault>
      <wsdl:fault name="GeneralFault" message="GeneralFault">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getInviteContent">
      <wsdl:input message="getInviteContentInput">
    </wsdl:input>
      <wsdl:output message="getInviteContentOutput">
    </wsdl:output>
      <wsdl:fault name="NotLicensedFault" message="NotLicensedFault">
    </wsdl:fault>
      <wsdl:fault name="InvalidArgumentFault" message="InvalidArgumentFault">
    </wsdl:fault>
      <wsdl:fault name="GeneralFault" message="GeneralFault">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getRoomProfiles">
      <wsdl:input message="getRoomProfilesInput">
    </wsdl:input>
      <wsdl:output message="getRoomProfilesOutput">
    </wsdl:output>
      <wsdl:fault name="NotLicensedFault" message="NotLicensedFault">
    </wsdl:fault>
      <wsdl:fault name="InvalidArgumentFault" message="InvalidArgumentFault">
    </wsdl:fault>
      <wsdl:fault name="GeneralFault" message="GeneralFault">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getRoomProfile">
      <wsdl:input message="getRoomProfileInput">
    </wsdl:input>
      <wsdl:output message="getRoomProfileOutput">
    </wsdl:output>
      <wsdl:fault name="NotLicensedFault" message="NotLicensedFault">
    </wsdl:fault>
      <wsdl:fault name="InvalidArgumentFault" message="InvalidArgumentFault">
    </wsdl:fault>
      <wsdl:fault name="GeneralFault" message="GeneralFault">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="setRoomProfile">
      <wsdl:input message="setRoomProfileInput">
    </wsdl:input>
      <wsdl:output message="setRoomProfileOutput">
    </wsdl:output>
      <wsdl:fault name="NotLicensedFault" message="NotLicensedFault">
    </wsdl:fault>
      <wsdl:fault name="InvalidArgumentFault" message="InvalidArgumentFault">
    </wsdl:fault>
      <wsdl:fault name="GeneralFault" message="GeneralFault">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="removeRoomProfile">
      <wsdl:input message="removeRoomProfileInput">
    </wsdl:input>
      <wsdl:output message="removeRoomProfileOutput">
    </wsdl:output>
      <wsdl:fault name="NotLicensedFault" message="NotLicensedFault">
    </wsdl:fault>
      <wsdl:fault name="InvalidArgumentFault" message="InvalidArgumentFault">
    </wsdl:fault>
      <wsdl:fault name="GeneralFault" message="GeneralFault">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createModeratorURL">
      <wsdl:input message="createModeratorURLInput">
    </wsdl:input>
      <wsdl:output message="createModeratorURLOutput">
    </wsdl:output>
      <wsdl:fault name="NotLicensedFault" message="NotLicensedFault">
    </wsdl:fault>
      <wsdl:fault name="InvalidArgumentFault" message="InvalidArgumentFault">
    </wsdl:fault>
      <wsdl:fault name="GeneralFault" message="GeneralFault">
    </wsdl:fault>
      <wsdl:fault name="ControlMeetingFault" message="ControlMeetingFault">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="removeModeratorURL">
      <wsdl:input message="removeModeratorURLInput">
    </wsdl:input>
      <wsdl:output message="removeModeratorURLOutput">
    </wsdl:output>
      <wsdl:fault name="NotLicensedFault" message="NotLicensedFault">
    </wsdl:fault>
      <wsdl:fault name="InvalidArgumentFault" message="InvalidArgumentFault">
    </wsdl:fault>
      <wsdl:fault name="GeneralFault" message="GeneralFault">
    </wsdl:fault>
      <wsdl:fault name="ControlMeetingFault" message="ControlMeetingFault">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getModeratorURL">
      <wsdl:input message="moderatorURLInput">
    </wsdl:input>
      <wsdl:output message="moderatorURLOutput">
    </wsdl:output>
      <wsdl:fault name="NotLicensedFault" message="NotLicensedFault">
    </wsdl:fault>
      <wsdl:fault name="InvalidArgumentFault" message="InvalidArgumentFault">
    </wsdl:fault>
      <wsdl:fault name="GeneralFault" message="GeneralFault">
    </wsdl:fault>
      <wsdl:fault name="ControlMeetingFault" message="ControlMeetingFault">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getModeratorURLWithToken">
      <wsdl:input message="moderatorURLWithTokenInput">
    </wsdl:input>
      <wsdl:output message="moderatorURLWithTokenOutput">
    </wsdl:output>
      <wsdl:fault name="NotLicensedFault" message="NotLicensedFault">
    </wsdl:fault>
      <wsdl:fault name="InvalidArgumentFault" message="InvalidArgumentFault">
    </wsdl:fault>
      <wsdl:fault name="GeneralFault" message="GeneralFault">
    </wsdl:fault>
      <wsdl:fault name="ControlMeetingFault" message="ControlMeetingFault">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createModeratorPIN">
      <wsdl:input message="createModeratorPINInput">
    </wsdl:input>
      <wsdl:output message="createModeratorPINOutput">
    </wsdl:output>
      <wsdl:fault name="NotLicensedFault" message="NotLicensedFault">
    </wsdl:fault>
      <wsdl:fault name="InvalidArgumentFault" message="InvalidArgumentFault">
    </wsdl:fault>
      <wsdl:fault name="InvalidModeratorPINFormatFault" message="InvalidModeratorPINFormatFault">
    </wsdl:fault>
      <wsdl:fault name="GeneralFault" message="GeneralFault">
    </wsdl:fault>
      <wsdl:fault name="ControlMeetingFault" message="ControlMeetingFault">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="removeModeratorPIN">
      <wsdl:input message="removeModeratorPINInput">
    </wsdl:input>
      <wsdl:output message="removeModeratorPINOutput">
    </wsdl:output>
      <wsdl:fault name="NotLicensedFault" message="NotLicensedFault">
    </wsdl:fault>
      <wsdl:fault name="InvalidArgumentFault" message="InvalidArgumentFault">
    </wsdl:fault>
      <wsdl:fault name="GeneralFault" message="GeneralFault">
    </wsdl:fault>
      <wsdl:fault name="ControlMeetingFault" message="ControlMeetingFault">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getConferenceID">
      <wsdl:input message="getConferenceIDInput">
    </wsdl:input>
      <wsdl:output message="getConferenceIDOutput">
    </wsdl:output>
      <wsdl:fault name="NotLicensedFault" message="NotLicensedFault">
    </wsdl:fault>
      <wsdl:fault name="InPointToPointCallFault" message="InPointToPointCallFault">
    </wsdl:fault>
      <wsdl:fault name="GeneralFault" message="GeneralFault">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="generateAuthToken">
      <wsdl:input message="generateAuthTokenInput">
    </wsdl:input>
      <wsdl:output message="generateAuthTokenOutput">
    </wsdl:output>
      <wsdl:fault name="EndpointNotBoundFault" message="EndpointNotBoundFault">
    </wsdl:fault>
      <wsdl:fault name="NotLicensedFault" message="NotLicensedFault">
    </wsdl:fault>
      <wsdl:fault name="InvalidArgumentFault" message="InvalidArgumentFault">
    </wsdl:fault>
      <wsdl:fault name="GeneralFault" message="GeneralFault">
    </wsdl:fault>
      <wsdl:fault name="SeatLicenseExpiredFault" message="SeatLicenseExpiredFault">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createScheduledRoom">
      <wsdl:input message="createScheduledRoomInput">
    </wsdl:input>
      <wsdl:output message="createScheduledRoomOutput">
    </wsdl:output>
    <wsdl:fault name="ScheduledRoomCreationFault" message="ScheduledRoomCreationFault">
    </wsdl:fault>
    <wsdl:fault name="NotLicensedFault" message="NotLicensedFault">
    </wsdl:fault>
    <wsdl:fault name="InvalidArgumentFault" message="InvalidArgumentFault">
    </wsdl:fault>
    <wsdl:fault name="GeneralFault" message="GeneralFault">
    </wsdl:fault>
    <wsdl:fault name="SeatLicenseExpiredFault" message="SeatLicenseExpiredFault">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteScheduledRoom">
      <wsdl:input message="deleteScheduledRoomInput">
    </wsdl:input>
      <wsdl:output message="deleteScheduledRoomOutput">
    </wsdl:output>
      <wsdl:fault name="NotLicensedFault" message="NotLicensedFault">
    </wsdl:fault>
      <wsdl:fault name="RoomNotFoundFault" message="RoomNotFoundFault">
    </wsdl:fault>
      <wsdl:fault name="InvalidArgumentFault" message="InvalidArgumentFault">
    </wsdl:fault>
      <wsdl:fault name="GeneralFault" message="GeneralFault">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createPublicRoom">
      <wsdl:input message="createPublicRoomInput">
    </wsdl:input>
      <wsdl:output message="createPublicRoomOutput">
    </wsdl:output>
      <wsdl:fault name="NotAllowedToCreateFault" message="NotAllowedToCreateFault">
    </wsdl:fault>
      <wsdl:fault name="NotLicensedFault" message="NotLicensedFault">
    </wsdl:fault>
      <wsdl:fault name="InvalidArgumentFault" message="InvalidArgumentFault">
    </wsdl:fault>
      <wsdl:fault name="PublicRoomCreationFault" message="PublicRoomCreationFault">
    </wsdl:fault>
      <wsdl:fault name="GeneralFault" message="GeneralFault">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updatePublicRoomDescription">
      <wsdl:input message="updatePublicRoomDescriptionInput">
    </wsdl:input>
      <wsdl:output message="updatePublicRoomDescriptionOutput">
    </wsdl:output>
      <wsdl:fault name="NotLicensedFault" message="NotLicensedFault">
    </wsdl:fault>
      <wsdl:fault name="RoomNotFoundFault" message="RoomNotFoundFault">
    </wsdl:fault>
      <wsdl:fault name="InvalidArgumentFault" message="InvalidArgumentFault">
    </wsdl:fault>
      <wsdl:fault name="GeneralFault" message="GeneralFault">
    </wsdl:fault>
      <wsdl:fault name="PublicRoomDescUpdationFault" message="PublicRoomDescUpdationFault">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getPortalFeatures">
      <wsdl:input message="getPortalFeaturesInput">
    </wsdl:input>
      <wsdl:output message="getPortalFeaturesOutput">
    </wsdl:output>
      <wsdl:fault name="NotLicensedFault" message="NotLicensedFault">
    </wsdl:fault>
      <wsdl:fault name="GeneralFault" message="GeneralFault">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="setEndpointDetails">
      <wsdl:input message="setEndpointDetailsInput">
    </wsdl:input>
      <wsdl:output message="setEndpointDetailsOutput">
    </wsdl:output>
      <wsdl:fault name="EndpointNotBoundFault" message="EndpointNotBoundFault">
    </wsdl:fault>
      <wsdl:fault name="NotLicensedFault" message="NotLicensedFault">
    </wsdl:fault>
      <wsdl:fault name="InvalidArgumentFault" message="InvalidArgumentFault">
    </wsdl:fault>
      <wsdl:fault name="GeneralFault" message="GeneralFault">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getActiveSessions">
      <wsdl:input message="getActiveSessionsInput">
    </wsdl:input>
      <wsdl:output message="getActiveSessionsOutput">
    </wsdl:output>
      <wsdl:fault name="NotLicensedFault" message="NotLicensedFault">
    </wsdl:fault>
      <wsdl:fault name="GeneralFault" message="GeneralFault">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="logoutAllOtherSessions">
      <wsdl:input message="logoutAllOtherSessionsInput">
    </wsdl:input>
      <wsdl:output message="logoutAllOtherSessionsOutput">
    </wsdl:output>
      <wsdl:fault name="NotLicensedFault" message="NotLicensedFault">
    </wsdl:fault>
      <wsdl:fault name="GeneralFault" message="GeneralFault">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="disconnectConferenceAll">
      <wsdl:input message="disconnectConferenceAllInput">
    </wsdl:input>
      <wsdl:output message="disconnectConferenceAllOutput">
    </wsdl:output>
      <wsdl:fault name="NotLicensedFault" message="NotLicensedFault">
    </wsdl:fault>
      <wsdl:fault name="InvalidArgumentFault" message="InvalidArgumentFault">
    </wsdl:fault>
      <wsdl:fault name="GeneralFault" message="GeneralFault">
    </wsdl:fault>
      <wsdl:fault name="ControlMeetingFault" message="ControlMeetingFault">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="muteAudioServerAll">
      <wsdl:input message="muteAudioServerAllInput">
    </wsdl:input>
      <wsdl:output message="muteAudioServerAllOutput">
    </wsdl:output>
      <wsdl:fault name="NotLicensedFault" message="NotLicensedFault">
    </wsdl:fault>
      <wsdl:fault name="InvalidArgumentFault" message="InvalidArgumentFault">
    </wsdl:fault>
      <wsdl:fault name="GeneralFault" message="GeneralFault">
    </wsdl:fault>
      <wsdl:fault name="ControlMeetingFault" message="ControlMeetingFault">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="muteAudioClientAll">
      <wsdl:input message="muteAudioClientAllInput">
    </wsdl:input>
      <wsdl:output message="muteAudioClientAllOutput">
    </wsdl:output>
      <wsdl:fault name="NotLicensedFault" message="NotLicensedFault">
    </wsdl:fault>
      <wsdl:fault name="InvalidArgumentFault" message="InvalidArgumentFault">
    </wsdl:fault>
      <wsdl:fault name="GeneralFault" message="GeneralFault">
    </wsdl:fault>
      <wsdl:fault name="ControlMeetingFault" message="ControlMeetingFault">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="muteVideoServerAll">
      <wsdl:input message="muteVideoServerAllInput">
    </wsdl:input>
      <wsdl:output message="muteVideoServerAllOutput">
    </wsdl:output>
      <wsdl:fault name="NotLicensedFault" message="NotLicensedFault">
    </wsdl:fault>
      <wsdl:fault name="InvalidArgumentFault" message="InvalidArgumentFault">
    </wsdl:fault>
      <wsdl:fault name="GeneralFault" message="GeneralFault">
    </wsdl:fault>
      <wsdl:fault name="ControlMeetingFault" message="ControlMeetingFault">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="muteVideoClientAll">
      <wsdl:input message="muteVideoClientAllInput">
    </wsdl:input>
      <wsdl:output message="muteVideoClientAllOutput">
    </wsdl:output>
      <wsdl:fault name="NotLicensedFault" message="NotLicensedFault">
    </wsdl:fault>
      <wsdl:fault name="InvalidArgumentFault" message="InvalidArgumentFault">
    </wsdl:fault>
      <wsdl:fault name="GeneralFault" message="GeneralFault">
    </wsdl:fault>
      <wsdl:fault name="ControlMeetingFault" message="ControlMeetingFault">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getOnetimeAccessUrl">
      <wsdl:input message="onetimeAccessUrlRequestMessage">
    </wsdl:input>
      <wsdl:output message="onetimeAccessUrlResponseMessage">
    </wsdl:output>
      <wsdl:fault name="NotLicensedFault" message="NotLicensedFault">
    </wsdl:fault>
      <wsdl:fault name="InvalidArgumentFault" message="InvalidArgumentFault">
    </wsdl:fault>
      <wsdl:fault name="GeneralFault" message="GeneralFault">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getRoomAccessOptions">
      <wsdl:input message="roomAccessOptionsRequestMessage">
    </wsdl:input>
      <wsdl:output message="roomAccessOptionsResponseMessage">
    </wsdl:output>
      <wsdl:fault name="NotLicensedFault" message="NotLicensedFault">
    </wsdl:fault>
      <wsdl:fault name="InvalidArgumentFault" message="InvalidArgumentFault">
    </wsdl:fault>
      <wsdl:fault name="GeneralFault" message="GeneralFault">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getPortalPrefix">
      <wsdl:input message="portalPrefixRequestMessage">
    </wsdl:input>
      <wsdl:output message="portalPrefixResponseMessage">
    </wsdl:output>
      <wsdl:fault name="NotLicensedFault" message="NotLicensedFault">
    </wsdl:fault>
      <wsdl:fault name="GeneralFault" message="GeneralFault">
    </wsdl:fault>
      <wsdl:fault name="PrefixNotConfiguredFault" message="PrefixNotConfiguredFault">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getLoginAndWelcomeBanner">
      <wsdl:input message="getLoginAndWelcomeBannerInput">
    </wsdl:input>
      <wsdl:output message="getLoginAndWelcomeBannerOutput">
    </wsdl:output>
      <wsdl:fault name="NotLicensedFault" message="NotLicensedFault">
    </wsdl:fault>
      <wsdl:fault name="GeneralFault" message="GeneralFault">
    </wsdl:fault>
      <wsdl:fault name="FeatureNotAvailableFault" message="FeatureNotAvailableFault">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getUserAccountType">
      <wsdl:input message="getUserAccountTypeInput">
    </wsdl:input>
      <wsdl:output message="getUserAccountTypeOutput">
    </wsdl:output>
      <wsdl:fault name="NotLicensedFault" message="NotLicensedFault">
    </wsdl:fault>
      <wsdl:fault name="GeneralFault" message="GeneralFault">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="startLectureMode">
      <wsdl:input message="startLectureModeInput">
    </wsdl:input>
      <wsdl:output message="startLectureModeOutput">
    </wsdl:output>
      <wsdl:fault name="NotLicensedFault" message="NotLicensedFault">
    </wsdl:fault>
      <wsdl:fault name="InvalidArgumentFault" message="InvalidArgumentFault">
    </wsdl:fault>
      <wsdl:fault name="GeneralFault" message="GeneralFault">
    </wsdl:fault>
      <wsdl:fault name="ControlMeetingFault" message="ControlMeetingFault">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="stopLectureMode">
      <wsdl:input message="stopLectureModeInput">
    </wsdl:input>
      <wsdl:output message="stopLectureModeOutput">
    </wsdl:output>
      <wsdl:fault name="NotLicensedFault" message="NotLicensedFault">
    </wsdl:fault>
      <wsdl:fault name="InvalidArgumentFault" message="InvalidArgumentFault">
    </wsdl:fault>
      <wsdl:fault name="GeneralFault" message="GeneralFault">
    </wsdl:fault>
      <wsdl:fault name="ControlMeetingFault" message="ControlMeetingFault">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="raiseHand">
      <wsdl:input message="raiseHandInput">
    </wsdl:input>
      <wsdl:output message="raiseHandOutput">
    </wsdl:output>
      <wsdl:fault name="NotLicensedFault" message="NotLicensedFault">
    </wsdl:fault>
      <wsdl:fault name="InvalidArgumentFault" message="InvalidArgumentFault">
    </wsdl:fault>
      <wsdl:fault name="GeneralFault" message="GeneralFault">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="unraiseHand">
      <wsdl:input message="unraiseHandInput">
    </wsdl:input>
      <wsdl:output message="unraiseHandOutput">
    </wsdl:output>
      <wsdl:fault name="NotLicensedFault" message="NotLicensedFault">
    </wsdl:fault>
      <wsdl:fault name="InvalidArgumentFault" message="InvalidArgumentFault">
    </wsdl:fault>
      <wsdl:fault name="GeneralFault" message="GeneralFault">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="dismissRaisedHand">
      <wsdl:input message="dismissRaisedHandInput">
    </wsdl:input>
      <wsdl:output message="dismissRaisedHandOutput">
    </wsdl:output>
      <wsdl:fault name="NotLicensedFault" message="NotLicensedFault">
    </wsdl:fault>
      <wsdl:fault name="InvalidArgumentFault" message="InvalidArgumentFault">
    </wsdl:fault>
      <wsdl:fault name="GeneralFault" message="GeneralFault">
    </wsdl:fault>
      <wsdl:fault name="ControlMeetingFault" message="ControlMeetingFault">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="dismissAllRaisedHand">
      <wsdl:input message="dismissAllRaisedHandInput">
    </wsdl:input>
      <wsdl:output message="dismissAllRaisedHandOutput">
    </wsdl:output>
      <wsdl:fault name="NotLicensedFault" message="NotLicensedFault">
    </wsdl:fault>
      <wsdl:fault name="InvalidArgumentFault" message="InvalidArgumentFault">
    </wsdl:fault>
      <wsdl:fault name="GeneralFault" message="GeneralFault">
    </wsdl:fault>
      <wsdl:fault name="ControlMeetingFault" message="ControlMeetingFault">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="setPresenter">
      <wsdl:input message="setPresenterInput">
    </wsdl:input>
      <wsdl:output message="setPresenterOutput">
    </wsdl:output>
      <wsdl:fault name="NotLicensedFault" message="NotLicensedFault">
    </wsdl:fault>
      <wsdl:fault name="InvalidArgumentFault" message="InvalidArgumentFault">
    </wsdl:fault>
      <wsdl:fault name="GeneralFault" message="GeneralFault">
    </wsdl:fault>
      <wsdl:fault name="ControlMeetingFault" message="ControlMeetingFault">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="removePresenter">
      <wsdl:input message="removePresenterInput">
    </wsdl:input>
      <wsdl:output message="removePresenterOutput">
    </wsdl:output>
      <wsdl:fault name="NotLicensedFault" message="NotLicensedFault">
    </wsdl:fault>
      <wsdl:fault name="InvalidArgumentFault" message="InvalidArgumentFault">
    </wsdl:fault>
      <wsdl:fault name="GeneralFault" message="GeneralFault">
    </wsdl:fault>
      <wsdl:fault name="ControlMeetingFault" message="ControlMeetingFault">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getVidyoReplayLibrary">
      <wsdl:input message="getVidyoReplayLibraryInput">
    </wsdl:input>
      <wsdl:output message="getVidyoReplayLibraryOutput">
    </wsdl:output>
      <wsdl:fault name="VidyoReplayNotAvailableFault" message="VidyoReplayNotAvailableFault">
    </wsdl:fault>
      <wsdl:fault name="NotLicensedFault" message="NotLicensedFault">
    </wsdl:fault>
      <wsdl:fault name="GeneralFault" message="GeneralFault">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="whatIsMyIPAddress">
      <wsdl:input message="whatIsMyIPAddressInput">
    </wsdl:input>
      <wsdl:output message="whatIsMyIPAddressOutput">
    </wsdl:output>
      <wsdl:fault name="NotLicensedFault" message="NotLicensedFault">
    </wsdl:fault>
      <wsdl:fault name="GeneralFault" message="GeneralFault">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getChangePasswordHtmlUrlWithToken">
      <wsdl:input message="getChangePasswordHtmlUrlWithTokenInput">
    </wsdl:input>
      <wsdl:output message="getChangePasswordHtmlUrlWithTokenOutput">
    </wsdl:output>
      <wsdl:fault name="NotLicensedFault" message="NotLicensedFault">
    </wsdl:fault>
      <wsdl:fault name="GeneralFault" message="GeneralFault">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getPINLengthRange">
      <wsdl:input message="getPINLengthRangeInput">
    </wsdl:input>
      <wsdl:output message="getPINLengthRangeOutput">
    </wsdl:output>
      <wsdl:fault name="NotLicensedFault" message="NotLicensedFault">
    </wsdl:fault>
      <wsdl:fault name="GeneralFault" message="GeneralFault">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="silenceSpeakerServer">
      <wsdl:input message="silenceSpeakerServerInput">
    </wsdl:input>
      <wsdl:output message="silenceSpeakerServerOutput">
    </wsdl:output>
      <wsdl:fault name="NotLicensedFault" message="NotLicensedFault">
    </wsdl:fault>
      <wsdl:fault name="InvalidConferenceFault" message="InvalidConferenceFault">
    </wsdl:fault>
      <wsdl:fault name="InvalidParticipantFault" message="InvalidParticipantFault">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="silenceSpeakerServerAll">
      <wsdl:input message="silenceSpeakerServerAllInput">
    </wsdl:input>
      <wsdl:output message="silenceSpeakerServerAllOutput">
    </wsdl:output>
      <wsdl:fault name="NotLicensedFault" message="NotLicensedFault">
    </wsdl:fault>
      <wsdl:fault name="InvalidConferenceFault" message="InvalidConferenceFault">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getLogAggregationServer">
       <wsdl:input message="tns:getLogAggregationServerInput" />
	   <wsdl:output message="tns:getLogAggregationServerOutput" />
       <wsdl:fault name="LogAggregationDisabledFault" message="tns:LogAggregationDisabledFault" />
    </wsdl:operation>
    <wsdl:operation name="createTestcallRoom">
      <wsdl:input message="createTestcallRoomInput">
    </wsdl:input>
      <wsdl:output message="createTestcallRoomOutput">
    </wsdl:output>
      <wsdl:fault name="TestcallRoomCreationFault" message="TestcallRoomCreationFault">
    </wsdl:fault>
      <wsdl:fault name="NotLicensedFault" message="NotLicensedFault">
    </wsdl:fault>
      <wsdl:fault name="InvalidArgumentFault" message="InvalidArgumentFault">
    </wsdl:fault>
      <wsdl:fault name="GeneralFault" message="GeneralFault">
    </wsdl:fault>
      <wsdl:fault name="SeatLicenseExpiredFault" message="SeatLicenseExpiredFault">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="muteAudioLocal">
      <wsdl:input message="muteAudioInput">
    </wsdl:input>
      <wsdl:output message="participantStatusOutput">
    </wsdl:output>
      <wsdl:fault name="NotLicensedFault" message="NotLicensedFault">
    </wsdl:fault>
      <wsdl:fault name="InvalidArgumentFault" message="InvalidArgumentFault">
    </wsdl:fault>
      <wsdl:fault name="GeneralFault" message="GeneralFault">
    </wsdl:fault>
      <wsdl:fault name="ControlMeetingFault" message="ControlMeetingFault">
    </wsdl:fault>
      <wsdl:fault name="SeatLicenseExpiredFault" message="SeatLicenseExpiredFault">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="muteVideoLocal">
      <wsdl:input message="muteVideoInput">
    </wsdl:input>
      <wsdl:output message="participantStatusOutput">
    </wsdl:output>
      <wsdl:fault name="NotLicensedFault" message="NotLicensedFault">
    </wsdl:fault>
      <wsdl:fault name="InvalidArgumentFault" message="InvalidArgumentFault">
    </wsdl:fault>
      <wsdl:fault name="GeneralFault" message="GeneralFault">
    </wsdl:fault>
      <wsdl:fault name="ControlMeetingFault" message="ControlMeetingFault">
    </wsdl:fault>
      <wsdl:fault name="SeatLicenseExpiredFault" message="SeatLicenseExpiredFault">
    </wsdl:fault>
    </wsdl:operation>        
  </wsdl:portType>
  <wsdl:binding name="VidyoPortalUserServiceBinding" type="VidyoPortalUserServicePortType">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="logIn">
      <soap:operation soapAction="logIn"/>
      <wsdl:input>
        <soap:body use="literal" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
      </wsdl:output>
      <wsdl:fault name="NotLicensedFault">
        <soap:fault name="NotLicensedFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidArgumentFault">
        <soap:fault name="InvalidArgumentFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="GeneralFault">
        <soap:fault name="GeneralFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="SeatLicenseExpiredFault">
        <soap:fault name="SeatLicenseExpiredFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="linkEndpoint">
      <soap:operation soapAction="linkEndpoint"/>
      <wsdl:input>
        <soap:body use="literal" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
      </wsdl:output>
      <wsdl:fault name="NotLicensedFault">
        <soap:fault name="NotLicensedFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="AccessRestrictedFault">
        <soap:fault name="AccessRestrictedFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidArgumentFault">
        <soap:fault name="InvalidArgumentFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="GeneralFault">
        <soap:fault name="GeneralFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="SeatLicenseExpiredFault">
        <soap:fault name="SeatLicenseExpiredFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="logOut">
      <soap:operation soapAction="logOut"/>
      <wsdl:input>
        <soap:body use="literal" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
      </wsdl:output>
      <wsdl:fault name="NotLicensedFault">
        <soap:fault name="NotLicensedFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidArgumentFault">
        <soap:fault name="InvalidArgumentFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="GeneralFault">
        <soap:fault name="GeneralFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="SeatLicenseExpiredFault">
        <soap:fault name="SeatLicenseExpiredFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="myEndpointStatus">
      <soap:operation soapAction="myEndpointStatus"/>
      <wsdl:input>
        <soap:body use="literal" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
      </wsdl:output>
      <wsdl:fault name="NotLicensedFault">
        <soap:fault name="NotLicensedFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidArgumentFault">
        <soap:fault name="InvalidArgumentFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="GeneralFault">
        <soap:fault name="GeneralFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="SeatLicenseExpiredFault">
        <soap:fault name="SeatLicenseExpiredFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="searchMyContacts">
      <soap:operation soapAction="searchMyContacts"/>
      <wsdl:input>
        <soap:body use="literal" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
      </wsdl:output>
      <wsdl:fault name="NotLicensedFault">
        <soap:fault name="NotLicensedFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidArgumentFault">
        <soap:fault name="InvalidArgumentFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="GeneralFault">
        <soap:fault name="GeneralFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="SeatLicenseExpiredFault">
        <soap:fault name="SeatLicenseExpiredFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addToMyContacts">
      <soap:operation soapAction="addToMyContacts"/>
      <wsdl:input>
        <soap:body use="literal" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
      </wsdl:output>
      <wsdl:fault name="NotLicensedFault">
        <soap:fault name="NotLicensedFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidArgumentFault">
        <soap:fault name="InvalidArgumentFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="GeneralFault">
        <soap:fault name="GeneralFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="SeatLicenseExpiredFault">
        <soap:fault name="SeatLicenseExpiredFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="removeFromMyContacts">
      <soap:operation soapAction="removeFromMyContacts"/>
      <wsdl:input>
        <soap:body use="literal" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
      </wsdl:output>
      <wsdl:fault name="NotLicensedFault">
        <soap:fault name="NotLicensedFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidArgumentFault">
        <soap:fault name="InvalidArgumentFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="GeneralFault">
        <soap:fault name="GeneralFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="SeatLicenseExpiredFault">
        <soap:fault name="SeatLicenseExpiredFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="search">
      <soap:operation soapAction="search"/>
      <wsdl:input>
        <soap:body use="literal" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
      </wsdl:output>
      <wsdl:fault name="NotLicensedFault">
        <soap:fault name="NotLicensedFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidArgumentFault">
        <soap:fault name="InvalidArgumentFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="GeneralFault">
        <soap:fault name="GeneralFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="SeatLicenseExpiredFault">
        <soap:fault name="SeatLicenseExpiredFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="searchByEntityID">
      <soap:operation soapAction="searchByEntityID"/>
      <wsdl:input>
        <soap:body use="literal" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
      </wsdl:output>
      <wsdl:fault name="NotLicensedFault">
        <soap:fault name="NotLicensedFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidArgumentFault">
        <soap:fault name="InvalidArgumentFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="GeneralFault">
        <soap:fault name="GeneralFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="SeatLicenseExpiredFault">
        <soap:fault name="SeatLicenseExpiredFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="searchByEmail">
      <soap:operation soapAction="searchByEmail"/>
      <wsdl:input>
        <soap:body use="literal" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
      </wsdl:output>
      <wsdl:fault name="NotLicensedFault">
        <soap:fault name="NotLicensedFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidArgumentFault">
        <soap:fault name="InvalidArgumentFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="GeneralFault">
        <soap:fault name="GeneralFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="SeatLicenseExpiredFault">
        <soap:fault name="SeatLicenseExpiredFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="searchMembers">
      <soap:operation soapAction="searchMembers"/>
      <wsdl:input>
        <soap:body use="literal" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
      </wsdl:output>
      <wsdl:fault name="NotLicensedFault">
        <soap:fault name="NotLicensedFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidArgumentFault">
        <soap:fault name="InvalidArgumentFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="GeneralFault">
        <soap:fault name="GeneralFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="SeatLicenseExpiredFault">
        <soap:fault name="SeatLicenseExpiredFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="searchRooms">
      <soap:operation soapAction="searchRooms"/>
      <wsdl:input>
        <soap:body use="literal" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
      </wsdl:output>
      <wsdl:fault name="NotLicensedFault">
        <soap:fault name="NotLicensedFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidArgumentFault">
        <soap:fault name="InvalidArgumentFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="GeneralFault">
        <soap:fault name="GeneralFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="SeatLicenseExpiredFault">
        <soap:fault name="SeatLicenseExpiredFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getEntityByEntityID">
      <soap:operation soapAction="getEntityByEntityID"/>
      <wsdl:input>
        <soap:body use="literal" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
      </wsdl:output>
      <wsdl:fault name="NotLicensedFault">
        <soap:fault name="NotLicensedFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidArgumentFault">
        <soap:fault name="InvalidArgumentFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="GeneralFault">
        <soap:fault name="GeneralFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="SeatLicenseExpiredFault">
        <soap:fault name="SeatLicenseExpiredFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getEntityDetailsByEntityID">
      <soap:operation soapAction="getEntityDetailsByEntityID"/>
      <wsdl:input>
        <soap:body use="literal" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
      </wsdl:output>
      <wsdl:fault name="NotLicensedFault">
        <soap:fault name="NotLicensedFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidArgumentFault">
        <soap:fault name="InvalidArgumentFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="GeneralFault">
        <soap:fault name="GeneralFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="SeatLicenseExpiredFault">
        <soap:fault name="SeatLicenseExpiredFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="setThumbnailPhoto">
      <soap:operation soapAction="setThumbnailPhoto"/>
      <wsdl:input>
        <soap:body use="literal" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
      </wsdl:output>
      <wsdl:fault name="NotLicensedFault">
        <soap:fault name="NotLicensedFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="NotAllowedThumbnailPhotoFault">
        <soap:fault name="NotAllowedThumbnailPhotoFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidArgumentFault">
        <soap:fault name="InvalidArgumentFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="GeneralFault">
        <soap:fault name="GeneralFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="FileTooLargeFault">
        <soap:fault name="FileTooLargeFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="SeatLicenseExpiredFault">
        <soap:fault name="SeatLicenseExpiredFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="inviteToConference">
      <soap:operation soapAction="inviteToConference"/>
      <wsdl:input>
        <soap:body use="literal" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
      </wsdl:output>
      <wsdl:fault name="NotLicensedFault">
        <soap:fault name="NotLicensedFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidArgumentFault">
        <soap:fault name="InvalidArgumentFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="GeneralFault">
        <soap:fault name="GeneralFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="ControlMeetingFault">
        <soap:fault name="ControlMeetingFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="SeatLicenseExpiredFault">
        <soap:fault name="SeatLicenseExpiredFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="cancelOutboundCall">
      <soap:operation soapAction="cancelOutboundCall"/>
      <wsdl:input>
        <soap:body use="literal" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
      </wsdl:output>
      <wsdl:fault name="NotLicensedFault">
        <soap:fault name="NotLicensedFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidArgumentFault">
        <soap:fault name="InvalidArgumentFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="GeneralFault">
        <soap:fault name="GeneralFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="ControlMeetingFault">
        <soap:fault name="ControlMeetingFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="SeatLicenseExpiredFault">
        <soap:fault name="SeatLicenseExpiredFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="joinConference">
      <soap:operation soapAction="joinConference"/>
      <wsdl:input>
        <soap:body use="literal" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
      </wsdl:output>
      <wsdl:fault name="NotLicensedFault">
        <soap:fault name="NotLicensedFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidArgumentFault">
        <soap:fault name="InvalidArgumentFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="GeneralFault">
        <soap:fault name="GeneralFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="ConferenceLockedFault">
        <soap:fault name="ConferenceLockedFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="SeatLicenseExpiredFault">
        <soap:fault name="SeatLicenseExpiredFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="WrongPINFault">
        <soap:fault name="WrongPINFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="joinIPCConference">
      <soap:operation soapAction="joinIPCConference"/>
      <wsdl:input>
        <soap:body use="literal" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
      </wsdl:output>
      <wsdl:fault name="NotLicensedFault">
        <soap:fault name="NotLicensedFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidArgumentFault">
        <soap:fault name="InvalidArgumentFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="GeneralFault">
        <soap:fault name="GeneralFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="ConferenceLockedFault">
        <soap:fault name="ConferenceLockedFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="SeatLicenseExpiredFault">
        <soap:fault name="SeatLicenseExpiredFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="WrongPINFault">
        <soap:fault name="WrongPINFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="directCall">
      <soap:operation soapAction="directCall"/>
      <wsdl:input>
        <soap:body use="literal" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
      </wsdl:output>
      <wsdl:fault name="NotLicensedFault">
        <soap:fault name="NotLicensedFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidArgumentFault">
        <soap:fault name="InvalidArgumentFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="GeneralFault">
        <soap:fault name="GeneralFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="SeatLicenseExpiredFault">
        <soap:fault name="SeatLicenseExpiredFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getParticipants">
      <soap:operation soapAction="getParticipants"/>
      <wsdl:input>
        <soap:body use="literal" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
      </wsdl:output>
      <wsdl:fault name="NotLicensedFault">
        <soap:fault name="NotLicensedFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidArgumentFault">
        <soap:fault name="InvalidArgumentFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="GeneralFault">
        <soap:fault name="GeneralFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="ControlMeetingFault">
        <soap:fault name="ControlMeetingFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="SeatLicenseExpiredFault">
        <soap:fault name="SeatLicenseExpiredFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getLectureModeParticipants">
      <soap:operation soapAction="getLectureModeParticipants"/>
      <wsdl:input>
        <soap:body use="literal" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
      </wsdl:output>
      <wsdl:fault name="NotLicensedFault">
        <soap:fault name="NotLicensedFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidArgumentFault">
        <soap:fault name="InvalidArgumentFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="GeneralFault">
        <soap:fault name="GeneralFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="ControlMeetingFault">
        <soap:fault name="ControlMeetingFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="leaveConference">
      <soap:operation soapAction="leaveConference"/>
      <wsdl:input>
        <soap:body use="literal" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
      </wsdl:output>
      <wsdl:fault name="NotLicensedFault">
        <soap:fault name="NotLicensedFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidArgumentFault">
        <soap:fault name="InvalidArgumentFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="GeneralFault">
        <soap:fault name="GeneralFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="ControlMeetingFault">
        <soap:fault name="ControlMeetingFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="SeatLicenseExpiredFault">
        <soap:fault name="SeatLicenseExpiredFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="muteAudio">
      <soap:operation soapAction="muteAudio"/>
      <wsdl:input>
        <soap:body use="literal" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
      </wsdl:output>
      <wsdl:fault name="NotLicensedFault">
        <soap:fault name="NotLicensedFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidArgumentFault">
        <soap:fault name="InvalidArgumentFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="GeneralFault">
        <soap:fault name="GeneralFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="ControlMeetingFault">
        <soap:fault name="ControlMeetingFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="SeatLicenseExpiredFault">
        <soap:fault name="SeatLicenseExpiredFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="unmuteAudio">
      <soap:operation soapAction="unmuteAudio"/>
      <wsdl:input>
        <soap:body use="literal" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
      </wsdl:output>
      <wsdl:fault name="NotLicensedFault">
        <soap:fault name="NotLicensedFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidArgumentFault">
        <soap:fault name="InvalidArgumentFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="GeneralFault">
        <soap:fault name="GeneralFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="ControlMeetingFault">
        <soap:fault name="ControlMeetingFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="SeatLicenseExpiredFault">
        <soap:fault name="SeatLicenseExpiredFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="startVideo">
      <soap:operation soapAction="startVideo"/>
      <wsdl:input>
        <soap:body use="literal" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
      </wsdl:output>
      <wsdl:fault name="NotLicensedFault">
        <soap:fault name="NotLicensedFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidArgumentFault">
        <soap:fault name="InvalidArgumentFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="GeneralFault">
        <soap:fault name="GeneralFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="ControlMeetingFault">
        <soap:fault name="ControlMeetingFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="SeatLicenseExpiredFault">
        <soap:fault name="SeatLicenseExpiredFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="stopVideo">
      <soap:operation soapAction="stopVideo"/>
      <wsdl:input>
        <soap:body use="literal" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
      </wsdl:output>
      <wsdl:fault name="NotLicensedFault">
        <soap:fault name="NotLicensedFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidArgumentFault">
        <soap:fault name="InvalidArgumentFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="GeneralFault">
        <soap:fault name="GeneralFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="ControlMeetingFault">
        <soap:fault name="ControlMeetingFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="SeatLicenseExpiredFault">
        <soap:fault name="SeatLicenseExpiredFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="myAccount">
      <soap:operation soapAction="myAccount"/>
      <wsdl:input>
        <soap:body use="literal" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
      </wsdl:output>
      <wsdl:fault name="NotLicensedFault">
        <soap:fault name="NotLicensedFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidArgumentFault">
        <soap:fault name="InvalidArgumentFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="GeneralFault">
        <soap:fault name="GeneralFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="SeatLicenseExpiredFault">
        <soap:fault name="SeatLicenseExpiredFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createRoomURL">
      <soap:operation soapAction="createRoomURL"/>
      <wsdl:input>
        <soap:body use="literal" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
      </wsdl:output>
      <wsdl:fault name="NotLicensedFault">
        <soap:fault name="NotLicensedFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidArgumentFault">
        <soap:fault name="InvalidArgumentFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="GeneralFault">
        <soap:fault name="GeneralFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="SeatLicenseExpiredFault">
        <soap:fault name="SeatLicenseExpiredFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="removeRoomURL">
      <soap:operation soapAction="removeRoomURL"/>
      <wsdl:input>
        <soap:body use="literal" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
      </wsdl:output>
      <wsdl:fault name="NotLicensedFault">
        <soap:fault name="NotLicensedFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidArgumentFault">
        <soap:fault name="InvalidArgumentFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="GeneralFault">
        <soap:fault name="GeneralFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="SeatLicenseExpiredFault">
        <soap:fault name="SeatLicenseExpiredFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createRoomPIN">
      <soap:operation soapAction="createRoomPIN"/>
      <wsdl:input>
        <soap:body use="literal" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
      </wsdl:output>
      <wsdl:fault name="NotLicensedFault">
        <soap:fault name="NotLicensedFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidArgumentFault">
        <soap:fault name="InvalidArgumentFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="GeneralFault">
        <soap:fault name="GeneralFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="SeatLicenseExpiredFault">
        <soap:fault name="SeatLicenseExpiredFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="removeRoomPIN">
      <soap:operation soapAction="removeRoomPIN"/>
      <wsdl:input>
        <soap:body use="literal" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
      </wsdl:output>
      <wsdl:fault name="NotLicensedFault">
        <soap:fault name="NotLicensedFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidArgumentFault">
        <soap:fault name="InvalidArgumentFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="GeneralFault">
        <soap:fault name="GeneralFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="SeatLicenseExpiredFault">
        <soap:fault name="SeatLicenseExpiredFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createRoom">
      <soap:operation soapAction="createRoom"/>
      <wsdl:input>
        <soap:body use="literal" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
      </wsdl:output>
      <wsdl:fault name="NotLicensedFault">
        <soap:fault name="NotLicensedFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidArgumentFault">
        <soap:fault name="InvalidArgumentFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="GeneralFault">
        <soap:fault name="GeneralFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="SeatLicenseExpiredFault">
        <soap:fault name="SeatLicenseExpiredFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteRoom">
      <soap:operation soapAction="deleteRoom"/>
      <wsdl:input>
        <soap:body use="literal" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
      </wsdl:output>
      <wsdl:fault name="NotLicensedFault">
        <soap:fault name="NotLicensedFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidArgumentFault">
        <soap:fault name="InvalidArgumentFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="GeneralFault">
        <soap:fault name="GeneralFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="SeatLicenseExpiredFault">
        <soap:fault name="SeatLicenseExpiredFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updatePassword">
      <soap:operation soapAction="updatePassword"/>
      <wsdl:input>
        <soap:body use="literal" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
      </wsdl:output>
      <wsdl:fault name="NotLicensedFault">
        <soap:fault name="NotLicensedFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidArgumentFault">
        <soap:fault name="InvalidArgumentFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="GeneralFault">
        <soap:fault name="GeneralFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="SeatLicenseExpiredFault">
        <soap:fault name="SeatLicenseExpiredFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updateLanguage">
      <soap:operation soapAction="updateLanguage"/>
      <wsdl:input>
        <soap:body use="literal" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
      </wsdl:output>
      <wsdl:fault name="NotLicensedFault">
        <soap:fault name="NotLicensedFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidArgumentFault">
        <soap:fault name="InvalidArgumentFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="GeneralFault">
        <soap:fault name="GeneralFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="SeatLicenseExpiredFault">
        <soap:fault name="SeatLicenseExpiredFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="lockRoom">
      <soap:operation soapAction="lockRoom"/>
      <wsdl:input>
        <soap:body use="literal" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
      </wsdl:output>
      <wsdl:fault name="NotLicensedFault">
        <soap:fault name="NotLicensedFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidArgumentFault">
        <soap:fault name="InvalidArgumentFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="GeneralFault">
        <soap:fault name="GeneralFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="ControlMeetingFault">
        <soap:fault name="ControlMeetingFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="SeatLicenseExpiredFault">
        <soap:fault name="SeatLicenseExpiredFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="unlockRoom">
      <soap:operation soapAction="unlockRoom"/>
      <wsdl:input>
        <soap:body use="literal" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
      </wsdl:output>
      <wsdl:fault name="NotLicensedFault">
        <soap:fault name="NotLicensedFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidArgumentFault">
        <soap:fault name="InvalidArgumentFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="GeneralFault">
        <soap:fault name="GeneralFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="ControlMeetingFault">
        <soap:fault name="ControlMeetingFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="SeatLicenseExpiredFault">
        <soap:fault name="SeatLicenseExpiredFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="setMemberMode">
      <soap:operation soapAction="setMemberMode"/>
      <wsdl:input>
        <soap:body use="literal" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
      </wsdl:output>
      <wsdl:fault name="NotLicensedFault">
        <soap:fault name="NotLicensedFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidArgumentFault">
        <soap:fault name="InvalidArgumentFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="GeneralFault">
        <soap:fault name="GeneralFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="SeatLicenseExpiredFault">
        <soap:fault name="SeatLicenseExpiredFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getRecordingProfiles">
      <soap:operation soapAction="getRecordingProfiles"/>
      <wsdl:input>
        <soap:body use="literal" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
      </wsdl:output>
      <wsdl:fault name="NotLicensedFault">
        <soap:fault name="NotLicensedFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidArgumentFault">
        <soap:fault name="InvalidArgumentFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="GeneralFault">
        <soap:fault name="GeneralFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="SeatLicenseExpiredFault">
        <soap:fault name="SeatLicenseExpiredFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="startRecording">
      <soap:operation soapAction="startRecording"/>
      <wsdl:input>
        <soap:body use="literal" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
      </wsdl:output>
      <wsdl:fault name="NotLicensedFault">
        <soap:fault name="NotLicensedFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidArgumentFault">
        <soap:fault name="InvalidArgumentFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="ResourceNotAvailableFault">
        <soap:fault name="ResourceNotAvailableFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="GeneralFault">
        <soap:fault name="GeneralFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="ControlMeetingFault">
        <soap:fault name="ControlMeetingFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="SeatLicenseExpiredFault">
        <soap:fault name="SeatLicenseExpiredFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getPortalVersion">
      <soap:operation soapAction="getPortalVersion"/>
      <wsdl:input>
        <soap:body use="literal" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
      </wsdl:output>
      <wsdl:fault name="NotLicensedFault">
        <soap:fault name="NotLicensedFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidArgumentFault">
        <soap:fault name="InvalidArgumentFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="GeneralFault">
        <soap:fault name="GeneralFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="SeatLicenseExpiredFault">
        <soap:fault name="SeatLicenseExpiredFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="pauseRecording">
      <soap:operation soapAction="pauseRecording"/>
      <wsdl:input>
        <soap:body use="literal" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
      </wsdl:output>
      <wsdl:fault name="NotLicensedFault">
        <soap:fault name="NotLicensedFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidArgumentFault">
        <soap:fault name="InvalidArgumentFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="GeneralFault">
        <soap:fault name="GeneralFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="ControlMeetingFault">
        <soap:fault name="ControlMeetingFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="SeatLicenseExpiredFault">
        <soap:fault name="SeatLicenseExpiredFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="resumeRecording">
      <soap:operation soapAction="resumeRecording"/>
      <wsdl:input>
        <soap:body use="literal" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
      </wsdl:output>
      <wsdl:fault name="NotLicensedFault">
        <soap:fault name="NotLicensedFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidArgumentFault">
        <soap:fault name="InvalidArgumentFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="GeneralFault">
        <soap:fault name="GeneralFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="ControlMeetingFault">
        <soap:fault name="ControlMeetingFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="SeatLicenseExpiredFault">
        <soap:fault name="SeatLicenseExpiredFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="stopRecording">
      <soap:operation soapAction="stopRecording"/>
      <wsdl:input>
        <soap:body use="literal" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
      </wsdl:output>
      <wsdl:fault name="NotLicensedFault">
        <soap:fault name="NotLicensedFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidArgumentFault">
        <soap:fault name="InvalidArgumentFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="GeneralFault">
        <soap:fault name="GeneralFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="ControlMeetingFault">
        <soap:fault name="ControlMeetingFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="SeatLicenseExpiredFault">
        <soap:fault name="SeatLicenseExpiredFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createWebcastURL">
      <soap:operation soapAction="createWebcastURL"/>
      <wsdl:input>
        <soap:body use="literal" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
      </wsdl:output>
      <wsdl:fault name="NotLicensedFault">
        <soap:fault name="NotLicensedFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidArgumentFault">
        <soap:fault name="InvalidArgumentFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="GeneralFault">
        <soap:fault name="GeneralFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="SeatLicenseExpiredFault">
        <soap:fault name="SeatLicenseExpiredFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createWebcastPIN">
      <soap:operation soapAction="createWebcastPIN"/>
      <wsdl:input>
        <soap:body use="literal" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
      </wsdl:output>
      <wsdl:fault name="NotLicensedFault">
        <soap:fault name="NotLicensedFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidArgumentFault">
        <soap:fault name="InvalidArgumentFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="GeneralFault">
        <soap:fault name="GeneralFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="SeatLicenseExpiredFault">
        <soap:fault name="SeatLicenseExpiredFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="removeWebcastURL">
      <soap:operation soapAction="removeWebcastURL"/>
      <wsdl:input>
        <soap:body use="literal" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
      </wsdl:output>
      <wsdl:fault name="NotLicensedFault">
        <soap:fault name="NotLicensedFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidArgumentFault">
        <soap:fault name="InvalidArgumentFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="GeneralFault">
        <soap:fault name="GeneralFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="SeatLicenseExpiredFault">
        <soap:fault name="SeatLicenseExpiredFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="removeWebcastPIN">
      <soap:operation soapAction="removeWebcastPIN"/>
      <wsdl:input>
        <soap:body use="literal" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
      </wsdl:output>
      <wsdl:fault name="NotLicensedFault">
        <soap:fault name="NotLicensedFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidArgumentFault">
        <soap:fault name="InvalidArgumentFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="GeneralFault">
        <soap:fault name="GeneralFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="SeatLicenseExpiredFault">
        <soap:fault name="SeatLicenseExpiredFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getWebcastURL">
      <soap:operation soapAction="getWebcastURL"/>
      <wsdl:input>
        <soap:body use="literal" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
      </wsdl:output>
      <wsdl:fault name="NotLicensedFault">
        <soap:fault name="NotLicensedFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidArgumentFault">
        <soap:fault name="InvalidArgumentFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="GeneralFault">
        <soap:fault name="GeneralFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="SeatLicenseExpiredFault">
        <soap:fault name="SeatLicenseExpiredFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getUserName">
      <soap:operation soapAction="getUserName"/>
      <wsdl:input>
        <soap:body use="literal" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
      </wsdl:output>
      <wsdl:fault name="NotLicensedFault">
        <soap:fault name="NotLicensedFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidArgumentFault">
        <soap:fault name="InvalidArgumentFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="GeneralFault">
        <soap:fault name="GeneralFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getEntityByRoomKey">
      <soap:operation soapAction="getEntityByRoomKey"/>
      <wsdl:input>
        <soap:body use="literal" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
      </wsdl:output>
      <wsdl:fault name="NotLicensedFault">
        <soap:fault name="NotLicensedFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidArgumentFault">
        <soap:fault name="InvalidArgumentFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="GeneralFault">
        <soap:fault name="GeneralFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getInviteContent">
      <soap:operation soapAction="getInviteContent"/>
      <wsdl:input>
        <soap:body use="literal" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
      </wsdl:output>
      <wsdl:fault name="NotLicensedFault">
        <soap:fault name="NotLicensedFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidArgumentFault">
        <soap:fault name="InvalidArgumentFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="GeneralFault">
        <soap:fault name="GeneralFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getRoomProfiles">
      <soap:operation soapAction="getRoomProfiles"/>
      <wsdl:input>
        <soap:body use="literal" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
      </wsdl:output>
      <wsdl:fault name="NotLicensedFault">
        <soap:fault name="NotLicensedFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidArgumentFault">
        <soap:fault name="InvalidArgumentFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="GeneralFault">
        <soap:fault name="GeneralFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getRoomProfile">
      <soap:operation soapAction="getRoomProfile"/>
      <wsdl:input>
        <soap:body use="literal" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
      </wsdl:output>
      <wsdl:fault name="NotLicensedFault">
        <soap:fault name="NotLicensedFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidArgumentFault">
        <soap:fault name="InvalidArgumentFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="GeneralFault">
        <soap:fault name="GeneralFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="setRoomProfile">
      <soap:operation soapAction="setRoomProfile"/>
      <wsdl:input>
        <soap:body use="literal" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
      </wsdl:output>
      <wsdl:fault name="NotLicensedFault">
        <soap:fault name="NotLicensedFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidArgumentFault">
        <soap:fault name="InvalidArgumentFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="GeneralFault">
        <soap:fault name="GeneralFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="removeRoomProfile">
      <soap:operation soapAction="removeRoomProfile"/>
      <wsdl:input>
        <soap:body use="literal" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
      </wsdl:output>
      <wsdl:fault name="NotLicensedFault">
        <soap:fault name="NotLicensedFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidArgumentFault">
        <soap:fault name="InvalidArgumentFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="GeneralFault">
        <soap:fault name="GeneralFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createModeratorURL">
      <soap:operation soapAction="createModeratorURL"/>
      <wsdl:input>
        <soap:body use="literal" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
      </wsdl:output>
      <wsdl:fault name="NotLicensedFault">
        <soap:fault name="NotLicensedFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidArgumentFault">
        <soap:fault name="InvalidArgumentFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="GeneralFault">
        <soap:fault name="GeneralFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="ControlMeetingFault">
        <soap:fault name="ControlMeetingFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="removeModeratorURL">
      <soap:operation soapAction="removeModeratorURL"/>
      <wsdl:input>
        <soap:body use="literal" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
      </wsdl:output>
      <wsdl:fault name="NotLicensedFault">
        <soap:fault name="NotLicensedFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidArgumentFault">
        <soap:fault name="InvalidArgumentFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="GeneralFault">
        <soap:fault name="GeneralFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="ControlMeetingFault">
        <soap:fault name="ControlMeetingFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getModeratorURL">
      <soap:operation soapAction="getModeratorURL"/>
      <wsdl:input>
        <soap:body use="literal" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
      </wsdl:output>
      <wsdl:fault name="NotLicensedFault">
        <soap:fault name="NotLicensedFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidArgumentFault">
        <soap:fault name="InvalidArgumentFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="GeneralFault">
        <soap:fault name="GeneralFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="ControlMeetingFault">
        <soap:fault name="ControlMeetingFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getModeratorURLWithToken">
      <soap:operation soapAction="getModeratorURLWithToken"/>
      <wsdl:input>
        <soap:body use="literal" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
      </wsdl:output>
      <wsdl:fault name="NotLicensedFault">
        <soap:fault name="NotLicensedFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidArgumentFault">
        <soap:fault name="InvalidArgumentFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="GeneralFault">
        <soap:fault name="GeneralFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="ControlMeetingFault">
        <soap:fault name="ControlMeetingFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createModeratorPIN">
      <soap:operation soapAction="createRoomModeratorPIN"/>
      <wsdl:input>
        <soap:body use="literal" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
      </wsdl:output>
      <wsdl:fault name="NotLicensedFault">
        <soap:fault name="NotLicensedFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidArgumentFault">
        <soap:fault name="InvalidArgumentFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidModeratorPINFormatFault">
        <soap:fault name="InvalidModeratorPINFormatFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="GeneralFault">
        <soap:fault name="GeneralFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="ControlMeetingFault">
        <soap:fault name="ControlMeetingFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="removeModeratorPIN">
      <soap:operation soapAction="removeRoomModeratorPIN"/>
      <wsdl:input>
        <soap:body use="literal" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
      </wsdl:output>
      <wsdl:fault name="NotLicensedFault">
        <soap:fault name="NotLicensedFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidArgumentFault">
        <soap:fault name="InvalidArgumentFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="GeneralFault">
        <soap:fault name="GeneralFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="ControlMeetingFault">
        <soap:fault name="ControlMeetingFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getConferenceID">
      <soap:operation soapAction="getConferenceID"/>
      <wsdl:input>
        <soap:body use="literal" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
      </wsdl:output>
      <wsdl:fault name="NotLicensedFault">
        <soap:fault name="NotLicensedFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InPointToPointCallFault">
        <soap:fault name="InPointToPointCallFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="GeneralFault">
        <soap:fault name="GeneralFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="generateAuthToken">
      <soap:operation soapAction="generateAuthToken"/>
      <wsdl:input>
        <soap:body use="literal" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
      </wsdl:output>
      <wsdl:fault name="EndpointNotBoundFault">
        <soap:fault name="EndpointNotBoundFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="NotLicensedFault">
        <soap:fault name="NotLicensedFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidArgumentFault">
        <soap:fault name="InvalidArgumentFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="GeneralFault">
        <soap:fault name="GeneralFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="SeatLicenseExpiredFault">
        <soap:fault name="SeatLicenseExpiredFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createScheduledRoom">
      <soap:operation soapAction="createScheduledRoom"/>
      <wsdl:input>
        <soap:body use="literal" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
      </wsdl:output>
      <wsdl:fault name="ScheduledRoomCreationFault">
        <soap:fault name="ScheduledRoomCreationFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="NotLicensedFault">
        <soap:fault name="NotLicensedFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidArgumentFault">
        <soap:fault name="InvalidArgumentFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="GeneralFault">
        <soap:fault name="GeneralFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="SeatLicenseExpiredFault">
        <soap:fault name="SeatLicenseExpiredFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteScheduledRoom">
      <soap:operation soapAction="deleteScheduledRoom"/>
      <wsdl:input>
        <soap:body use="literal" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
      </wsdl:output>
      <wsdl:fault name="NotLicensedFault">
        <soap:fault name="NotLicensedFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="RoomNotFoundFault">
        <soap:fault name="RoomNotFoundFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidArgumentFault">
        <soap:fault name="InvalidArgumentFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="GeneralFault">
        <soap:fault name="GeneralFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createPublicRoom">
      <soap:operation soapAction="createPublicRoom"/>
      <wsdl:input>
        <soap:body use="literal" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
      </wsdl:output>
      <wsdl:fault name="NotAllowedToCreateFault">
        <soap:fault name="NotAllowedToCreateFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="NotLicensedFault">
        <soap:fault name="NotLicensedFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidArgumentFault">
        <soap:fault name="InvalidArgumentFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PublicRoomCreationFault">
        <soap:fault name="PublicRoomCreationFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="GeneralFault">
        <soap:fault name="GeneralFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updatePublicRoomDescription">
      <soap:operation soapAction="updatePublicRoomDescription"/>
      <wsdl:input>
        <soap:body use="literal" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
      </wsdl:output>
      <wsdl:fault name="NotLicensedFault">
        <soap:fault name="NotLicensedFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="RoomNotFoundFault">
        <soap:fault name="RoomNotFoundFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidArgumentFault">
        <soap:fault name="InvalidArgumentFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="GeneralFault">
        <soap:fault name="GeneralFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PublicRoomDescUpdationFault">
        <soap:fault name="PublicRoomDescUpdationFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getPortalFeatures">
      <soap:operation soapAction="getPortalFeatures"/>
      <wsdl:input>
        <soap:body use="literal" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
      </wsdl:output>
      <wsdl:fault name="NotLicensedFault">
        <soap:fault name="NotLicensedFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="GeneralFault">
        <soap:fault name="GeneralFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="setEndpointDetails">
      <soap:operation soapAction="setEndpointDetails"/>
      <wsdl:input>
        <soap:body use="literal" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
      </wsdl:output>
      <wsdl:fault name="EndpointNotBoundFault">
        <soap:fault name="EndpointNotBoundFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="NotLicensedFault">
        <soap:fault name="NotLicensedFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidArgumentFault">
        <soap:fault name="InvalidArgumentFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="GeneralFault">
        <soap:fault name="GeneralFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getActiveSessions">
      <soap:operation soapAction="getActiveSessions"/>
      <wsdl:input>
        <soap:body use="literal" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
      </wsdl:output>
      <wsdl:fault name="NotLicensedFault">
        <soap:fault name="NotLicensedFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="GeneralFault">
        <soap:fault name="GeneralFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="logoutAllOtherSessions">
      <soap:operation soapAction="logoutAllOtherSessions"/>
      <wsdl:input>
        <soap:body use="literal" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
      </wsdl:output>
      <wsdl:fault name="NotLicensedFault">
        <soap:fault name="NotLicensedFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="GeneralFault">
        <soap:fault name="GeneralFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="disconnectConferenceAll">
      <soap:operation soapAction="disconnectConferenceAll"/>
      <wsdl:input>
        <soap:body use="literal" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
      </wsdl:output>
      <wsdl:fault name="NotLicensedFault">
        <soap:fault name="NotLicensedFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidArgumentFault">
        <soap:fault name="InvalidArgumentFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="GeneralFault">
        <soap:fault name="GeneralFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="ControlMeetingFault">
        <soap:fault name="ControlMeetingFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="muteAudioServerAll">
      <soap:operation soapAction="muteAudioServerAll"/>
      <wsdl:input>
        <soap:body use="literal" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
      </wsdl:output>
      <wsdl:fault name="NotLicensedFault">
        <soap:fault name="NotLicensedFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidArgumentFault">
        <soap:fault name="InvalidArgumentFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="GeneralFault">
        <soap:fault name="GeneralFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="ControlMeetingFault">
        <soap:fault name="ControlMeetingFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="muteAudioClientAll">
      <soap:operation soapAction="muteAudioClientAll"/>
      <wsdl:input>
        <soap:body use="literal" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
      </wsdl:output>
      <wsdl:fault name="NotLicensedFault">
        <soap:fault name="NotLicensedFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidArgumentFault">
        <soap:fault name="InvalidArgumentFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="GeneralFault">
        <soap:fault name="GeneralFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="ControlMeetingFault">
        <soap:fault name="ControlMeetingFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="muteVideoServerAll">
      <soap:operation soapAction="muteVideoServerAll"/>
      <wsdl:input>
        <soap:body use="literal" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
      </wsdl:output>
      <wsdl:fault name="NotLicensedFault">
        <soap:fault name="NotLicensedFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidArgumentFault">
        <soap:fault name="InvalidArgumentFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="GeneralFault">
        <soap:fault name="GeneralFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="ControlMeetingFault">
        <soap:fault name="ControlMeetingFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="muteVideoClientAll">
      <soap:operation soapAction="muteVideoClientAll"/>
      <wsdl:input>
        <soap:body use="literal" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
      </wsdl:output>
      <wsdl:fault name="NotLicensedFault">
        <soap:fault name="NotLicensedFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidArgumentFault">
        <soap:fault name="InvalidArgumentFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="GeneralFault">
        <soap:fault name="GeneralFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="ControlMeetingFault">
        <soap:fault name="ControlMeetingFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getOnetimeAccessUrl">
      <soap:operation soapAction="getOnetimeAccessUrl"/>
      <wsdl:input>
        <soap:body use="literal" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
      </wsdl:output>
      <wsdl:fault name="NotLicensedFault">
        <soap:fault name="NotLicensedFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidArgumentFault">
        <soap:fault name="InvalidArgumentFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="GeneralFault">
        <soap:fault name="GeneralFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getRoomAccessOptions">
      <soap:operation soapAction="getRoomAccessOptions"/>
      <wsdl:input>
        <soap:body use="literal" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
      </wsdl:output>
      <wsdl:fault name="NotLicensedFault">
        <soap:fault name="NotLicensedFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidArgumentFault">
        <soap:fault name="InvalidArgumentFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="GeneralFault">
        <soap:fault name="GeneralFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getPortalPrefix">
      <soap:operation soapAction="getPortalPrefix"/>
      <wsdl:input>
        <soap:body use="literal" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
      </wsdl:output>
      <wsdl:fault name="NotLicensedFault">
        <soap:fault name="NotLicensedFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="GeneralFault">
        <soap:fault name="GeneralFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PrefixNotConfiguredFault">
        <soap:fault name="PrefixNotConfiguredFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getLoginAndWelcomeBanner">
      <soap:operation soapAction="getLoginAndWelcomeBanner"/>
      <wsdl:input>
        <soap:body use="literal" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
      </wsdl:output>
      <wsdl:fault name="NotLicensedFault">
        <soap:fault name="NotLicensedFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="GeneralFault">
        <soap:fault name="GeneralFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="FeatureNotAvailableFault">
        <soap:fault name="FeatureNotAvailableFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getUserAccountType">
      <soap:operation soapAction="getUserAccountType"/>
      <wsdl:input>
        <soap:body use="literal" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
      </wsdl:output>
      <wsdl:fault name="NotLicensedFault">
        <soap:fault name="NotLicensedFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="GeneralFault">
        <soap:fault name="GeneralFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="startLectureMode">
      <soap:operation soapAction="startLectureMode"/>
      <wsdl:input>
        <soap:body use="literal" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
      </wsdl:output>
      <wsdl:fault name="NotLicensedFault">
        <soap:fault name="NotLicensedFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidArgumentFault">
        <soap:fault name="InvalidArgumentFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="GeneralFault">
        <soap:fault name="GeneralFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="ControlMeetingFault">
        <soap:fault name="ControlMeetingFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="stopLectureMode">
      <soap:operation soapAction="stopLectureMode"/>
      <wsdl:input>
        <soap:body use="literal" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
      </wsdl:output>
      <wsdl:fault name="NotLicensedFault">
        <soap:fault name="NotLicensedFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidArgumentFault">
        <soap:fault name="InvalidArgumentFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="GeneralFault">
        <soap:fault name="GeneralFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="ControlMeetingFault">
        <soap:fault name="ControlMeetingFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="raiseHand">
      <soap:operation soapAction="raiseHand"/>
      <wsdl:input>
        <soap:body use="literal" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
      </wsdl:output>
      <wsdl:fault name="NotLicensedFault">
        <soap:fault name="NotLicensedFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidArgumentFault">
        <soap:fault name="InvalidArgumentFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="GeneralFault">
        <soap:fault name="GeneralFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="unraiseHand">
      <soap:operation soapAction="unraiseHand"/>
      <wsdl:input>
        <soap:body use="literal" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
      </wsdl:output>
      <wsdl:fault name="NotLicensedFault">
        <soap:fault name="NotLicensedFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidArgumentFault">
        <soap:fault name="InvalidArgumentFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="GeneralFault">
        <soap:fault name="GeneralFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="dismissRaisedHand">
      <soap:operation soapAction="dismissRaisedHand"/>
      <wsdl:input>
        <soap:body use="literal" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
      </wsdl:output>
      <wsdl:fault name="NotLicensedFault">
        <soap:fault name="NotLicensedFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidArgumentFault">
        <soap:fault name="InvalidArgumentFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="GeneralFault">
        <soap:fault name="GeneralFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="ControlMeetingFault">
        <soap:fault name="ControlMeetingFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="dismissAllRaisedHand">
      <soap:operation soapAction="dismissAllRaisedHand"/>
      <wsdl:input>
        <soap:body use="literal" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
      </wsdl:output>
      <wsdl:fault name="NotLicensedFault">
        <soap:fault name="NotLicensedFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidArgumentFault">
        <soap:fault name="InvalidArgumentFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="GeneralFault">
        <soap:fault name="GeneralFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="ControlMeetingFault">
        <soap:fault name="ControlMeetingFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="setPresenter">
      <soap:operation soapAction="setPresenter"/>
      <wsdl:input>
        <soap:body use="literal" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
      </wsdl:output>
      <wsdl:fault name="NotLicensedFault">
        <soap:fault name="NotLicensedFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidArgumentFault">
        <soap:fault name="InvalidArgumentFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="GeneralFault">
        <soap:fault name="GeneralFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="ControlMeetingFault">
        <soap:fault name="ControlMeetingFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="removePresenter">
      <soap:operation soapAction="removePresenter"/>
      <wsdl:input>
        <soap:body use="literal" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
      </wsdl:output>
      <wsdl:fault name="NotLicensedFault">
        <soap:fault name="NotLicensedFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidArgumentFault">
        <soap:fault name="InvalidArgumentFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="GeneralFault">
        <soap:fault name="GeneralFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="ControlMeetingFault">
        <soap:fault name="ControlMeetingFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getVidyoReplayLibrary">
      <soap:operation soapAction="getVidyoReplayLibrary"/>
      <wsdl:input>
        <soap:body use="literal" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
      </wsdl:output>
      <wsdl:fault name="VidyoReplayNotAvailableFault">
        <soap:fault name="VidyoReplayNotAvailableFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="NotLicensedFault">
        <soap:fault name="NotLicensedFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="GeneralFault">
        <soap:fault name="GeneralFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="whatIsMyIPAddress">
      <soap:operation soapAction="whatIsMyIPAddress"/>
      <wsdl:input>
        <soap:body use="literal" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
      </wsdl:output>
      <wsdl:fault name="NotLicensedFault">
        <soap:fault name="NotLicensedFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="GeneralFault">
        <soap:fault name="GeneralFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getChangePasswordHtmlUrlWithToken">
      <soap:operation soapAction="getChangePasswordHtmlUrlWithToken"/>
      <wsdl:input>
        <soap:body use="literal" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
      </wsdl:output>
      <wsdl:fault name="NotLicensedFault">
        <soap:fault name="NotLicensedFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="GeneralFault">
        <soap:fault name="GeneralFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getPINLengthRange">
      <soap:operation soapAction="getPINLengthRange"/>
      <wsdl:input>
        <soap:body use="literal" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
      </wsdl:output>
      <wsdl:fault name="NotLicensedFault">
        <soap:fault name="NotLicensedFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="GeneralFault">
        <soap:fault name="GeneralFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="silenceSpeakerServer">
      <soap:operation soapAction="silenceSpeakerServer"/>
      <wsdl:input>
        <soap:body use="literal" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
      </wsdl:output>
      <wsdl:fault name="NotLicensedFault">
        <soap:fault name="NotLicensedFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidConferenceFault">
        <soap:fault name="InvalidConferenceFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidParticipantFault">
        <soap:fault name="InvalidParticipantFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="silenceSpeakerServerAll">
      <soap:operation soapAction="silenceSpeakerServerAll"/>
      <wsdl:input>
        <soap:body use="literal" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
      </wsdl:output>
      <wsdl:fault name="NotLicensedFault">
        <soap:fault name="NotLicensedFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidConferenceFault">
        <soap:fault name="InvalidConferenceFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getLogAggregationServer">
      <soap:operation soapAction="getLogAggregationServer"/>
      <wsdl:input>
        <soap:body use="literal" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
      </wsdl:output>
      <wsdl:fault name="LogAggregationDisabledFault">
        <soap:fault name="LogAggregationDisabledFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createTestcallRoom">
      <soap:operation soapAction="createTestcallRoom"/>
      <wsdl:input>
        <soap:body use="literal" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
      </wsdl:output>
      <wsdl:fault name="TestcallRoomCreationFault">
        <soap:fault name="TestcallRoomCreationFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="NotLicensedFault">
        <soap:fault name="NotLicensedFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidArgumentFault">
        <soap:fault name="InvalidArgumentFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="GeneralFault">
        <soap:fault name="GeneralFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="SeatLicenseExpiredFault">
        <soap:fault name="SeatLicenseExpiredFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="muteAudioLocal">
      <soap:operation soapAction="muteAudioLocal"/>
      <wsdl:input>
        <soap:body use="literal" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
      </wsdl:output>    
      <wsdl:fault name="NotLicensedFault">
        <soap:fault name="NotLicensedFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidArgumentFault">
        <soap:fault name="InvalidArgumentFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="GeneralFault">
        <soap:fault name="GeneralFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="ControlMeetingFault">
        <soap:fault name="ControlMeetingFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="SeatLicenseExpiredFault">
        <soap:fault name="SeatLicenseExpiredFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="muteVideoLocal">
      <soap:operation soapAction="muteVideoLocal"/>
      <wsdl:input>
        <soap:body use="literal" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
      </wsdl:output>    
      <wsdl:fault name="NotLicensedFault">
        <soap:fault name="NotLicensedFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidArgumentFault">
        <soap:fault name="InvalidArgumentFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="GeneralFault">
        <soap:fault name="GeneralFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="ControlMeetingFault">
        <soap:fault name="ControlMeetingFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="SeatLicenseExpiredFault">
        <soap:fault name="SeatLicenseExpiredFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>         
  </wsdl:binding>
  <wsdl:service name="VidyoPortalUserService">
    <wsdl:port name="VidyoPortalUserServicePort" binding="VidyoPortalUserServiceBinding">
      <soap:address location="http://localhost:8080/services/v1_1/VidyoPortalUserService"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>
